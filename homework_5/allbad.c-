## C-S22
char ant()  begin  return 111;  end 

bat(bool a; int c)  begin 
   int b;

   a <- 222;
   b <- true;
   c <- 'z';

   if a>222 then 333;
   if a<333 then 444; else 555;
   if a<=666 then if a>=777 then 888; else 555;
   while 999=a do 1010;
   if b then if not b then while b and true do 1111; else 1212;
   if b then if not b then while b or true do 1313; else 1414; else 1515;
   if (b<-true) then 1616;

   while false do break;

   a+1717;
   1818-a;
   a*1919;
   2020/a;
   a%2121;

   a+=1;
   a-=2;
   a*=3;
   a/=4;

   -a;
   not b;
   ?a;
 end 

bool cat()
 begin 
   char a; int b; bool c;
   bool aa[3]; char ba[4]; int ca[5];

   aa[2];
   ba[a] <- b;
   ca[aa[1]] <- c;
   aa[aa];
   cat[3];
   cat(cat);
   
   *ba;

   for z <- aa to aa do z + z;
   for z <- ba to aa by aa do b and b;
   for z <- 3+4 to 7*8 by 15%3 do  begin 
       a <- z;
       z <- a;
    end 

   for z <- 1 to 10 do z + z;
   for z <- 3 to 201 by 11 do z <- z;  ## illegal?
   for z <- 0 to 10 do  begin 
       a <- z;
    end 

   aa <- aa;
   ba = ba;
   ca != ca;
   aa > aa;
   ba >= ba;
   ca < ca;
   aa <= aa;

   ca <- "dogs are great";
   
   return aa;
 end 

dog(int i)  begin 
   if i=3 then  begin 
       int i;
       i<-i;
       return;
    end 
 end 


elk(int a, a)
 begin 
   int a;
   b <- a;
    begin 
        int a, b;
        c <- c;
        c <- b;
        b <- b;
    end 
 end 

int mane()
 begin 
   static bool bbb;
   static char ccc[5];
   
   ?ccc;
   ccc/ccc;
   *bbb;
   bbb(bbb);
   ant();
   bat(676, 'g');
   ccc[3] <- cat();
   bat(ant(), cat());
   bbb <- ccc[2]!='r';
   dog() + cat();

   return ant() + 807;
 end 

int mane;

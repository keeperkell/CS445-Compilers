## C-S22
int showInt(int x)
 begin 
    output(x);
    outnl();
 end 

int showIntArray(int x[], size)
 begin 
    int i;
    i <- 0;
    while i<size do  begin 
        output(x[i]);
        i <- i + 1;
     end 
    outnl();
 end 

int showBool(bool x)
 begin 
    outputb(x);
    outnl();
 end 

bool truth()
 begin 
    return true;
 end 

int magic()
 begin 
    return 666;
 end 

int sqr(int x)
 begin 
    return x*x;
 end 

int add(int x, y)
 begin 
    return x+y;
 end 

int mul(int x, y)
 begin 
    return x*y;
 end 

int g;

caller(int x, y[])
 begin 
    int z;
    int a;

    a <- 666;
    g <- 777;

    z <- sqr(x);
    output(z);
    outnl();

    z <- sqr(y[7]);
    output(z);
    outnl();

    z <- sqr(a);
    output(z);
    outnl();

    z <- sqr(g);
    output(z);
    outnl();
 end 

swap(int x[], z1, z2)
 begin 
    int tmp;
    tmp <- x[z1];
    x[z1] <- x[z2];
    x[z2] <- tmp;
 end 

main()
 begin 
    int p, q, r[10], s[10];

    p <- 0;
    while p<10 do  begin 
          r[p] <- p;
          p++;
     end 

    p <- 111;
    q <- 222;
    r[7] <- 333;
    s[7] <- 444;

    showInt(p);
    
    showIntArray(r, 10);

    showBool(truth());

    output(showInt(p));         ## use default return value
    output(showBool(truth()));  ## use default return value

    caller(p, r);

    output(add(add(p, q), mul(p, q)));
    outnl();
    r[9] <- 555;
    swap(r, 7, 9);
    output(r[9]);
    outnl();
    output(2*add(add(3*4, 5*6)*7, add(9*10, 11*12)*13));
    outnl();
 end 

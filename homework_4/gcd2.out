Func: gcd returns type int [line: 4]
.   Child: 0  Parm: u of type int [line: 4]
.   Sibling: 1  Parm: v of type int [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op: = of type bool [line: 6]
.   .   .   .   Child: 0  Id: v of type int [line: 6]
.   .   .   .   Child: 1  Const 0 of type int [line: 6]
.   .   .   Child: 1  Return [line: 7]
.   .   .   .   Child: 0  Id: u of type int [line: 7]
.   .   .   Child: 2  Return [line: 9]
.   .   .   .   Child: 0  Call: gcd of type int [line: 9]
.   .   .   .   .   Child: 0  Id: v of type int [line: 9]
.   .   .   .   .   Sibling: 1  Op: - of type int [line: 9]
.   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 9]
.   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]
.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]
.   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]
Sibling: 1  Func: main returns type void [line: 12]
.   Child: 1  Compound [line: 13]
.   .   Child: 1  Call: output of type void [line: 14]
.   .   .   Child: 0  Call: gcd of type int [line: 14]
.   .   .   .   Child: 0  Call: input of type int [line: 14]
.   .   .   .   Sibling: 1  Call: input of type int [line: 14]
.   .   Sibling: 1  Call: outnl of type void [line: 15]
Number of warnings: 0
Number of errors: 0

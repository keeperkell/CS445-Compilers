WARNING(40): Variable 'aa' may be uninitialized when used here.
WARNING(41): Variable 'b' may be uninitialized when used here.
WARNING(42): Variable 'c' may be uninitialized when used here.
WARNING(48): The variable 'z' seems not to be used.
WARNING(70): Variable 'i' may be uninitialized when used here.
Func: ant returns type int [line: 1]
.   Child: 1  Compound [line: 1]
.   .   Child: 1  Return [line: 1]
.   .   .   Child: 0  Const 111 of type int [line: 1]
Sibling: 1  Func: bat returns type void [line: 2]
.   Child: 0  Parm: a of type int [line: 2]
.   Sibling: 1  Parm: c of type char [line: 2]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: b of type bool [line: 3]
.   .   .   Child: 0  Const false of type bool [line: 3]
.   .   Child: 1  Assign: <- of type int [line: 5]
.   .   .   Child: 0  Id: a of type int [line: 5]
.   .   .   Child: 1  Const 222 of type int [line: 5]
.   .   Sibling: 1  Assign: <- of type bool [line: 6]
.   .   .   Child: 0  Id: b of type bool [line: 6]
.   .   .   Child: 1  Const true of type bool [line: 6]
.   .   Sibling: 2  Assign: <- of type char [line: 7]
.   .   .   Child: 0  Id: c of type char [line: 7]
.   .   .   Child: 1  Const 'z' of type char [line: 7]
.   .   Sibling: 3  If [line: 9]
.   .   .   Child: 0  Op: > of type bool [line: 9]
.   .   .   .   Child: 0  Id: a of type int [line: 9]
.   .   .   .   Child: 1  Const 222 of type int [line: 9]
.   .   .   Child: 1  Const 333 of type int [line: 9]
.   .   Sibling: 4  If [line: 10]
.   .   .   Child: 0  Op: < of type bool [line: 10]
.   .   .   .   Child: 0  Id: a of type int [line: 10]
.   .   .   .   Child: 1  Const 333 of type int [line: 10]
.   .   .   Child: 1  Const 444 of type int [line: 10]
.   .   .   Child: 2  Const 555 of type int [line: 10]
.   .   Sibling: 5  If [line: 11]
.   .   .   Child: 0  Op: <= of type bool [line: 11]
.   .   .   .   Child: 0  Id: a of type int [line: 11]
.   .   .   .   Child: 1  Const 666 of type int [line: 11]
.   .   .   Child: 1  If [line: 11]
.   .   .   .   Child: 0  Op: >= of type bool [line: 11]
.   .   .   .   .   Child: 0  Id: a of type int [line: 11]
.   .   .   .   .   Child: 1  Const 777 of type int [line: 11]
.   .   .   .   Child: 1  Const 888 of type int [line: 11]
.   .   .   .   Child: 2  Const 555 of type int [line: 11]
.   .   Sibling: 6  While [line: 12]
.   .   .   Child: 0  Op: = of type bool [line: 12]
.   .   .   .   Child: 0  Const 999 of type int [line: 12]
.   .   .   .   Child: 1  Id: a of type int [line: 12]
.   .   .   Child: 1  Const 1010 of type int [line: 12]
.   .   Sibling: 7  If [line: 13]
.   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   Child: 1  If [line: 13]
.   .   .   .   Child: 0  Op: not of type bool [line: 13]
.   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   .   Child: 1  While [line: 13]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 13]
.   .   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
.   .   .   .   .   .   Child: 1  Const true of type bool [line: 13]
.   .   .   .   .   Child: 1  Const 1111 of type int [line: 13]
.   .   .   .   Child: 2  Const 1212 of type int [line: 13]
.   .   Sibling: 8  If [line: 14]
.   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   Child: 1  If [line: 14]
.   .   .   .   Child: 0  Op: not of type bool [line: 14]
.   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   .   Child: 1  While [line: 14]
.   .   .   .   .   Child: 0  Op: or of type bool [line: 14]
.   .   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
.   .   .   .   .   .   Child: 1  Const true of type bool [line: 14]
.   .   .   .   .   Child: 1  Const 1313 of type int [line: 14]
.   .   .   .   Child: 2  Const 1414 of type int [line: 14]
.   .   .   Child: 2  Const 1515 of type int [line: 14]
.   .   Sibling: 9  If [line: 15]
.   .   .   Child: 0  Assign: <- of type bool [line: 15]
.   .   .   .   Child: 0  Id: b of type bool [line: 15]
.   .   .   .   Child: 1  Const true of type bool [line: 15]
.   .   .   Child: 1  Const 1616 of type int [line: 15]
.   .   Sibling: 10  While [line: 17]
.   .   .   Child: 0  Const false of type bool [line: 17]
.   .   .   Child: 1  Break [line: 17]
.   .   Sibling: 11  Op: + of type int [line: 19]
.   .   .   Child: 0  Id: a of type int [line: 19]
.   .   .   Child: 1  Const 1717 of type int [line: 19]
.   .   Sibling: 12  Op: - of type int [line: 20]
.   .   .   Child: 0  Const 1818 of type int [line: 20]
.   .   .   Child: 1  Id: a of type int [line: 20]
.   .   Sibling: 13  Op: * of type int [line: 21]
.   .   .   Child: 0  Id: a of type int [line: 21]
.   .   .   Child: 1  Const 1919 of type int [line: 21]
.   .   Sibling: 14  Op: / of type int [line: 22]
.   .   .   Child: 0  Const 2020 of type int [line: 22]
.   .   .   Child: 1  Id: a of type int [line: 22]
.   .   Sibling: 15  Op: % of type int [line: 23]
.   .   .   Child: 0  Id: a of type int [line: 23]
.   .   .   Child: 1  Const 2121 of type int [line: 23]
.   .   Sibling: 16  Assign: += of type int [line: 25]
.   .   .   Child: 0  Id: a of type int [line: 25]
.   .   .   Child: 1  Const 1 of type int [line: 25]
.   .   Sibling: 17  Assign: -= of type int [line: 26]
.   .   .   Child: 0  Id: a of type int [line: 26]
.   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   Sibling: 18  Assign: *= of type int [line: 27]
.   .   .   Child: 0  Id: a of type int [line: 27]
.   .   .   Child: 1  Const 3 of type int [line: 27]
.   .   Sibling: 19  Assign: /= of type int [line: 28]
.   .   .   Child: 0  Id: a of type int [line: 28]
.   .   .   Child: 1  Const 4 of type int [line: 28]
.   .   Sibling: 20  Op: chsign of type int [line: 30]
.   .   .   Child: 0  Id: a of type int [line: 30]
.   .   Sibling: 21  Op: not of type bool [line: 31]
.   .   .   Child: 0  Id: b of type bool [line: 31]
.   .   Sibling: 22  Op: ? of type int [line: 32]
.   .   .   Child: 0  Id: a of type int [line: 32]
Sibling: 2  Func: cat returns type char [line: 35]
.   Child: 1  Compound [line: 36]
.   .   Child: 0  Var: a of type int [line: 37]
.   .   Sibling: 1  Var: b of type bool [line: 37]
.   .   Sibling: 2  Var: c of type char [line: 37]
.   .   Sibling: 3  Var: aa is array of type int [line: 38]
.   .   Sibling: 4  Var: ba is array of type bool [line: 38]
.   .   Sibling: 5  Var: ca is array of type char [line: 38]
.   .   Child: 1  Op: [ of type int [line: 40]
.   .   .   Child: 0  Id: aa of type int [line: 40]
.   .   .   Child: 1  Const 2 of type int [line: 40]
.   .   Sibling: 1  Assign: <- of type bool [line: 41]
.   .   .   Child: 0  Op: [ of type bool [line: 41]
.   .   .   .   Child: 0  Id: ba of type bool [line: 41]
.   .   .   .   Child: 1  Id: a of type int [line: 41]
.   .   .   Child: 1  Id: b of type bool [line: 41]
.   .   Sibling: 2  Assign: <- of type char [line: 42]
.   .   .   Child: 0  Op: [ of type char [line: 42]
.   .   .   .   Child: 0  Id: ca of type char [line: 42]
.   .   .   .   Child: 1  Op: [ of type int [line: 42]
.   .   .   .   .   Child: 0  Id: aa of type int [line: 42]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 42]
.   .   .   Child: 1  Id: c of type char [line: 42]
.   .   Sibling: 3  Op: sizeof of type int [line: 44]
.   .   .   Child: 0  Id: ba of type bool [line: 44]
.   .   Sibling: 4  Op: ? of type int [line: 45]
.   .   .   Child: 0  Const 11 of type int [line: 45]
.   .   Sibling: 5  For [line: 47]
.   .   .   Child: 0  Var: z of type int [line: 47]
.   .   .   Child: 1  Range [line: 47]
.   .   .   .   Child: 0  Id: aa of undefined type [line: 47]
.   .   .   .   Child: 1  Id: aa of undefined type [line: 47]
.   .   .   Child: 2  Op: + of type int [line: 47]
.   .   .   .   Child: 0  Id: z of type int [line: 47]
.   .   .   .   Child: 1  Id: z of type int [line: 47]
.   .   Sibling: 6  For [line: 48]
.   .   .   Child: 0  Var: z of type int [line: 48]
.   .   .   Child: 1  Range [line: 48]
.   .   .   .   Child: 0  Id: ba of undefined type [line: 48]
.   .   .   .   Child: 1  Id: aa of undefined type [line: 48]
.   .   .   .   Child: 2  Id: aa of undefined type [line: 48]
.   .   .   Child: 2  Op: and of type bool [line: 48]
.   .   .   .   Child: 0  Id: b of type bool [line: 48]
.   .   .   .   Child: 1  Id: b of type bool [line: 48]
.   .   Sibling: 7  For [line: 49]
.   .   .   Child: 0  Var: z of type int [line: 49]
.   .   .   Child: 1  Range [line: 49]
.   .   .   .   Child: 0  Op: + of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 3 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 4 of type int [line: 49]
.   .   .   .   Child: 1  Op: * of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 7 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 8 of type int [line: 49]
.   .   .   .   Child: 2  Op: % of undefined type [line: 49]
.   .   .   .   .   Child: 0  Const 15 of type int [line: 49]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 49]
.   .   .   Child: 2  Compound [line: 49]
.   .   .   .   Child: 1  Assign: <- of type int [line: 50]
.   .   .   .   .   Child: 0  Id: a of type int [line: 50]
.   .   .   .   .   Child: 1  Id: z of type int [line: 50]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 51]
.   .   .   .   .   Child: 0  Id: z of type int [line: 51]
.   .   .   .   .   Child: 1  Id: a of type int [line: 51]
.   .   Sibling: 8  Assign: <- of type int [line: 54]
.   .   .   Child: 0  Id: aa of type int [line: 54]
.   .   .   Child: 1  Id: aa of type int [line: 54]
.   .   Sibling: 9  Op: = of type bool [line: 55]
.   .   .   Child: 0  Id: ba of type bool [line: 55]
.   .   .   Child: 1  Id: ba of type bool [line: 55]
.   .   Sibling: 10  Op: != of type bool [line: 56]
.   .   .   Child: 0  Id: ca of type char [line: 56]
.   .   .   Child: 1  Id: ca of type char [line: 56]
.   .   Sibling: 11  Op: > of type bool [line: 57]
.   .   .   Child: 0  Id: aa of type int [line: 57]
.   .   .   Child: 1  Id: aa of type int [line: 57]
.   .   Sibling: 12  Op: >= of type bool [line: 58]
.   .   .   Child: 0  Id: ba of type bool [line: 58]
.   .   .   Child: 1  Id: ba of type bool [line: 58]
.   .   Sibling: 13  Op: < of type bool [line: 59]
.   .   .   Child: 0  Id: ca of type char [line: 59]
.   .   .   Child: 1  Id: ca of type char [line: 59]
.   .   Sibling: 14  Op: <= of type bool [line: 60]
.   .   .   Child: 0  Id: aa of type int [line: 60]
.   .   .   Child: 1  Id: aa of type int [line: 60]
.   .   Sibling: 15  Assign: <- of type char [line: 62]
.   .   .   Child: 0  Id: ca of type char [line: 62]
.   .   .   Child: 1  Const is array "dogs are great" of type char [line: 62]
.   .   Sibling: 16  Return [line: 64]
.   .   .   Child: 0  Const 'm' of type char [line: 64]
Sibling: 3  Func: dog returns type void [line: 67]
.   Child: 0  Parm: i of type int [line: 67]
.   Child: 1  Compound [line: 67]
.   .   Child: 1  If [line: 68]
.   .   .   Child: 0  Op: = of type bool [line: 68]
.   .   .   .   Child: 0  Id: i of type int [line: 68]
.   .   .   .   Child: 1  Const 3 of type int [line: 68]
.   .   .   Child: 1  Compound [line: 68]
.   .   .   .   Child: 0  Var: i of type int [line: 69]
.   .   .   .   Child: 1  Assign: <- of type int [line: 70]
.   .   .   .   .   Child: 0  Id: i of type int [line: 70]
.   .   .   .   .   Child: 1  Id: i of type int [line: 70]
Sibling: 4  Func: main returns type int [line: 74]
.   Child: 1  Compound [line: 75]
.   .   Child: 0  Var: bbb of type bool [line: 76]
.   .   Sibling: 1  Var: ccc is array of type char [line: 77]
.   .   .   Child: 0  Const is array "cows" of type char [line: 77]
.   .   Child: 1  Call: ant of type int [line: 79]
.   .   Sibling: 1  Call: bat of type void [line: 80]
.   .   .   Child: 0  Const 676 of type int [line: 80]
.   .   .   Sibling: 1  Const 'g' of type char [line: 80]
.   .   Sibling: 2  Call: cat of type char [line: 81]
.   .   Sibling: 3  Call: bat of type void [line: 82]
.   .   .   Child: 0  Call: ant of type int [line: 82]
.   .   .   Sibling: 1  Call: cat of type char [line: 82]
.   .   Sibling: 4  Assign: <- of type bool [line: 83]
.   .   .   Child: 0  Id: bbb of type bool [line: 83]
.   .   .   Child: 1  Op: != of type bool [line: 83]
.   .   .   .   Child: 0  Op: [ of type char [line: 83]
.   .   .   .   .   Child: 0  Id: ccc of type char [line: 83]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 83]
.   .   .   .   Child: 1  Const 'r' of type char [line: 83]
.   .   Sibling: 5  Return [line: 85]
.   .   .   Child: 0  Op: + of type int [line: 85]
.   .   .   .   Child: 0  Call: ant of type int [line: 85]
.   .   .   .   Child: 1  Const 807 of type int [line: 85]
Number of warnings: 5
Number of errors: 0

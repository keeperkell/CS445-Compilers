Terminals unused in grammar

    SYMBOL


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: declList decl
    3         | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList SEMICOLON

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON
    8              | typeSpec varDeclList SEMICOLON

    9 varDeclList: varDeclList COMMA varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclId
   12            | varDeclId COLON simpleExp

   13 varDeclId: ID
   14          | ID LBRACKET NUMCONST RBRACKET

   15 typeSpec: BOOL
   16         | CHAR
   17         | INT

   18 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt
   19        | ID LPAREN params RPAREN compoundStmt

   20 params: paramList
   21       | %empty

   22 paramList: paramList SEMICOLON paramTypeList
   23          | paramTypeList

   24 paramTypeList: typeSpec paramIdList

   25 paramIdList: paramIdList COMMA paramId
   26            | paramId

   27 paramId: ID
   28        | ID LBRACKET RBRACKET

   29 stmt: matched
   30     | unmatched

   31 matched: stmtEnd
   32        | IF simpleExp THEN matched ELSE matched
   33        | WHILE simpleExp DO matched
   34        | FOR ID ASGN iterRange DO matched

   35 unmatched: IF simpleExp THEN matched ELSE unmatched
   36          | WHILE simpleExp DO unmatched
   37          | FOR ID ASGN iterRange DO unmatched
   38          | IF simpleExp THEN stmt

   39 stmtEnd: expStmt
   40        | compoundStmt
   41        | returnStmt
   42        | breakStmt

   43 expStmt: exp SEMICOLON
   44        | SEMICOLON

   45 compoundStmt: BEGN localDecls stmtList FINISH

   46 localDecls: localDecls scopedVarDecl
   47           | %empty

   48 stmtList: stmtList stmt
   49         | %empty

   50 iterRange: simpleExp TO simpleExp
   51          | simpleExp TO simpleExp BY simpleExp

   52 returnStmt: RETURN SEMICOLON
   53           | RETURN exp SEMICOLON

   54 breakStmt: BREAK SEMICOLON

   55 exp: mutable assignop exp
   56    | mutable INC
   57    | mutable DEC
   58    | simpleExp

   59 assignop: ASGN
   60         | ADDASGN
   61         | SUBASGN
   62         | MULASGN
   63         | DIVASGN

   64 simpleExp: simpleExp OR andExp
   65          | andExp

   66 andExp: andExp AND unaryRelExp
   67       | unaryRelExp

   68 unaryRelExp: NOT unaryRelExp
   69            | relExp

   70 relExp: sumExp relop sumExp
   71       | sumExp

   72 relop: LESSTHAN
   73      | LEQ
   74      | GREATTHAN
   75      | GEQ
   76      | EQUAL
   77      | NEQ

   78 sumExp: sumExp sumop mulExp
   79       | mulExp

   80 sumop: PLUS
   81      | MINUS

   82 mulExp: mulExp mulop unaryExp
   83       | unaryExp

   84 mulop: MULT
   85      | DIV
   86      | MOD

   87 unaryExp: unaryop unaryExp
   88         | factor

   89 unaryop: MINUS
   90        | MULT
   91        | QUESTION

   92 factor: mutable
   93       | immutable

   94 mutable: ID
   95        | ID LBRACKET exp RBRACKET

   96 immutable: LPAREN exp RPAREN
   97          | call
   98          | constant

   99 call: ID LPAREN args RPAREN

  100 args: argList
  101     | %empty

  102 argList: argList COMMA exp
  103        | exp

  104 constant: NUMCONST
  105         | CHARCONST
  106         | STRINGCONST
  107         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <tokenData> (258) 13 14 18 19 27 28 34 37 94 95 99
    BOOLCONST <tokenData> (259) 107
    NUMCONST <tokenData> (260) 14 104
    CHARCONST <tokenData> (261) 105
    STRINGCONST <tokenData> (262) 106
    SYMBOL <tokenData> (263)
    ASGN <tokenData> (264) 34 37 59
    ADDASGN <tokenData> (265) 60
    SUBASGN <tokenData> (266) 61
    MULASGN <tokenData> (267) 62
    DIVASGN <tokenData> (268) 63
    INC <tokenData> (269) 56
    DEC <tokenData> (270) 57
    GEQ <tokenData> (271) 75
    LEQ <tokenData> (272) 73
    NEQ <tokenData> (273) 77
    LESSTHAN <tokenData> (274) 72
    GREATTHAN <tokenData> (275) 74
    LPAREN <tokenData> (276) 18 19 96 99
    RPAREN <tokenData> (277) 18 19 96 99
    LBRACKET <tokenData> (278) 14 28 95
    RBRACKET <tokenData> (279) 14 28 95
    PLUS <tokenData> (280) 80
    EQUAL <tokenData> (281) 76
    MINUS <tokenData> (282) 81 89
    MULT <tokenData> (283) 84 90
    DIV <tokenData> (284) 85
    MOD <tokenData> (285) 86
    COLON <tokenData> (286) 12
    SEMICOLON <tokenData> (287) 6 7 8 22 43 44 52 53 54
    QUESTION <tokenData> (288) 91
    COMMA <tokenData> (289) 9 25 102
    INT <tokenData> (290) 17
    BOOL <tokenData> (291) 15
    CHAR <tokenData> (292) 16
    STATIC <tokenData> (293) 7
    AND <tokenData> (294) 66
    OR <tokenData> (295) 64
    NOT <tokenData> (296) 68
    IF <tokenData> (297) 32 35 38
    ELSE <tokenData> (298) 32 35
    THEN <tokenData> (299) 32 35 38
    FOR <tokenData> (300) 34 37
    BREAK <tokenData> (301) 54
    RETURN <tokenData> (302) 52 53
    BEGN <tokenData> (303) 45
    FINISH <tokenData> (304) 45
    TO <tokenData> (305) 50 51
    DO <tokenData> (306) 33 34 36 37
    BY <tokenData> (307) 51
    WHILE <tokenData> (308) 33 36


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    declList <tree> (56)
        on left: 2 3
        on right: 1 2
    decl <tree> (57)
        on left: 4 5
        on right: 2 3
    varDecl <tree> (58)
        on left: 6
        on right: 4
    scopedVarDecl <tree> (59)
        on left: 7 8
        on right: 46
    varDeclList <tree> (60)
        on left: 9 10
        on right: 6 7 8 9
    varDeclInit <tree> (61)
        on left: 11 12
        on right: 9 10
    varDeclId <tree> (62)
        on left: 13 14
        on right: 11 12
    typeSpec <type> (63)
        on left: 15 16 17
        on right: 6 7 8 18 24
    funDecl <tree> (64)
        on left: 18 19
        on right: 5
    params <tree> (65)
        on left: 20 21
        on right: 18 19
    paramList <tree> (66)
        on left: 22 23
        on right: 20 22
    paramTypeList <tree> (67)
        on left: 24
        on right: 22 23
    paramIdList <tree> (68)
        on left: 25 26
        on right: 24 25
    paramId <tree> (69)
        on left: 27 28
        on right: 25 26
    stmt <tree> (70)
        on left: 29 30
        on right: 38 48
    matched <tree> (71)
        on left: 31 32 33 34
        on right: 29 32 33 34 35
    unmatched <tree> (72)
        on left: 35 36 37 38
        on right: 30 35 36 37
    stmtEnd <tree> (73)
        on left: 39 40 41 42
        on right: 31
    expStmt <tree> (74)
        on left: 43 44
        on right: 39
    compoundStmt <tree> (75)
        on left: 45
        on right: 18 19 40
    localDecls <tree> (76)
        on left: 46 47
        on right: 45 46
    stmtList <tree> (77)
        on left: 48 49
        on right: 45 48
    iterRange <tree> (78)
        on left: 50 51
        on right: 34 37
    returnStmt <tree> (79)
        on left: 52 53
        on right: 41
    breakStmt <tree> (80)
        on left: 54
        on right: 42
    exp <tree> (81)
        on left: 55 56 57 58
        on right: 43 53 55 95 96 102 103
    assignop <tree> (82)
        on left: 59 60 61 62 63
        on right: 55
    simpleExp <tree> (83)
        on left: 64 65
        on right: 12 32 33 35 36 38 50 51 58 64
    andExp <tree> (84)
        on left: 66 67
        on right: 64 65 66
    unaryRelExp <tree> (85)
        on left: 68 69
        on right: 66 67 68
    relExp <tree> (86)
        on left: 70 71
        on right: 69
    relop <tree> (87)
        on left: 72 73 74 75 76 77
        on right: 70
    sumExp <tree> (88)
        on left: 78 79
        on right: 70 71 78
    sumop <tree> (89)
        on left: 80 81
        on right: 78
    mulExp <tree> (90)
        on left: 82 83
        on right: 78 79 82
    mulop <tree> (91)
        on left: 84 85 86
        on right: 82
    unaryExp <tree> (92)
        on left: 87 88
        on right: 82 83 87
    unaryop <tree> (93)
        on left: 89 90 91
        on right: 87
    factor <tree> (94)
        on left: 92 93
        on right: 88
    mutable <tree> (95)
        on left: 94 95
        on right: 55 56 57 92
    immutable <tree> (96)
        on left: 96 97 98
        on right: 93
    call <tree> (97)
        on left: 99
        on right: 97
    args <tree> (98)
        on left: 100 101
        on right: 99
    argList <tree> (99)
        on left: 102 103
        on right: 100 102
    constant <tree> (100)
        on left: 104 105 106 107
        on right: 98


State 0

    0 $accept: . program $end

    ID    shift, and go to state 1
    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    program   go to state 5
    declList  go to state 6
    decl      go to state 7
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 1

   19 funDecl: ID . LPAREN params RPAREN compoundStmt

    LPAREN  shift, and go to state 11


State 2

   17 typeSpec: INT .

    $default  reduce using rule 17 (typeSpec)


State 3

   15 typeSpec: BOOL .

    $default  reduce using rule 15 (typeSpec)


State 4

   16 typeSpec: CHAR .

    $default  reduce using rule 16 (typeSpec)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: declList .
    2 declList: declList . decl

    ID    shift, and go to state 1
    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 7

    3 declList: decl .

    $default  reduce using rule 3 (declList)


State 8

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpec . varDeclList SEMICOLON
   18 funDecl: typeSpec . ID LPAREN params RPAREN compoundStmt

    ID  shift, and go to state 14

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 10

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


State 11

   19 funDecl: ID LPAREN . params RPAREN compoundStmt

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 21 (params)

    typeSpec       go to state 18
    params         go to state 19
    paramList      go to state 20
    paramTypeList  go to state 21


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declList: declList decl .

    $default  reduce using rule 2 (declList)


State 14

   13 varDeclId: ID .
   14          | ID . LBRACKET NUMCONST RBRACKET
   18 funDecl: typeSpec ID . LPAREN params RPAREN compoundStmt

    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 23

    $default  reduce using rule 13 (varDeclId)


State 15

    6 varDecl: typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 16

   10 varDeclList: varDeclInit .

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclId .
   12            | varDeclId . COLON simpleExp

    COLON  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   24 paramTypeList: typeSpec . paramIdList

    ID  shift, and go to state 27

    paramIdList  go to state 28
    paramId      go to state 29


State 19

   19 funDecl: ID LPAREN params . RPAREN compoundStmt

    RPAREN  shift, and go to state 30


State 20

   20 params: paramList .
   22 paramList: paramList . SEMICOLON paramTypeList

    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 20 (params)


State 21

   23 paramList: paramTypeList .

    $default  reduce using rule 23 (paramList)


State 22

   18 funDecl: typeSpec ID LPAREN . params RPAREN compoundStmt

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 21 (params)

    typeSpec       go to state 18
    params         go to state 32
    paramList      go to state 20
    paramTypeList  go to state 21


State 23

   14 varDeclId: ID LBRACKET . NUMCONST RBRACKET

    NUMCONST  shift, and go to state 33


State 24

    6 varDecl: typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList COMMA . varDeclInit

    ID  shift, and go to state 34

    varDeclInit  go to state 35
    varDeclId    go to state 17


State 26

   12 varDeclInit: varDeclId COLON . simpleExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    simpleExp    go to state 46
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 27

   27 paramId: ID .
   28        | ID . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 59

    $default  reduce using rule 27 (paramId)


State 28

   24 paramTypeList: typeSpec paramIdList .
   25 paramIdList: paramIdList . COMMA paramId

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (paramTypeList)


State 29

   26 paramIdList: paramId .

    $default  reduce using rule 26 (paramIdList)


State 30

   19 funDecl: ID LPAREN params RPAREN . compoundStmt

    BEGN  shift, and go to state 61

    compoundStmt  go to state 62


State 31

   22 paramList: paramList SEMICOLON . paramTypeList

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec       go to state 18
    paramTypeList  go to state 63


State 32

   18 funDecl: typeSpec ID LPAREN params . RPAREN compoundStmt

    RPAREN  shift, and go to state 64


State 33

   14 varDeclId: ID LBRACKET NUMCONST . RBRACKET

    RBRACKET  shift, and go to state 65


State 34

   13 varDeclId: ID .
   14          | ID . LBRACKET NUMCONST RBRACKET

    LBRACKET  shift, and go to state 23

    $default  reduce using rule 13 (varDeclId)


State 35

    9 varDeclList: varDeclList COMMA varDeclInit .

    $default  reduce using rule 9 (varDeclList)


State 36

   94 mutable: ID .
   95        | ID . LBRACKET exp RBRACKET
   99 call: ID . LPAREN args RPAREN

    LPAREN    shift, and go to state 66
    LBRACKET  shift, and go to state 67

    $default  reduce using rule 94 (mutable)


State 37

  107 constant: BOOLCONST .

    $default  reduce using rule 107 (constant)


State 38

  104 constant: NUMCONST .

    $default  reduce using rule 104 (constant)


State 39

  105 constant: CHARCONST .

    $default  reduce using rule 105 (constant)


State 40

  106 constant: STRINGCONST .

    $default  reduce using rule 106 (constant)


State 41

   96 immutable: LPAREN . exp RPAREN

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    exp          go to state 68
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 42

   89 unaryop: MINUS .

    $default  reduce using rule 89 (unaryop)


State 43

   90 unaryop: MULT .

    $default  reduce using rule 90 (unaryop)


State 44

   91 unaryop: QUESTION .

    $default  reduce using rule 91 (unaryop)


State 45

   68 unaryRelExp: NOT . unaryRelExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    unaryRelExp  go to state 71
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 46

   12 varDeclInit: varDeclId COLON simpleExp .
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 12 (varDeclInit)


State 47

   65 simpleExp: andExp .
   66 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 65 (simpleExp)


State 48

   67 andExp: unaryRelExp .

    $default  reduce using rule 67 (andExp)


State 49

   69 unaryRelExp: relExp .

    $default  reduce using rule 69 (unaryRelExp)


State 50

   70 relExp: sumExp . relop sumExp
   71       | sumExp .
   78 sumExp: sumExp . sumop mulExp

    GEQ        shift, and go to state 74
    LEQ        shift, and go to state 75
    NEQ        shift, and go to state 76
    LESSTHAN   shift, and go to state 77
    GREATTHAN  shift, and go to state 78
    PLUS       shift, and go to state 79
    EQUAL      shift, and go to state 80
    MINUS      shift, and go to state 81

    $default  reduce using rule 71 (relExp)

    relop  go to state 82
    sumop  go to state 83


State 51

   79 sumExp: mulExp .
   82 mulExp: mulExp . mulop unaryExp

    MULT  shift, and go to state 84
    DIV   shift, and go to state 85
    MOD   shift, and go to state 86

    $default  reduce using rule 79 (sumExp)

    mulop  go to state 87


State 52

   83 mulExp: unaryExp .

    $default  reduce using rule 83 (mulExp)


State 53

   87 unaryExp: unaryop . unaryExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44

    unaryExp   go to state 88
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 54

   88 unaryExp: factor .

    $default  reduce using rule 88 (unaryExp)


State 55

   92 factor: mutable .

    $default  reduce using rule 92 (factor)


State 56

   93 factor: immutable .

    $default  reduce using rule 93 (factor)


State 57

   97 immutable: call .

    $default  reduce using rule 97 (immutable)


State 58

   98 immutable: constant .

    $default  reduce using rule 98 (immutable)


State 59

   28 paramId: ID LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 89


State 60

   25 paramIdList: paramIdList COMMA . paramId

    ID  shift, and go to state 27

    paramId  go to state 90


State 61

   45 compoundStmt: BEGN . localDecls stmtList FINISH

    $default  reduce using rule 47 (localDecls)

    localDecls  go to state 91


State 62

   19 funDecl: ID LPAREN params RPAREN compoundStmt .

    $default  reduce using rule 19 (funDecl)


State 63

   22 paramList: paramList SEMICOLON paramTypeList .

    $default  reduce using rule 22 (paramList)


State 64

   18 funDecl: typeSpec ID LPAREN params RPAREN . compoundStmt

    BEGN  shift, and go to state 61

    compoundStmt  go to state 92


State 65

   14 varDeclId: ID LBRACKET NUMCONST RBRACKET .

    $default  reduce using rule 14 (varDeclId)


State 66

   99 call: ID LPAREN . args RPAREN

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    $default  reduce using rule 101 (args)

    exp          go to state 93
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    args         go to state 94
    argList      go to state 95
    constant     go to state 58


State 67

   95 mutable: ID LBRACKET . exp RBRACKET

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    exp          go to state 96
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 68

   96 immutable: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 97


State 69

   58 exp: simpleExp .
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 58 (exp)


State 70

   55 exp: mutable . assignop exp
   56    | mutable . INC
   57    | mutable . DEC
   92 factor: mutable .

    ASGN     shift, and go to state 98
    ADDASGN  shift, and go to state 99
    SUBASGN  shift, and go to state 100
    MULASGN  shift, and go to state 101
    DIVASGN  shift, and go to state 102
    INC      shift, and go to state 103
    DEC      shift, and go to state 104

    $default  reduce using rule 92 (factor)

    assignop  go to state 105


State 71

   68 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 68 (unaryRelExp)


State 72

   64 simpleExp: simpleExp OR . andExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    andExp       go to state 106
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 73

   66 andExp: andExp AND . unaryRelExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    unaryRelExp  go to state 107
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 74

   75 relop: GEQ .

    $default  reduce using rule 75 (relop)


State 75

   73 relop: LEQ .

    $default  reduce using rule 73 (relop)


State 76

   77 relop: NEQ .

    $default  reduce using rule 77 (relop)


State 77

   72 relop: LESSTHAN .

    $default  reduce using rule 72 (relop)


State 78

   74 relop: GREATTHAN .

    $default  reduce using rule 74 (relop)


State 79

   80 sumop: PLUS .

    $default  reduce using rule 80 (sumop)


State 80

   76 relop: EQUAL .

    $default  reduce using rule 76 (relop)


State 81

   81 sumop: MINUS .

    $default  reduce using rule 81 (sumop)


State 82

   70 relExp: sumExp relop . sumExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44

    sumExp     go to state 108
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 83

   78 sumExp: sumExp sumop . mulExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44

    mulExp     go to state 109
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 84

   84 mulop: MULT .

    $default  reduce using rule 84 (mulop)


State 85

   85 mulop: DIV .

    $default  reduce using rule 85 (mulop)


State 86

   86 mulop: MOD .

    $default  reduce using rule 86 (mulop)


State 87

   82 mulExp: mulExp mulop . unaryExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44

    unaryExp   go to state 110
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 88

   87 unaryExp: unaryop unaryExp .

    $default  reduce using rule 87 (unaryExp)


State 89

   28 paramId: ID LBRACKET RBRACKET .

    $default  reduce using rule 28 (paramId)


State 90

   25 paramIdList: paramIdList COMMA paramId .

    $default  reduce using rule 25 (paramIdList)


State 91

   45 compoundStmt: BEGN localDecls . stmtList FINISH
   46 localDecls: localDecls . scopedVarDecl

    INT     shift, and go to state 2
    BOOL    shift, and go to state 3
    CHAR    shift, and go to state 4
    STATIC  shift, and go to state 111

    $default  reduce using rule 49 (stmtList)

    scopedVarDecl  go to state 112
    typeSpec       go to state 113
    stmtList       go to state 114


State 92

   18 funDecl: typeSpec ID LPAREN params RPAREN compoundStmt .

    $default  reduce using rule 18 (funDecl)


State 93

  103 argList: exp .

    $default  reduce using rule 103 (argList)


State 94

   99 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 115


State 95

  100 args: argList .
  102 argList: argList . COMMA exp

    COMMA  shift, and go to state 116

    $default  reduce using rule 100 (args)


State 96

   95 mutable: ID LBRACKET exp . RBRACKET

    RBRACKET  shift, and go to state 117


State 97

   96 immutable: LPAREN exp RPAREN .

    $default  reduce using rule 96 (immutable)


State 98

   59 assignop: ASGN .

    $default  reduce using rule 59 (assignop)


State 99

   60 assignop: ADDASGN .

    $default  reduce using rule 60 (assignop)


State 100

   61 assignop: SUBASGN .

    $default  reduce using rule 61 (assignop)


State 101

   62 assignop: MULASGN .

    $default  reduce using rule 62 (assignop)


State 102

   63 assignop: DIVASGN .

    $default  reduce using rule 63 (assignop)


State 103

   56 exp: mutable INC .

    $default  reduce using rule 56 (exp)


State 104

   57 exp: mutable DEC .

    $default  reduce using rule 57 (exp)


State 105

   55 exp: mutable assignop . exp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    exp          go to state 118
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 106

   64 simpleExp: simpleExp OR andExp .
   66 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 73

    $default  reduce using rule 64 (simpleExp)


State 107

   66 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 66 (andExp)


State 108

   70 relExp: sumExp relop sumExp .
   78 sumExp: sumExp . sumop mulExp

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 81

    $default  reduce using rule 70 (relExp)

    sumop  go to state 83


State 109

   78 sumExp: sumExp sumop mulExp .
   82 mulExp: mulExp . mulop unaryExp

    MULT  shift, and go to state 84
    DIV   shift, and go to state 85
    MOD   shift, and go to state 86

    $default  reduce using rule 78 (sumExp)

    mulop  go to state 87


State 110

   82 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 82 (mulExp)


State 111

    7 scopedVarDecl: STATIC . typeSpec varDeclList SEMICOLON

    INT   shift, and go to state 2
    BOOL  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpec  go to state 119


State 112

   46 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 46 (localDecls)


State 113

    8 scopedVarDecl: typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 120
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 114

   45 compoundStmt: BEGN localDecls stmtList . FINISH
   48 stmtList: stmtList . stmt

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 121
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    BEGN         shift, and go to state 61
    FINISH       shift, and go to state 126
    WHILE        shift, and go to state 127

    stmt          go to state 128
    matched       go to state 129
    unmatched     go to state 130
    stmtEnd       go to state 131
    expStmt       go to state 132
    compoundStmt  go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 69
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 70
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 115

   99 call: ID LPAREN args RPAREN .

    $default  reduce using rule 99 (call)


State 116

  102 argList: argList COMMA . exp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    exp          go to state 137
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 117

   95 mutable: ID LBRACKET exp RBRACKET .

    $default  reduce using rule 95 (mutable)


State 118

   55 exp: mutable assignop exp .

    $default  reduce using rule 55 (exp)


State 119

    7 scopedVarDecl: STATIC typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 34

    varDeclList  go to state 138
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 120

    8 scopedVarDecl: typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 139
    COMMA      shift, and go to state 25


State 121

   44 expStmt: SEMICOLON .

    $default  reduce using rule 44 (expStmt)


State 122

   32 matched: IF . simpleExp THEN matched ELSE matched
   35 unmatched: IF . simpleExp THEN matched ELSE unmatched
   38          | IF . simpleExp THEN stmt

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    simpleExp    go to state 140
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 123

   34 matched: FOR . ID ASGN iterRange DO matched
   37 unmatched: FOR . ID ASGN iterRange DO unmatched

    ID  shift, and go to state 141


State 124

   54 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 125

   52 returnStmt: RETURN . SEMICOLON
   53           | RETURN . exp SEMICOLON

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 143
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    exp          go to state 144
    simpleExp    go to state 69
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 70
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 126

   45 compoundStmt: BEGN localDecls stmtList FINISH .

    $default  reduce using rule 45 (compoundStmt)


State 127

   33 matched: WHILE . simpleExp DO matched
   36 unmatched: WHILE . simpleExp DO unmatched

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    simpleExp    go to state 145
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 128

   48 stmtList: stmtList stmt .

    $default  reduce using rule 48 (stmtList)


State 129

   29 stmt: matched .

    $default  reduce using rule 29 (stmt)


State 130

   30 stmt: unmatched .

    $default  reduce using rule 30 (stmt)


State 131

   31 matched: stmtEnd .

    $default  reduce using rule 31 (matched)


State 132

   39 stmtEnd: expStmt .

    $default  reduce using rule 39 (stmtEnd)


State 133

   40 stmtEnd: compoundStmt .

    $default  reduce using rule 40 (stmtEnd)


State 134

   41 stmtEnd: returnStmt .

    $default  reduce using rule 41 (stmtEnd)


State 135

   42 stmtEnd: breakStmt .

    $default  reduce using rule 42 (stmtEnd)


State 136

   43 expStmt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 137

  102 argList: argList COMMA exp .

    $default  reduce using rule 102 (argList)


State 138

    7 scopedVarDecl: STATIC typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 147
    COMMA      shift, and go to state 25


State 139

    8 scopedVarDecl: typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 8 (scopedVarDecl)


State 140

   32 matched: IF simpleExp . THEN matched ELSE matched
   35 unmatched: IF simpleExp . THEN matched ELSE unmatched
   38          | IF simpleExp . THEN stmt
   64 simpleExp: simpleExp . OR andExp

    OR    shift, and go to state 72
    THEN  shift, and go to state 148


State 141

   34 matched: FOR ID . ASGN iterRange DO matched
   37 unmatched: FOR ID . ASGN iterRange DO unmatched

    ASGN  shift, and go to state 149


State 142

   54 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 54 (breakStmt)


State 143

   52 returnStmt: RETURN SEMICOLON .

    $default  reduce using rule 52 (returnStmt)


State 144

   53 returnStmt: RETURN exp . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 145

   33 matched: WHILE simpleExp . DO matched
   36 unmatched: WHILE simpleExp . DO unmatched
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72
    DO  shift, and go to state 151


State 146

   43 expStmt: exp SEMICOLON .

    $default  reduce using rule 43 (expStmt)


State 147

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 7 (scopedVarDecl)


State 148

   32 matched: IF simpleExp THEN . matched ELSE matched
   35 unmatched: IF simpleExp THEN . matched ELSE unmatched
   38          | IF simpleExp THEN . stmt

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 121
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    BEGN         shift, and go to state 61
    WHILE        shift, and go to state 127

    stmt          go to state 152
    matched       go to state 153
    unmatched     go to state 130
    stmtEnd       go to state 131
    expStmt       go to state 132
    compoundStmt  go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 69
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 70
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 149

   34 matched: FOR ID ASGN . iterRange DO matched
   37 unmatched: FOR ID ASGN . iterRange DO unmatched

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    iterRange    go to state 154
    simpleExp    go to state 155
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 150

   53 returnStmt: RETURN exp SEMICOLON .

    $default  reduce using rule 53 (returnStmt)


State 151

   33 matched: WHILE simpleExp DO . matched
   36 unmatched: WHILE simpleExp DO . unmatched

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 121
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    BEGN         shift, and go to state 61
    WHILE        shift, and go to state 127

    matched       go to state 156
    unmatched     go to state 157
    stmtEnd       go to state 131
    expStmt       go to state 132
    compoundStmt  go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 69
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 70
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 152

   38 unmatched: IF simpleExp THEN stmt .

    $default  reduce using rule 38 (unmatched)


State 153

   29 stmt: matched .
   32 matched: IF simpleExp THEN matched . ELSE matched
   35 unmatched: IF simpleExp THEN matched . ELSE unmatched

    ELSE  shift, and go to state 158

    $default  reduce using rule 29 (stmt)


State 154

   34 matched: FOR ID ASGN iterRange . DO matched
   37 unmatched: FOR ID ASGN iterRange . DO unmatched

    DO  shift, and go to state 159


State 155

   50 iterRange: simpleExp . TO simpleExp
   51          | simpleExp . TO simpleExp BY simpleExp
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72
    TO  shift, and go to state 160


State 156

   33 matched: WHILE simpleExp DO matched .

    $default  reduce using rule 33 (matched)


State 157

   36 unmatched: WHILE simpleExp DO unmatched .

    $default  reduce using rule 36 (unmatched)


State 158

   32 matched: IF simpleExp THEN matched ELSE . matched
   35 unmatched: IF simpleExp THEN matched ELSE . unmatched

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 121
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    BEGN         shift, and go to state 61
    WHILE        shift, and go to state 127

    matched       go to state 161
    unmatched     go to state 162
    stmtEnd       go to state 131
    expStmt       go to state 132
    compoundStmt  go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 69
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 70
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 159

   34 matched: FOR ID ASGN iterRange DO . matched
   37 unmatched: FOR ID ASGN iterRange DO . unmatched

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    SEMICOLON    shift, and go to state 121
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 122
    FOR          shift, and go to state 123
    BREAK        shift, and go to state 124
    RETURN       shift, and go to state 125
    BEGN         shift, and go to state 61
    WHILE        shift, and go to state 127

    matched       go to state 163
    unmatched     go to state 164
    stmtEnd       go to state 131
    expStmt       go to state 132
    compoundStmt  go to state 133
    returnStmt    go to state 134
    breakStmt     go to state 135
    exp           go to state 136
    simpleExp     go to state 69
    andExp        go to state 47
    unaryRelExp   go to state 48
    relExp        go to state 49
    sumExp        go to state 50
    mulExp        go to state 51
    unaryExp      go to state 52
    unaryop       go to state 53
    factor        go to state 54
    mutable       go to state 70
    immutable     go to state 56
    call          go to state 57
    constant      go to state 58


State 160

   50 iterRange: simpleExp TO . simpleExp
   51          | simpleExp TO . simpleExp BY simpleExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    simpleExp    go to state 165
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 161

   32 matched: IF simpleExp THEN matched ELSE matched .

    $default  reduce using rule 32 (matched)


State 162

   35 unmatched: IF simpleExp THEN matched ELSE unmatched .

    $default  reduce using rule 35 (unmatched)


State 163

   34 matched: FOR ID ASGN iterRange DO matched .

    $default  reduce using rule 34 (matched)


State 164

   37 unmatched: FOR ID ASGN iterRange DO unmatched .

    $default  reduce using rule 37 (unmatched)


State 165

   50 iterRange: simpleExp TO simpleExp .
   51          | simpleExp TO simpleExp . BY simpleExp
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72
    BY  shift, and go to state 166

    $default  reduce using rule 50 (iterRange)


State 166

   51 iterRange: simpleExp TO simpleExp BY . simpleExp

    ID           shift, and go to state 36
    BOOLCONST    shift, and go to state 37
    NUMCONST     shift, and go to state 38
    CHARCONST    shift, and go to state 39
    STRINGCONST  shift, and go to state 40
    LPAREN       shift, and go to state 41
    MINUS        shift, and go to state 42
    MULT         shift, and go to state 43
    QUESTION     shift, and go to state 44
    NOT          shift, and go to state 45

    simpleExp    go to state 167
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 167

   51 iterRange: simpleExp TO simpleExp BY simpleExp .
   64 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 72

    $default  reduce using rule 51 (iterRange)

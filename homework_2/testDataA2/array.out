Var: w of array of type int [line: 2]
Sibling: 1  Func: dog returns type int [line: 4]
.   Child: 0  Parm: x of type int [line: 4]
.   Child: 1  Compound [line: 4]
.   .   Child: 0  Var: y of array of type int [line: 5]
.   .   Sibling: 1  Var: z of type int [line: 5]
.   .   Child: 1  Assign: <- [line: 7]
.   .   .   Child: 0  Op: [ [line: 7]
.   .   .   .   Child: 0  Id: y [line: 7]
.   .   .   .   Child: 1  Const 11 [line: 7]
.   .   .   Child: 1  Op: + [line: 7]
.   .   .   .   Child: 0  Op: * [line: 7]
.   .   .   .   .   Child: 0  Id: x [line: 7]
.   .   .   .   .   Child: 1  Const 111 [line: 7]
.   .   .   .   Child: 1  Const 222 [line: 7]
.   .   Sibling: 1  Assign: <- [line: 8]
.   .   .   Child: 0  Id: z [line: 8]
.   .   .   Child: 1  Op: [ [line: 8]
.   .   .   .   Child: 0  Id: y [line: 8]
.   .   .   .   Child: 1  Const 11 [line: 8]
.   .   Sibling: 2  Assign: <- [line: 9]
.   .   .   Child: 0  Op: [ [line: 9]
.   .   .   .   Child: 0  Id: w [line: 9]
.   .   .   .   Child: 1  Const 13 [line: 9]
.   .   .   Child: 1  Op: * [line: 9]
.   .   .   .   Child: 0  Op: * [line: 9]
.   .   .   .   .   Child: 0  Op: * [line: 9]
.   .   .   .   .   .   Child: 0  Op: chsign [line: 9]
.   .   .   .   .   .   .   Child: 0  Op: [ [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: w [line: 9]
.   .   .   .   .   .   .   .   Child: 1  Const 15 [line: 9]
.   .   .   .   .   .   Child: 1  Id: x [line: 9]
.   .   .   .   .   Child: 1  Op: [ [line: 9]
.   .   .   .   .   .   Child: 0  Id: y [line: 9]
.   .   .   .   .   .   Child: 1  Const 17 [line: 9]
.   .   .   .   Child: 1  Id: z [line: 9]
.   .   Sibling: 3  Return [line: 11]
.   .   .   Child: 0  Op: * [line: 11]
.   .   .   .   Child: 0  Id: z [line: 11]
.   .   .   .   Child: 1  Op: [ [line: 11]
.   .   .   .   .   Child: 0  Id: y [line: 11]
.   .   .   .   .   Child: 1  Const 11 [line: 11]
Sibling: 2  Func: cat returns type void [line: 14]
.   Child: 0  Parm: x of array of type int [line: 14]
.   Sibling: 1  Parm: z of type int [line: 14]
.   Child: 1  Compound [line: 14]
.   .   Child: 1  Assign: <- [line: 15]
.   .   .   Child: 0  Op: [ [line: 15]
.   .   .   .   Child: 0  Id: x [line: 15]
.   .   .   .   Child: 1  Const 10 [line: 15]
.   .   .   Child: 1  Const 333 [line: 15]
.   .   Sibling: 1  Assign: <- [line: 16]
.   .   .   Child: 0  Op: [ [line: 16]
.   .   .   .   Child: 0  Id: w [line: 16]
.   .   .   .   Child: 1  Const 11 [line: 16]
.   .   .   Child: 1  Const 444 [line: 16]
.   .   Sibling: 2  For [line: 17]
.   .   .   Child: 0  Var: i of type int [line: 17]
.   .   .   Child: 1  Range [line: 17]
.   .   .   .   Child: 0  Const 1 [line: 17]
.   .   .   .   Child: 1  Op: - [line: 17]
.   .   .   .   .   Child: 0  Op: sizeof [line: 17]
.   .   .   .   .   .   Child: 0  Id: x [line: 17]
.   .   .   .   .   Child: 1  Const 1 [line: 17]
.   .   .   Child: 2  Assign: += [line: 18]
.   .   .   .   Child: 0  Op: [ [line: 18]
.   .   .   .   .   Child: 0  Id: w [line: 18]
.   .   .   .   .   Child: 1  Op: [ [line: 18]
.   .   .   .   .   .   Child: 0  Id: x [line: 18]
.   .   .   .   .   .   Child: 1  Id: i [line: 18]
.   .   .   .   Child: 1  Op: * [line: 18]
.   .   .   .   .   Child: 0  Op: [ [line: 18]
.   .   .   .   .   .   Child: 0  Id: w [line: 18]
.   .   .   .   .   .   Child: 1  Op: [ [line: 18]
.   .   .   .   .   .   .   Child: 0  Id: x [line: 18]
.   .   .   .   .   .   .   Child: 1  Op: - [line: 18]
.   .   .   .   .   .   .   .   Child: 0  Id: i [line: 18]
.   .   .   .   .   .   .   .   Child: 1  Const 1 [line: 18]
.   .   .   .   .   Child: 1  Id: z [line: 18]
Sibling: 3  Func: main returns type void [line: 21]
.   Child: 1  Compound [line: 21]
.   .   Child: 0  Var: y of array of type int [line: 22]
.   .   Child: 1  Call: cat [line: 24]
.   .   .   Child: 0  Id: y [line: 24]
.   .   .   Sibling: 1  Const 12 [line: 24]
.   .   Sibling: 1  Call: dog [line: 25]
.   .   .   Child: 0  Const 666 [line: 25]

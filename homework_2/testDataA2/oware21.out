Var: cups of array of type int [line: 100]
Sibling: 1  Var: sumPlayerT of type int [line: 101]
Sibling: 2  Var: sumPlayerF of type int [line: 102]
Sibling: 3  Var: winnerPlayerT of type bool [line: 103]
Sibling: 4  Var: winnerPlayerF of type bool [line: 104]
Sibling: 5  Var: winner of type bool [line: 105]
Sibling: 6  Var: turn of type bool [line: 106]
Sibling: 7  Func: debug returns type void [line: 108]
.   Child: 0  Parm: type of type bool [line: 108]
.   Child: 1  Compound [line: 108]
.   .   Child: 0  Var: count of type int [line: 109]
.   .   Child: 1  Assign: <- [line: 110]
.   .   .   Child: 0  Id: count [line: 110]
.   .   .   Child: 1  Const 10 [line: 110]
.   .   Sibling: 1  While [line: 111]
.   .   .   Child: 0  Op: > [line: 111]
.   .   .   .   Child: 0  Id: count [line: 111]
.   .   .   .   Child: 1  Const 0 [line: 111]
.   .   .   Child: 1  Compound [line: 111]
.   .   .   .   Child: 1  Call: outputb [line: 112]
.   .   .   .   .   Child: 0  Id: type [line: 112]
.   .   .   .   Sibling: 1  Assign: -- [line: 113]
.   .   .   .   .   Child: 0  Id: count [line: 113]
.   .   .   .   Sibling: 2  If [line: 114]
.   .   .   .   .   Child: 0  Op: = [line: 114]
.   .   .   .   .   .   Child: 0  Id: count [line: 114]
.   .   .   .   .   .   Child: 1  Const 0 [line: 114]
.   .   .   .   .   Child: 1  Call: outnl [line: 114]
Sibling: 8  Func: initGame returns type void [line: 118]
.   Child: 1  Compound [line: 118]
.   .   Child: 0  Var: index of type int [line: 119]
.   .   Child: 1  Assign: <- [line: 120]
.   .   .   Child: 0  Id: index [line: 120]
.   .   .   Child: 1  Const 0 [line: 120]
.   .   Sibling: 1  While [line: 123]
.   .   .   Child: 0  Op: < [line: 123]
.   .   .   .   Child: 0  Id: index [line: 123]
.   .   .   .   Child: 1  Const 12 [line: 123]
.   .   .   Child: 1  Compound [line: 123]
.   .   .   .   Child: 1  Assign: <- [line: 124]
.   .   .   .   .   Child: 0  Op: [ [line: 124]
.   .   .   .   .   .   Child: 0  Id: cups [line: 124]
.   .   .   .   .   .   Child: 1  Id: index [line: 124]
.   .   .   .   .   Child: 1  Const 4 [line: 124]
.   .   .   .   Sibling: 1  Assign: ++ [line: 125]
.   .   .   .   .   Child: 0  Id: index [line: 125]
.   .   Sibling: 2  Return [line: 127]
Sibling: 9  Func: printBoard returns type void [line: 130]
.   Child: 1  Compound [line: 130]
.   .   Child: 0  Var: index of type int [line: 131]
.   .   Child: 1  Assign: <- [line: 132]
.   .   .   Child: 0  Id: index [line: 132]
.   .   .   Child: 1  Const 5 [line: 132]
.   .   Sibling: 1  While [line: 134]
.   .   .   Child: 0  Op: >= [line: 134]
.   .   .   .   Child: 0  Id: index [line: 134]
.   .   .   .   Child: 1  Const 0 [line: 134]
.   .   .   Child: 1  Compound [line: 134]
.   .   .   .   Child: 1  If [line: 135]
.   .   .   .   .   Child: 0  Op: = [line: 135]
.   .   .   .   .   .   Child: 0  Id: index [line: 135]
.   .   .   .   .   .   Child: 1  Const 5 [line: 135]
.   .   .   .   .   Child: 1  Compound [line: 135]
.   .   .   .   .   .   Child: 1  Call: outputb [line: 136]
.   .   .   .   .   .   .   Child: 0  Const true [line: 136]
.   .   .   .   .   .   Sibling: 1  Call: output [line: 137]
.   .   .   .   .   .   .   Child: 0  Id: sumPlayerT [line: 137]
.   .   .   .   .   .   Sibling: 2  Call: outputb [line: 138]
.   .   .   .   .   .   .   Child: 0  Const true [line: 138]
.   .   .   .   Sibling: 1  Call: output [line: 140]
.   .   .   .   .   Child: 0  Op: [ [line: 140]
.   .   .   .   .   .   Child: 0  Id: cups [line: 140]
.   .   .   .   .   .   Child: 1  Id: index [line: 140]
.   .   .   .   Sibling: 2  Assign: -- [line: 141]
.   .   .   .   .   Child: 0  Id: index [line: 141]
.   .   Sibling: 2  Call: outnl [line: 144]
.   .   Sibling: 3  Assign: <- [line: 145]
.   .   .   Child: 0  Id: index [line: 145]
.   .   .   Child: 1  Const 6 [line: 145]
.   .   Sibling: 4  While [line: 148]
.   .   .   Child: 0  Op: < [line: 148]
.   .   .   .   Child: 0  Id: index [line: 148]
.   .   .   .   Child: 1  Const 12 [line: 148]
.   .   .   Child: 1  Compound [line: 148]
.   .   .   .   Child: 1  If [line: 149]
.   .   .   .   .   Child: 0  Op: = [line: 149]
.   .   .   .   .   .   Child: 0  Id: index [line: 149]
.   .   .   .   .   .   Child: 1  Const 6 [line: 149]
.   .   .   .   .   Child: 1  Compound [line: 149]
.   .   .   .   .   .   Child: 1  Call: outputb [line: 150]
.   .   .   .   .   .   .   Child: 0  Const false [line: 150]
.   .   .   .   .   .   Sibling: 1  Call: output [line: 151]
.   .   .   .   .   .   .   Child: 0  Id: sumPlayerF [line: 151]
.   .   .   .   .   .   Sibling: 2  Call: outputb [line: 152]
.   .   .   .   .   .   .   Child: 0  Const false [line: 152]
.   .   .   .   Sibling: 1  Call: output [line: 154]
.   .   .   .   .   Child: 0  Op: [ [line: 154]
.   .   .   .   .   .   Child: 0  Id: cups [line: 154]
.   .   .   .   .   .   Child: 1  Id: index [line: 154]
.   .   .   .   Sibling: 2  Assign: ++ [line: 155]
.   .   .   .   .   Child: 0  Id: index [line: 155]
.   .   Sibling: 5  Call: outnl [line: 157]
.   .   Sibling: 6  Return [line: 158]
Sibling: 10  Func: tryPlayerT returns type void [line: 161]
.   Child: 1  Compound [line: 161]
.   .   Child: 1  If [line: 168]
.   .   .   Child: 0  Op: > [line: 168]
.   .   .   .   Child: 0  Id: sumPlayerT [line: 168]
.   .   .   .   Child: 1  Const 24 [line: 168]
.   .   .   Child: 1  Compound [line: 168]
.   .   .   .   Child: 1  Assign: <- [line: 169]
.   .   .   .   .   Child: 0  Id: winnerPlayerT [line: 169]
.   .   .   .   .   Child: 1  Const true [line: 169]
.   .   .   .   Sibling: 1  Assign: <- [line: 170]
.   .   .   .   .   Child: 0  Id: winner [line: 170]
.   .   .   .   .   Child: 1  Const true [line: 170]
.   .   Sibling: 1  Return [line: 172]
Sibling: 11  Func: tryPlayerF returns type void [line: 175]
.   Child: 1  Compound [line: 175]
.   .   Child: 1  If [line: 182]
.   .   .   Child: 0  Op: > [line: 182]
.   .   .   .   Child: 0  Id: sumPlayerF [line: 182]
.   .   .   .   Child: 1  Const 24 [line: 182]
.   .   .   Child: 1  Compound [line: 182]
.   .   .   .   Child: 1  Assign: <- [line: 183]
.   .   .   .   .   Child: 0  Id: winnerPlayerF [line: 183]
.   .   .   .   .   Child: 1  Const true [line: 183]
.   .   .   .   Sibling: 1  Assign: <- [line: 184]
.   .   .   .   .   Child: 0  Id: winner [line: 184]
.   .   .   .   .   Child: 1  Const true [line: 184]
.   .   Sibling: 1  Return [line: 186]
Sibling: 12  Func: moveSeeds returns type void [line: 189]
.   Child: 0  Parm: cup of type int [line: 189]
.   Sibling: 1  Parm: player of type bool [line: 189]
.   Child: 1  Compound [line: 189]
.   .   Child: 0  Var: index of type int [line: 190]
.   .   Sibling: 1  Var: numSeeds of type int [line: 190]
.   .   Sibling: 2  Var: numSeeds2 of type int [line: 190]
.   .   Sibling: 3  Var: consecutive of type bool [line: 191]
.   .   Child: 1  Assign: <- [line: 193]
.   .   .   Child: 0  Id: consecutive [line: 193]
.   .   .   Child: 1  Const true [line: 193]
.   .   Sibling: 1  Assign: <- [line: 194]
.   .   .   Child: 0  Id: numSeeds [line: 194]
.   .   .   Child: 1  Assign: <- [line: 194]
.   .   .   .   Child: 0  Id: numSeeds2 [line: 194]
.   .   .   .   Child: 1  Op: [ [line: 194]
.   .   .   .   .   Child: 0  Id: cups [line: 194]
.   .   .   .   .   Child: 1  Id: cup [line: 194]
.   .   Sibling: 2  Assign: <- [line: 195]
.   .   .   Child: 0  Op: [ [line: 195]
.   .   .   .   Child: 0  Id: cups [line: 195]
.   .   .   .   Child: 1  Id: cup [line: 195]
.   .   .   Child: 1  Const 0 [line: 195]
.   .   Sibling: 3  Assign: <- [line: 196]
.   .   .   Child: 0  Id: index [line: 196]
.   .   .   Child: 1  Id: cup [line: 196]
.   .   Sibling: 4  While [line: 198]
.   .   .   Child: 0  Op: != [line: 198]
.   .   .   .   Child: 0  Id: numSeeds [line: 198]
.   .   .   .   Child: 1  Const 0 [line: 198]
.   .   .   Child: 1  Compound [line: 198]
.   .   .   .   Child: 1  Assign: ++ [line: 199]
.   .   .   .   .   Child: 0  Id: index [line: 199]
.   .   .   .   Sibling: 1  If [line: 200]
.   .   .   .   .   Child: 0  Op: or [line: 200]
.   .   .   .   .   .   Child: 0  Op: > [line: 200]
.   .   .   .   .   .   .   Child: 0  Id: index [line: 200]
.   .   .   .   .   .   .   Child: 1  Const 11 [line: 200]
.   .   .   .   .   .   Child: 1  Op: < [line: 200]
.   .   .   .   .   .   .   Child: 0  Id: index [line: 200]
.   .   .   .   .   .   .   Child: 1  Const 0 [line: 200]
.   .   .   .   .   Child: 1  Compound [line: 200]
.   .   .   .   .   .   Child: 1  Assign: <- [line: 201]
.   .   .   .   .   .   .   Child: 0  Id: index [line: 201]
.   .   .   .   .   .   .   Child: 1  Const 0 [line: 201]
.   .   .   .   Sibling: 2  If [line: 204]
.   .   .   .   .   Child: 0  Op: != [line: 204]
.   .   .   .   .   .   Child: 0  Id: index [line: 204]
.   .   .   .   .   .   Child: 1  Id: cup [line: 204]
.   .   .   .   .   Child: 1  Compound [line: 204]
.   .   .   .   .   .   Child: 1  Assign: ++ [line: 205]
.   .   .   .   .   .   .   Child: 0  Op: [ [line: 205]
.   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 205]
.   .   .   .   .   .   .   .   Child: 1  Id: index [line: 205]
.   .   .   .   Sibling: 3  Assign: -- [line: 208]
.   .   .   .   .   Child: 0  Id: numSeeds [line: 208]
.   .   Sibling: 5  While [line: 212]
.   .   .   Child: 0  Op: and [line: 212]
.   .   .   .   Child: 0  Op: > [line: 212]
.   .   .   .   .   Child: 0  Id: numSeeds2 [line: 212]
.   .   .   .   .   Child: 1  Const 0 [line: 212]
.   .   .   .   Child: 1  Id: consecutive [line: 212]
.   .   .   Child: 1  Compound [line: 212]
.   .   .   .   Child: 1  If [line: 213]
.   .   .   .   .   Child: 0  Id: turn [line: 213]
.   .   .   .   .   Child: 1  Compound [line: 213]
.   .   .   .   .   .   Child: 1  If [line: 214]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 214]
.   .   .   .   .   .   .   .   Child: 0  Op: >= [line: 214]
.   .   .   .   .   .   .   .   .   Child: 0  Id: index [line: 214]
.   .   .   .   .   .   .   .   .   Child: 1  Const 6 [line: 214]
.   .   .   .   .   .   .   .   Child: 1  Op: < [line: 214]
.   .   .   .   .   .   .   .   .   Child: 0  Id: index [line: 214]
.   .   .   .   .   .   .   .   .   Child: 1  Const 12 [line: 214]
.   .   .   .   .   .   .   Child: 1  Compound [line: 214]
.   .   .   .   .   .   .   .   Child: 1  If [line: 215]
.   .   .   .   .   .   .   .   .   Child: 0  Op: or [line: 215]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: = [line: 215]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 215]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 215]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 215]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 2 [line: 215]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: = [line: 215]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 215]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 215]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 215]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 3 [line: 215]
.   .   .   .   .   .   .   .   .   Child: 1  Compound [line: 215]
.   .   .   .   .   .   .   .   .   .   Child: 1  If [line: 216]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 216]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [line: 216]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Assign: += [line: 217]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: sumPlayerT [line: 217]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: [ [line: 217]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 217]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 217]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 218]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 218]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 218]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 218]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 0 [line: 218]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Assign: <- [line: 219]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 219]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 219]
.   .   .   .   .   .   .   .   .   Child: 2  Compound [line: 222]
.   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 223]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 223]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const false [line: 223]
.   .   .   .   .   .   .   Child: 2  Compound [line: 226]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 227]
.   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 227]
.   .   .   .   .   .   .   .   .   Child: 1  Const false [line: 227]
.   .   .   .   .   Child: 2  Compound [line: 230]
.   .   .   .   .   .   Child: 1  If [line: 231]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 231]
.   .   .   .   .   .   .   .   Child: 0  Op: >= [line: 231]
.   .   .   .   .   .   .   .   .   Child: 0  Id: index [line: 231]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 [line: 231]
.   .   .   .   .   .   .   .   Child: 1  Op: < [line: 231]
.   .   .   .   .   .   .   .   .   Child: 0  Id: index [line: 231]
.   .   .   .   .   .   .   .   .   Child: 1  Const 6 [line: 231]
.   .   .   .   .   .   .   Child: 1  Compound [line: 231]
.   .   .   .   .   .   .   .   Child: 1  If [line: 232]
.   .   .   .   .   .   .   .   .   Child: 0  Op: or [line: 232]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: = [line: 232]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 232]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 232]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 232]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 2 [line: 232]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: = [line: 232]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 232]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 232]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 232]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 3 [line: 232]
.   .   .   .   .   .   .   .   .   Child: 1  Compound [line: 232]
.   .   .   .   .   .   .   .   .   .   Child: 1  If [line: 233]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 233]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [line: 233]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Assign: += [line: 234]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: sumPlayerF [line: 234]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: [ [line: 234]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 234]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 234]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 235]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ [line: 235]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: cups [line: 235]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: index [line: 235]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 0 [line: 235]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Assign: <- [line: 236]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 236]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 236]
.   .   .   .   .   .   .   .   .   Child: 2  Compound [line: 240]
.   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 241]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 241]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const false [line: 241]
.   .   .   .   .   .   .   Child: 2  Compound [line: 244]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 245]
.   .   .   .   .   .   .   .   .   Child: 0  Id: consecutive [line: 245]
.   .   .   .   .   .   .   .   .   Child: 1  Const false [line: 245]
.   .   .   .   Sibling: 1  Assign: -- [line: 249]
.   .   .   .   .   Child: 0  Id: index [line: 249]
.   .   .   .   Sibling: 2  If [line: 250]
.   .   .   .   .   Child: 0  Op: < [line: 250]
.   .   .   .   .   .   Child: 0  Id: index [line: 250]
.   .   .   .   .   .   Child: 1  Const 0 [line: 250]
.   .   .   .   .   Child: 1  Compound [line: 250]
.   .   .   .   .   .   Child: 1  Assign: <- [line: 251]
.   .   .   .   .   .   .   Child: 0  Id: index [line: 251]
.   .   .   .   .   .   .   Child: 1  Const 11 [line: 251]
.   .   .   .   Sibling: 3  Assign: -- [line: 254]
.   .   .   .   .   Child: 0  Id: numSeeds2 [line: 254]
Sibling: 13  Func: main returns type void [line: 258]
.   Child: 1  Compound [line: 258]
.   .   Child: 0  Var: play of type int [line: 259]
.   .   Sibling: 1  Var: playConverted of type bool [line: 260]
.   .   Child: 1  Assign: <- [line: 263]
.   .   .   Child: 0  Id: play [line: 263]
.   .   .   Child: 1  Const 0 [line: 263]
.   .   Sibling: 1  Assign: <- [line: 264]
.   .   .   Child: 0  Id: playConverted [line: 264]
.   .   .   Child: 1  Const false [line: 264]
.   .   Sibling: 2  Assign: <- [line: 265]
.   .   .   Child: 0  Id: turn [line: 265]
.   .   .   Child: 1  Const true [line: 265]
.   .   Sibling: 3  Assign: <- [line: 266]
.   .   .   Child: 0  Id: winner [line: 266]
.   .   .   Child: 1  Const false [line: 266]
.   .   Sibling: 4  Assign: <- [line: 267]
.   .   .   Child: 0  Id: sumPlayerT [line: 267]
.   .   .   Child: 1  Const 0 [line: 267]
.   .   Sibling: 5  Assign: <- [line: 268]
.   .   .   Child: 0  Id: sumPlayerF [line: 268]
.   .   .   Child: 1  Const 0 [line: 268]
.   .   Sibling: 6  Assign: <- [line: 269]
.   .   .   Child: 0  Id: winnerPlayerT [line: 269]
.   .   .   Child: 1  Const false [line: 269]
.   .   Sibling: 7  Assign: <- [line: 270]
.   .   .   Child: 0  Id: winnerPlayerF [line: 270]
.   .   .   Child: 1  Const false [line: 270]
.   .   Sibling: 8  Call: initGame [line: 272]
.   .   Sibling: 9  While [line: 275]
.   .   .   Child: 0  Op: not [line: 275]
.   .   .   .   Child: 0  Id: winner [line: 275]
.   .   .   Child: 1  Compound [line: 275]
.   .   .   .   Child: 1  Call: printBoard [line: 276]
.   .   .   .   Sibling: 1  If [line: 277]
.   .   .   .   .   Child: 0  Id: turn [line: 277]
.   .   .   .   .   Child: 1  Compound [line: 277]
.   .   .   .   .   .   Child: 1  Call: outputb [line: 278]
.   .   .   .   .   .   .   Child: 0  Const true [line: 278]
.   .   .   .   .   Child: 2  Compound [line: 280]
.   .   .   .   .   .   Child: 1  Call: outputb [line: 281]
.   .   .   .   .   .   .   Child: 0  Const false [line: 281]
.   .   .   .   Sibling: 2  Assign: <- [line: 284]
.   .   .   .   .   Child: 0  Id: play [line: 284]
.   .   .   .   .   Child: 1  Call: input [line: 284]
.   .   .   .   Sibling: 3  While [line: 285]
.   .   .   .   .   Child: 0  Op: or [line: 285]
.   .   .   .   .   .   Child: 0  Op: > [line: 285]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 285]
.   .   .   .   .   .   .   Child: 1  Const 6 [line: 285]
.   .   .   .   .   .   Child: 1  Op: < [line: 285]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 285]
.   .   .   .   .   .   .   Child: 1  Const 1 [line: 285]
.   .   .   .   .   Child: 1  Compound [line: 285]
.   .   .   .   .   .   Child: 1  Assign: <- [line: 286]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 286]
.   .   .   .   .   .   .   Child: 1  Call: input [line: 286]
.   .   .   .   Sibling: 4  Assign: -= [line: 289]
.   .   .   .   .   Child: 0  Id: play [line: 289]
.   .   .   .   .   Child: 1  Const 1 [line: 289]
.   .   .   .   Sibling: 5  If [line: 291]
.   .   .   .   .   Child: 0  Id: turn [line: 291]
.   .   .   .   .   Child: 1  Compound [line: 291]
.   .   .   .   .   .   Child: 1  If [line: 292]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 292]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 292]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 292]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 [line: 292]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 292]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 292]
.   .   .   .   .   .   .   Child: 1  Compound [line: 292]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 293]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 293]
.   .   .   .   .   .   .   .   .   Child: 1  Const 5 [line: 293]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 294]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 294]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 294]
.   .   .   .   .   .   Sibling: 1  If [line: 296]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 296]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 296]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 296]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 [line: 296]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 296]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 296]
.   .   .   .   .   .   .   Child: 1  Compound [line: 296]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 297]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 297]
.   .   .   .   .   .   .   .   .   Child: 1  Const 4 [line: 297]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 298]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 298]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 298]
.   .   .   .   .   .   Sibling: 2  If [line: 300]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 300]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 300]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 300]
.   .   .   .   .   .   .   .   .   Child: 1  Const 2 [line: 300]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 300]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 300]
.   .   .   .   .   .   .   Child: 1  Compound [line: 300]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 301]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 301]
.   .   .   .   .   .   .   .   .   Child: 1  Const 3 [line: 301]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 302]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 302]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 302]
.   .   .   .   .   .   Sibling: 3  If [line: 304]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 304]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 304]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 304]
.   .   .   .   .   .   .   .   .   Child: 1  Const 3 [line: 304]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 304]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 304]
.   .   .   .   .   .   .   Child: 1  Compound [line: 304]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 305]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 305]
.   .   .   .   .   .   .   .   .   Child: 1  Const 2 [line: 305]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 306]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 306]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 306]
.   .   .   .   .   .   Sibling: 4  If [line: 308]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 308]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 308]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 308]
.   .   .   .   .   .   .   .   .   Child: 1  Const 4 [line: 308]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 308]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 308]
.   .   .   .   .   .   .   Child: 1  Compound [line: 308]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 309]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 309]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 [line: 309]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 310]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 310]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 310]
.   .   .   .   .   .   Sibling: 5  If [line: 312]
.   .   .   .   .   .   .   Child: 0  Op: and [line: 312]
.   .   .   .   .   .   .   .   Child: 0  Op: = [line: 312]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 312]
.   .   .   .   .   .   .   .   .   Child: 1  Const 5 [line: 312]
.   .   .   .   .   .   .   .   Child: 1  Op: not [line: 312]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 312]
.   .   .   .   .   .   .   Child: 1  Compound [line: 312]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- [line: 313]
.   .   .   .   .   .   .   .   .   Child: 0  Id: play [line: 313]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 [line: 313]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- [line: 314]
.   .   .   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 314]
.   .   .   .   .   .   .   .   .   Child: 1  Const true [line: 314]
.   .   .   .   .   .   Sibling: 6  Assign: <- [line: 316]
.   .   .   .   .   .   .   Child: 0  Id: playConverted [line: 316]
.   .   .   .   .   .   .   Child: 1  Const false [line: 316]
.   .   .   .   .   .   Sibling: 7  Call: moveSeeds [line: 317]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 317]
.   .   .   .   .   .   .   Sibling: 1  Const true [line: 317]
.   .   .   .   .   .   Sibling: 8  Assign: <- [line: 318]
.   .   .   .   .   .   .   Child: 0  Id: turn [line: 318]
.   .   .   .   .   .   .   Child: 1  Const false [line: 318]
.   .   .   .   .   Child: 2  Compound [line: 320]
.   .   .   .   .   .   Child: 1  Assign: <- [line: 321]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 321]
.   .   .   .   .   .   .   Child: 1  Op: + [line: 321]
.   .   .   .   .   .   .   .   Child: 0  Id: play [line: 321]
.   .   .   .   .   .   .   .   Child: 1  Const 6 [line: 321]
.   .   .   .   .   .   Sibling: 1  Call: moveSeeds [line: 322]
.   .   .   .   .   .   .   Child: 0  Id: play [line: 322]
.   .   .   .   .   .   .   Sibling: 1  Const false [line: 322]
.   .   .   .   .   .   Sibling: 2  Assign: <- [line: 323]
.   .   .   .   .   .   .   Child: 0  Id: turn [line: 323]
.   .   .   .   .   .   .   Child: 1  Const true [line: 323]
.   .   .   .   Sibling: 6  Call: tryPlayerT [line: 325]
.   .   .   .   Sibling: 7  Call: tryPlayerF [line: 326]
.   .   Sibling: 10  If [line: 330]
.   .   .   Child: 0  Id: winnerPlayerT [line: 330]
.   .   .   Child: 1  Compound [line: 330]
.   .   .   .   Child: 1  Call: outnl [line: 331]
.   .   .   .   Sibling: 1  Call: outputb [line: 332]
.   .   .   .   .   Child: 0  Const true [line: 332]
.   .   .   .   Sibling: 2  Call: output [line: 333]
.   .   .   .   .   Child: 0  Id: sumPlayerT [line: 333]
.   .   .   .   Sibling: 3  Call: outnl [line: 334]
.   .   .   .   Sibling: 4  Call: outputb [line: 335]
.   .   .   .   .   Child: 0  Const false [line: 335]
.   .   .   .   Sibling: 5  Call: output [line: 336]
.   .   .   .   .   Child: 0  Id: sumPlayerF [line: 336]
.   .   .   .   Sibling: 6  Call: outnl [line: 337]
.   .   .   Child: 2  Compound [line: 340]
.   .   .   .   Child: 1  Call: outnl [line: 341]
.   .   .   .   Sibling: 1  Call: outputb [line: 342]
.   .   .   .   .   Child: 0  Const false [line: 342]
.   .   .   .   Sibling: 2  Call: output [line: 343]
.   .   .   .   .   Child: 0  Id: sumPlayerF [line: 343]
.   .   .   .   Sibling: 3  Call: outnl [line: 344]
.   .   .   .   Sibling: 4  Call: outputb [line: 345]
.   .   .   .   .   Child: 0  Const true [line: 345]
.   .   .   .   Sibling: 5  Call: output [line: 346]
.   .   .   .   .   Child: 0  Id: sumPlayerT [line: 346]
.   .   .   .   Sibling: 6  Call: outnl [line: 347]
.   .   Sibling: 11  Return [line: 349]

Func: fact returns type int [line: 2]
.   Child: 0  Parm: n of type int [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  If [line: 4]
.   .   .   Child: 0  Op: <= [line: 4]
.   .   .   .   Child: 0  Id: n [line: 4]
.   .   .   .   Child: 1  Const 1 [line: 4]
.   .   .   Child: 1  Return [line: 4]
.   .   .   .   Child: 0  Const 1 [line: 4]
.   .   .   Child: 2  Return [line: 5]
.   .   .   .   Child: 0  Op: * [line: 5]
.   .   .   .   .   Child: 0  Call: fact [line: 5]
.   .   .   .   .   .   Child: 0  Op: - [line: 5]
.   .   .   .   .   .   .   Child: 0  Id: n [line: 5]
.   .   .   .   .   .   .   Child: 1  Const 1 [line: 5]
.   .   .   .   .   Child: 1  Id: n [line: 5]
Sibling: 1  Func: main returns type void [line: 8]
.   Child: 1  Compound [line: 9]
.   .   Child: 1  For [line: 10]
.   .   .   Child: 0  Var: i of type int [line: 10]
.   .   .   Child: 1  Range [line: 10]
.   .   .   .   Child: 0  Const 1 [line: 10]
.   .   .   .   Child: 1  Const 20 [line: 10]
.   .   .   Child: 2  Compound [line: 10]
.   .   .   .   Child: 1  Call: output [line: 11]
.   .   .   .   .   Child: 0  Id: i [line: 11]
.   .   .   .   Sibling: 1  Call: output [line: 12]
.   .   .   .   .   Child: 0  Call: fact [line: 12]
.   .   .   .   .   .   Child: 0  Id: i [line: 12]
.   .   .   .   Sibling: 2  Call: outnl [line: 13]

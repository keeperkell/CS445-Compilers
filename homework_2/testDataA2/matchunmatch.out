Func: main returns type void [line: 1]
.   Child: 1  Compound [line: 2]
.   .   Child: 0  Var: s of type bool [line: 3]
.   .   Sibling: 1  Var: t of type bool [line: 3]
.   .   Sibling: 2  Var: u of type bool [line: 3]
.   .   Sibling: 3  Var: v of type bool [line: 3]
.   .   Sibling: 4  Var: a of type char [line: 4]
.   .   Sibling: 5  Var: b of type char [line: 4]
.   .   Sibling: 6  Var: c of type char [line: 4]
.   .   Sibling: 7  Var: d of type char [line: 4]
.   .   Child: 1  If [line: 6]
.   .   .   Child: 0  Op: = [line: 6]
.   .   .   .   Child: 0  Const 1 [line: 6]
.   .   .   .   Child: 1  Const 1 [line: 6]
.   .   .   Child: 1  While [line: 6]
.   .   .   .   Child: 0  Id: t [line: 6]
.   .   .   .   Child: 1  Id: a [line: 6]
.   .   .   Child: 2  Id: b [line: 6]
.   .   Sibling: 1  If [line: 7]
.   .   .   Child: 0  Op: = [line: 7]
.   .   .   .   Child: 0  Const 2 [line: 7]
.   .   .   .   Child: 1  Const 1 [line: 7]
.   .   .   Child: 1  While [line: 7]
.   .   .   .   Child: 0  Id: t [line: 7]
.   .   .   .   Child: 1  If [line: 7]
.   .   .   .   .   Child: 0  Id: u [line: 7]
.   .   .   .   .   Child: 1  Id: a [line: 7]
.   .   .   .   .   Child: 2  Id: b [line: 7]
.   .   Sibling: 2  If [line: 8]
.   .   .   Child: 0  Op: < [line: 8]
.   .   .   .   Child: 0  Const 3 [line: 8]
.   .   .   .   Child: 1  Const 2 [line: 8]
.   .   .   Child: 1  Id: a [line: 8]
.   .   .   Child: 2  If [line: 8]
.   .   .   .   Child: 0  Id: u [line: 8]
.   .   .   .   Child: 1  Id: b [line: 8]
.   .   .   .   Child: 2  If [line: 8]
.   .   .   .   .   Child: 0  Id: v [line: 8]
.   .   .   .   .   Child: 1  Id: c [line: 8]
.   .   .   .   .   Child: 2  Id: d [line: 8]
.   .   Sibling: 3  If [line: 9]
.   .   .   Child: 0  Op: = [line: 9]
.   .   .   .   Child: 0  Const 4 [line: 9]
.   .   .   .   Child: 1  Const 4 [line: 9]
.   .   .   Child: 1  While [line: 9]
.   .   .   .   Child: 0  Id: t [line: 9]
.   .   .   .   Child: 1  If [line: 9]
.   .   .   .   .   Child: 0  Id: u [line: 9]
.   .   .   .   .   Child: 1  Id: b [line: 9]
.   .   .   .   .   Child: 2  If [line: 9]
.   .   .   .   .   .   Child: 0  Id: v [line: 9]
.   .   .   .   .   .   Child: 1  Id: c [line: 9]
.   .   .   .   .   .   Child: 2  Id: d [line: 9]
.   .   Sibling: 4  If [line: 10]
.   .   .   Child: 0  Op: >= [line: 10]
.   .   .   .   Child: 0  Const 5 [line: 10]
.   .   .   .   Child: 1  Const 7 [line: 10]
.   .   .   Child: 1  While [line: 10]
.   .   .   .   Child: 0  Id: t [line: 10]
.   .   .   .   Child: 1  For [line: 10]
.   .   .   .   .   Child: 0  Var: i of type int [line: 10]
.   .   .   .   .   Child: 1  Range [line: 10]
.   .   .   .   .   .   Child: 0  Const 1 [line: 10]
.   .   .   .   .   .   Child: 1  Const 10 [line: 10]
.   .   .   .   .   Child: 2  Id: b [line: 10]
.   .   .   Child: 2  Id: c [line: 10]
.   .   Sibling: 5  If [line: 11]
.   .   .   Child: 0  Op: = [line: 11]
.   .   .   .   Child: 0  Const 6 [line: 11]
.   .   .   .   Child: 1  Const 6 [line: 11]
.   .   .   Child: 1  While [line: 11]
.   .   .   .   Child: 0  Id: t [line: 11]
.   .   .   .   Child: 1  If [line: 11]
.   .   .   .   .   Child: 0  Id: u [line: 11]
.   .   .   .   .   Child: 1  For [line: 11]
.   .   .   .   .   .   Child: 0  Var: k of type int [line: 11]
.   .   .   .   .   .   Child: 1  Range [line: 11]
.   .   .   .   .   .   .   Child: 0  Const 0 [line: 11]
.   .   .   .   .   .   .   Child: 1  Const 1 [line: 11]
.   .   .   .   .   .   Child: 2  Id: b [line: 11]
.   .   .   .   .   Child: 2  Id: c [line: 11]

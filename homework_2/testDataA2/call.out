Func: showInt returns type int [line: 2]
.   Child: 0  Parm: x of type int [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 1  Call: output [line: 4]
.   .   .   Child: 0  Id: x [line: 4]
.   .   Sibling: 1  Call: outnl [line: 5]
Sibling: 1  Func: showIntArray returns type int [line: 8]
.   Child: 0  Parm: x of array of type int [line: 8]
.   Sibling: 1  Parm: size of type int [line: 8]
.   Child: 1  Compound [line: 9]
.   .   Child: 0  Var: i of type int [line: 10]
.   .   Child: 1  Assign: <- [line: 11]
.   .   .   Child: 0  Id: i [line: 11]
.   .   .   Child: 1  Const 0 [line: 11]
.   .   Sibling: 1  While [line: 12]
.   .   .   Child: 0  Op: < [line: 12]
.   .   .   .   Child: 0  Id: i [line: 12]
.   .   .   .   Child: 1  Id: size [line: 12]
.   .   .   Child: 1  Compound [line: 12]
.   .   .   .   Child: 1  Call: output [line: 13]
.   .   .   .   .   Child: 0  Op: [ [line: 13]
.   .   .   .   .   .   Child: 0  Id: x [line: 13]
.   .   .   .   .   .   Child: 1  Id: i [line: 13]
.   .   .   .   Sibling: 1  Assign: <- [line: 14]
.   .   .   .   .   Child: 0  Id: i [line: 14]
.   .   .   .   .   Child: 1  Op: + [line: 14]
.   .   .   .   .   .   Child: 0  Id: i [line: 14]
.   .   .   .   .   .   Child: 1  Const 1 [line: 14]
.   .   Sibling: 2  Call: outnl [line: 16]
Sibling: 2  Func: showBool returns type int [line: 19]
.   Child: 0  Parm: x of type bool [line: 19]
.   Child: 1  Compound [line: 20]
.   .   Child: 1  Call: outputb [line: 21]
.   .   .   Child: 0  Id: x [line: 21]
.   .   Sibling: 1  Call: outnl [line: 22]
Sibling: 3  Func: truth returns type bool [line: 25]
.   Child: 1  Compound [line: 26]
.   .   Child: 1  Return [line: 27]
.   .   .   Child: 0  Const true [line: 27]
Sibling: 4  Func: magic returns type int [line: 30]
.   Child: 1  Compound [line: 31]
.   .   Child: 1  Return [line: 32]
.   .   .   Child: 0  Const 666 [line: 32]
Sibling: 5  Func: sqr returns type int [line: 35]
.   Child: 0  Parm: x of type int [line: 35]
.   Child: 1  Compound [line: 36]
.   .   Child: 1  Return [line: 37]
.   .   .   Child: 0  Op: * [line: 37]
.   .   .   .   Child: 0  Id: x [line: 37]
.   .   .   .   Child: 1  Id: x [line: 37]
Sibling: 6  Func: add returns type int [line: 40]
.   Child: 0  Parm: x of type int [line: 40]
.   Sibling: 1  Parm: y of type int [line: 40]
.   Child: 1  Compound [line: 41]
.   .   Child: 1  Return [line: 42]
.   .   .   Child: 0  Op: + [line: 42]
.   .   .   .   Child: 0  Id: x [line: 42]
.   .   .   .   Child: 1  Id: y [line: 42]
Sibling: 7  Func: mul returns type int [line: 45]
.   Child: 0  Parm: x of type int [line: 45]
.   Sibling: 1  Parm: y of type int [line: 45]
.   Child: 1  Compound [line: 46]
.   .   Child: 1  Return [line: 47]
.   .   .   Child: 0  Op: * [line: 47]
.   .   .   .   Child: 0  Id: x [line: 47]
.   .   .   .   Child: 1  Id: y [line: 47]
Sibling: 8  Var: g of type int [line: 50]
Sibling: 9  Func: caller returns type void [line: 52]
.   Child: 0  Parm: x of type int [line: 52]
.   Sibling: 1  Parm: y of array of type int [line: 52]
.   Child: 1  Compound [line: 53]
.   .   Child: 0  Var: z of type int [line: 54]
.   .   Sibling: 1  Var: a of type int [line: 55]
.   .   Child: 1  Assign: <- [line: 57]
.   .   .   Child: 0  Id: a [line: 57]
.   .   .   Child: 1  Const 666 [line: 57]
.   .   Sibling: 1  Assign: <- [line: 58]
.   .   .   Child: 0  Id: g [line: 58]
.   .   .   Child: 1  Const 777 [line: 58]
.   .   Sibling: 2  Assign: <- [line: 60]
.   .   .   Child: 0  Id: z [line: 60]
.   .   .   Child: 1  Call: sqr [line: 60]
.   .   .   .   Child: 0  Id: x [line: 60]
.   .   Sibling: 3  Call: output [line: 61]
.   .   .   Child: 0  Id: z [line: 61]
.   .   Sibling: 4  Call: outnl [line: 62]
.   .   Sibling: 5  Assign: <- [line: 64]
.   .   .   Child: 0  Id: z [line: 64]
.   .   .   Child: 1  Call: sqr [line: 64]
.   .   .   .   Child: 0  Op: [ [line: 64]
.   .   .   .   .   Child: 0  Id: y [line: 64]
.   .   .   .   .   Child: 1  Const 7 [line: 64]
.   .   Sibling: 6  Call: output [line: 65]
.   .   .   Child: 0  Id: z [line: 65]
.   .   Sibling: 7  Call: outnl [line: 66]
.   .   Sibling: 8  Assign: <- [line: 68]
.   .   .   Child: 0  Id: z [line: 68]
.   .   .   Child: 1  Call: sqr [line: 68]
.   .   .   .   Child: 0  Id: a [line: 68]
.   .   Sibling: 9  Call: output [line: 69]
.   .   .   Child: 0  Id: z [line: 69]
.   .   Sibling: 10  Call: outnl [line: 70]
.   .   Sibling: 11  Assign: <- [line: 72]
.   .   .   Child: 0  Id: z [line: 72]
.   .   .   Child: 1  Call: sqr [line: 72]
.   .   .   .   Child: 0  Id: g [line: 72]
.   .   Sibling: 12  Call: output [line: 73]
.   .   .   Child: 0  Id: z [line: 73]
.   .   Sibling: 13  Call: outnl [line: 74]
Sibling: 10  Func: swap returns type void [line: 77]
.   Child: 0  Parm: x of array of type int [line: 77]
.   Sibling: 1  Parm: z1 of type int [line: 77]
.   Sibling: 2  Parm: z2 of type int [line: 77]
.   Child: 1  Compound [line: 78]
.   .   Child: 0  Var: tmp of type int [line: 79]
.   .   Child: 1  Assign: <- [line: 80]
.   .   .   Child: 0  Id: tmp [line: 80]
.   .   .   Child: 1  Op: [ [line: 80]
.   .   .   .   Child: 0  Id: x [line: 80]
.   .   .   .   Child: 1  Id: z1 [line: 80]
.   .   Sibling: 1  Assign: <- [line: 81]
.   .   .   Child: 0  Op: [ [line: 81]
.   .   .   .   Child: 0  Id: x [line: 81]
.   .   .   .   Child: 1  Id: z1 [line: 81]
.   .   .   Child: 1  Op: [ [line: 81]
.   .   .   .   Child: 0  Id: x [line: 81]
.   .   .   .   Child: 1  Id: z2 [line: 81]
.   .   Sibling: 2  Assign: <- [line: 82]
.   .   .   Child: 0  Op: [ [line: 82]
.   .   .   .   Child: 0  Id: x [line: 82]
.   .   .   .   Child: 1  Id: z2 [line: 82]
.   .   .   Child: 1  Id: tmp [line: 82]
Sibling: 11  Func: main returns type void [line: 85]
.   Child: 1  Compound [line: 86]
.   .   Child: 0  Var: p of type int [line: 87]
.   .   Sibling: 1  Var: q of type int [line: 87]
.   .   Sibling: 2  Var: r of array of type int [line: 87]
.   .   Sibling: 3  Var: s of array of type int [line: 87]
.   .   Child: 1  Assign: <- [line: 89]
.   .   .   Child: 0  Id: p [line: 89]
.   .   .   Child: 1  Const 0 [line: 89]
.   .   Sibling: 1  While [line: 90]
.   .   .   Child: 0  Op: < [line: 90]
.   .   .   .   Child: 0  Id: p [line: 90]
.   .   .   .   Child: 1  Const 10 [line: 90]
.   .   .   Child: 1  Compound [line: 90]
.   .   .   .   Child: 1  Assign: <- [line: 91]
.   .   .   .   .   Child: 0  Op: [ [line: 91]
.   .   .   .   .   .   Child: 0  Id: r [line: 91]
.   .   .   .   .   .   Child: 1  Id: p [line: 91]
.   .   .   .   .   Child: 1  Id: p [line: 91]
.   .   .   .   Sibling: 1  Assign: ++ [line: 92]
.   .   .   .   .   Child: 0  Id: p [line: 92]
.   .   Sibling: 2  Assign: <- [line: 95]
.   .   .   Child: 0  Id: p [line: 95]
.   .   .   Child: 1  Const 111 [line: 95]
.   .   Sibling: 3  Assign: <- [line: 96]
.   .   .   Child: 0  Id: q [line: 96]
.   .   .   Child: 1  Const 222 [line: 96]
.   .   Sibling: 4  Assign: <- [line: 97]
.   .   .   Child: 0  Op: [ [line: 97]
.   .   .   .   Child: 0  Id: r [line: 97]
.   .   .   .   Child: 1  Const 7 [line: 97]
.   .   .   Child: 1  Const 333 [line: 97]
.   .   Sibling: 5  Assign: <- [line: 98]
.   .   .   Child: 0  Op: [ [line: 98]
.   .   .   .   Child: 0  Id: s [line: 98]
.   .   .   .   Child: 1  Const 7 [line: 98]
.   .   .   Child: 1  Const 444 [line: 98]
.   .   Sibling: 6  Call: showInt [line: 100]
.   .   .   Child: 0  Id: p [line: 100]
.   .   Sibling: 7  Call: showIntArray [line: 102]
.   .   .   Child: 0  Id: r [line: 102]
.   .   .   Sibling: 1  Const 10 [line: 102]
.   .   Sibling: 8  Call: showBool [line: 104]
.   .   .   Child: 0  Call: truth [line: 104]
.   .   Sibling: 9  Call: output [line: 106]
.   .   .   Child: 0  Call: showInt [line: 106]
.   .   .   .   Child: 0  Id: p [line: 106]
.   .   Sibling: 10  Call: output [line: 107]
.   .   .   Child: 0  Call: showBool [line: 107]
.   .   .   .   Child: 0  Call: truth [line: 107]
.   .   Sibling: 11  Call: caller [line: 109]
.   .   .   Child: 0  Id: p [line: 109]
.   .   .   Sibling: 1  Id: r [line: 109]
.   .   Sibling: 12  Call: output [line: 111]
.   .   .   Child: 0  Call: add [line: 111]
.   .   .   .   Child: 0  Call: add [line: 111]
.   .   .   .   .   Child: 0  Id: p [line: 111]
.   .   .   .   .   Sibling: 1  Id: q [line: 111]
.   .   .   .   Sibling: 1  Call: mul [line: 111]
.   .   .   .   .   Child: 0  Id: p [line: 111]
.   .   .   .   .   Sibling: 1  Id: q [line: 111]
.   .   Sibling: 13  Call: outnl [line: 112]
.   .   Sibling: 14  Assign: <- [line: 113]
.   .   .   Child: 0  Op: [ [line: 113]
.   .   .   .   Child: 0  Id: r [line: 113]
.   .   .   .   Child: 1  Const 9 [line: 113]
.   .   .   Child: 1  Const 555 [line: 113]
.   .   Sibling: 15  Call: swap [line: 114]
.   .   .   Child: 0  Id: r [line: 114]
.   .   .   Sibling: 1  Const 7 [line: 114]
.   .   .   Sibling: 2  Const 9 [line: 114]
.   .   Sibling: 16  Call: output [line: 115]
.   .   .   Child: 0  Op: [ [line: 115]
.   .   .   .   Child: 0  Id: r [line: 115]
.   .   .   .   Child: 1  Const 9 [line: 115]
.   .   Sibling: 17  Call: outnl [line: 116]
.   .   Sibling: 18  Call: output [line: 117]
.   .   .   Child: 0  Op: * [line: 117]
.   .   .   .   Child: 0  Const 2 [line: 117]
.   .   .   .   Child: 1  Call: add [line: 117]
.   .   .   .   .   Child: 0  Op: * [line: 117]
.   .   .   .   .   .   Child: 0  Call: add [line: 117]
.   .   .   .   .   .   .   Child: 0  Op: * [line: 117]
.   .   .   .   .   .   .   .   Child: 0  Const 3 [line: 117]
.   .   .   .   .   .   .   .   Child: 1  Const 4 [line: 117]
.   .   .   .   .   .   .   Sibling: 1  Op: * [line: 117]
.   .   .   .   .   .   .   .   Child: 0  Const 5 [line: 117]
.   .   .   .   .   .   .   .   Child: 1  Const 6 [line: 117]
.   .   .   .   .   .   Child: 1  Const 7 [line: 117]
.   .   .   .   .   Sibling: 1  Op: * [line: 117]
.   .   .   .   .   .   Child: 0  Call: add [line: 117]
.   .   .   .   .   .   .   Child: 0  Op: * [line: 117]
.   .   .   .   .   .   .   .   Child: 0  Const 9 [line: 117]
.   .   .   .   .   .   .   .   Child: 1  Const 10 [line: 117]
.   .   .   .   .   .   .   Sibling: 1  Op: * [line: 117]
.   .   .   .   .   .   .   .   Child: 0  Const 11 [line: 117]
.   .   .   .   .   .   .   .   Child: 1  Const 12 [line: 117]
.   .   .   .   .   .   Child: 1  Const 13 [line: 117]
.   .   Sibling: 19  Call: outnl [line: 118]

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: outputarray returns type void [mem: Global loc: 0 size: -3] [line: 1]
.   Child: 0  Parm: s of array of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Child: 1  Assign: <- of type int [line: 5]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   .   Child: 1  Const 0 of type int [line: 5]
.   .   Sibling: 1  While [line: 6]
.   .   .   Child: 0  Op: < of type bool [line: 6]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 6]
.   .   .   .   .   Child: 0  Id: s of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   .   .   Child: 1  Call: output of type void [line: 7]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 7]
.   .   .   .   .   .   Child: 0  Id: s of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 8]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   Sibling: 2  Call: outnl of type void [line: 10]
Sibling: 8  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 13]
.   Child: 1  Compound [mem: None loc: 0 size: -38] [line: 14]
.   .   Child: 0  Var: a of array of type int [mem: Local loc: -3 size: 10] [line: 15]
.   .   Sibling: 1  Var: b of array of type int [mem: Local loc: -13 size: 5] [line: 16]
.   .   Sibling: 2  Var: h of array of type int [mem: Local loc: -18 size: 7] [line: 17]
.   .   Sibling: 3  Var: small of array of type int [mem: Local loc: -25 size: 3] [line: 18]
.   .   Sibling: 4  Var: big of array of type int [mem: Local loc: -28 size: 11] [line: 19]
.   .   Child: 1  For [mem: None loc: 0 size: -41] [line: 21]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -38 size: 1] [line: 21]
.   .   .   Child: 1  Range [line: 21]
.   .   .   .   Child: 0  Const 0 of type int [line: 21]
.   .   .   .   Child: 1  Const 9 of type int [line: 21]
.   .   .   Child: 2  Assign: <- of type int [line: 21]
.   .   .   .   Child: 0  Op: [ of type int [line: 21]
.   .   .   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 10] [line: 21]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -38 size: 1] [line: 21]
.   .   .   .   Child: 1  Op: + of type int [line: 21]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -38 size: 1] [line: 21]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 21]
.   .   Sibling: 1  For [mem: None loc: 0 size: -41] [line: 22]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -38 size: 1] [line: 22]
.   .   .   Child: 1  Range [line: 22]
.   .   .   .   Child: 0  Const 0 of type int [line: 22]
.   .   .   .   Child: 1  Const 4 of type int [line: 22]
.   .   .   Child: 2  Assign: <- of type int [line: 22]
.   .   .   .   Child: 0  Op: [ of type int [line: 22]
.   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -13 size: 5] [line: 22]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -38 size: 1] [line: 22]
.   .   .   .   Child: 1  Op: + of type int [line: 22]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -38 size: 1] [line: 22]
.   .   .   .   .   Child: 1  Const 200 of type int [line: 22]
.   .   Sibling: 2  For [mem: None loc: 0 size: -41] [line: 23]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -38 size: 1] [line: 23]
.   .   .   Child: 1  Range [line: 23]
.   .   .   .   Child: 0  Const 0 of type int [line: 23]
.   .   .   .   Child: 1  Const 6 of type int [line: 23]
.   .   .   Child: 2  Assign: <- of type int [line: 23]
.   .   .   .   Child: 0  Op: [ of type int [line: 23]
.   .   .   .   .   Child: 0  Id: h of array of type int [mem: Local loc: -18 size: 7] [line: 23]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -38 size: 1] [line: 23]
.   .   .   .   Child: 1  Op: + of type int [line: 23]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -38 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Const 3000 of type int [line: 23]
.   .   Sibling: 3  Assign: <- of type int [line: 24]
.   .   .   Child: 0  Op: [ of type int [line: 24]
.   .   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 24]
.   .   .   .   Child: 1  Const 9 of type int [line: 24]
.   .   .   Child: 1  Const 2048 of type int [line: 24]
.   .   Sibling: 4  Assign: <- of array of type int [line: 26]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 26]
.   .   .   Child: 1  Id: a of array of type int [mem: Local loc: -3 size: 10] [line: 26]
.   .   Sibling: 5  Call: outputarray of type void [line: 27]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 27]
.   .   Sibling: 6  Assign: <- of array of type int [line: 28]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 28]
.   .   .   Child: 1  Id: a of array of type int [mem: Local loc: -3 size: 10] [line: 28]
.   .   Sibling: 7  Call: outputarray of type void [line: 29]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 29]
.   .   Sibling: 8  Call: outnl of type void [line: 30]
.   .   Sibling: 9  Assign: <- of array of type int [line: 32]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 32]
.   .   .   Child: 1  Id: b of array of type int [mem: Local loc: -13 size: 5] [line: 32]
.   .   Sibling: 10  Call: outputarray of type void [line: 33]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 33]
.   .   Sibling: 11  Assign: <- of array of type int [line: 34]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 34]
.   .   .   Child: 1  Id: b of array of type int [mem: Local loc: -13 size: 5] [line: 34]
.   .   Sibling: 12  Call: outputarray of type void [line: 35]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 35]
.   .   Sibling: 13  Call: outnl of type void [line: 36]
.   .   Sibling: 14  Assign: <- of array of type int [line: 38]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 38]
.   .   .   Child: 1  Id: h of array of type int [mem: Local loc: -18 size: 7] [line: 38]
.   .   Sibling: 15  Call: outputarray of type void [line: 39]
.   .   .   Child: 0  Id: small of array of type int [mem: Local loc: -25 size: 3] [line: 39]
.   .   Sibling: 16  Assign: <- of array of type int [line: 40]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 40]
.   .   .   Child: 1  Id: h of array of type int [mem: Local loc: -18 size: 7] [line: 40]
.   .   Sibling: 17  Call: outputarray of type void [line: 41]
.   .   .   Child: 0  Id: big of array of type int [mem: Local loc: -28 size: 11] [line: 41]
.   .   Sibling: 18  Call: outnl of type void [line: 42]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0

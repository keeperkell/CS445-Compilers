WARNING(15): The variable 'i' seems not to be used.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: roman returns type void [mem: Global loc: 0 size: -3] [line: 1]
.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -149] [line: 1]
.   .   Child: 0  Var: b of type int [mem: Local loc: -3 size: 1] [line: 2]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -4 size: 1] [line: 2]
.   .   Sibling: 2  Var: i of type int [mem: Local loc: -5 size: 1] [line: 2]
.   .   Sibling: 3  Var: value of array of type int [mem: Local loc: -7 size: 14] [line: 3]
.   .   Sibling: 4  Var: letters of array of type char [mem: Local loc: -21 size: 27] [line: 4]
.   .   .   Child: 0  Const "M CMD CDC XCL XLX IXV IVI " of array of type char [mem: Global loc: -1 size: 27] [line: 4]
.   .   Sibling: 5  Var: s of array of type char [mem: Local loc: -48 size: 101] [line: 5]
.   .   Sibling: 6  Var: sloc of type int [mem: Local loc: -148 size: 1] [line: 6]
.   .   Child: 1  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Const 100 of type int [line: 13]
.   .   Sibling: 1  Assign: <- of type int [line: 14]
.   .   .   Child: 0  Op: [ of type int [line: 14]
.   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 14]
.   .   .   .   Child: 1  Assign: <- of type int [line: 14]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 14]
.   .   .   Child: 1  Const 1000 of type int [line: 14]
.   .   Sibling: 2  For [mem: None loc: 0 size: -152] [line: 15]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -149 size: 1] [line: 15]
.   .   .   Child: 1  Range [line: 15]
.   .   .   .   Child: 0  Const 0 of type int [line: 15]
.   .   .   .   Child: 1  Const 3 of type int [line: 15]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -152] [line: 15]
.   .   .   .   Child: 1  Assign: <- of type int [line: 16]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 16]
.   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 16]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 16]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -4 size: 1] [line: 16]
.   .   .   .   .   Child: 1  Op: * of type int [line: 16]
.   .   .   .   .   .   Child: 0  Const 9 of type int [line: 16]
.   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 17]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 17]
.   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 17]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -4 size: 1] [line: 17]
.   .   .   .   .   Child: 1  Op: * of type int [line: 17]
.   .   .   .   .   .   Child: 0  Const 5 of type int [line: 17]
.   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 18]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 18]
.   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 18]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 18]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Op: * of type int [line: 18]
.   .   .   .   .   .   Child: 0  Const 4 of type int [line: 18]
.   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 19]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 19]
.   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 19]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 19]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -4 size: 1] [line: 19]
.   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Sibling: 4  Assign: /= of type int [line: 20]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 20]
.   .   Sibling: 3  Assign: <- of type int [line: 23]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 23]
.   .   .   Child: 1  Const 0 of type int [line: 23]
.   .   Sibling: 4  Assign: <- of type int [line: 24]
.   .   .   Child: 0  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 24]
.   .   .   Child: 1  Const 0 of type int [line: 24]
.   .   Sibling: 5  While [line: 25]
.   .   .   Child: 0  Op: > of type bool [line: 25]
.   .   .   .   Child: 0  Op: [ of type int [line: 25]
.   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 25]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 25]
.   .   .   .   Child: 1  Const 0 of type int [line: 25]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -149] [line: 25]
.   .   .   .   Child: 1  While [line: 26]
.   .   .   .   .   Child: 0  Op: >= of type bool [line: 26]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 26]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 26]
.   .   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 26]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 26]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -149] [line: 26]
.   .   .   .   .   .   Child: 1  Assign: -= of type int [line: 27]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 27]
.   .   .   .   .   .   .   .   Child: 0  Id: value of array of type int [mem: Local loc: -7 size: 14] [line: 27]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 27]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type char [line: 28]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 28]
.   .   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Local loc: -48 size: 101] [line: 28]
.   .   .   .   .   .   .   .   Child: 1  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 28]
.   .   .   .   .   .   .   Child: 1  Op: [ of type char [line: 28]
.   .   .   .   .   .   .   .   Child: 0  Id: letters of array of type char [mem: Local loc: -21 size: 27] [line: 28]
.   .   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 28]
.   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 28]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 28]
.   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 29]
.   .   .   .   .   .   .   Child: 0  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 29]
.   .   .   .   .   .   Sibling: 3  If [line: 30]
.   .   .   .   .   .   .   Child: 0  Op: != of type bool [line: 30]
.   .   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 30]
.   .   .   .   .   .   .   .   .   Child: 0  Id: letters of array of type char [mem: Local loc: -21 size: 27] [line: 30]
.   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 30]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 30]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 30]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 30]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 30]
.   .   .   .   .   .   .   .   Child: 1  Const ' ' of type char [line: 30]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -149] [line: 30]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- of type char [line: 31]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Local loc: -48 size: 101] [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 31]
.   .   .   .   .   .   .   .   .   Child: 1  Op: [ of type char [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: letters of array of type char [mem: Local loc: -21 size: 27] [line: 31]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 31]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 31]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 31]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 32]
.   .   .   .   .   .   .   .   .   Child: 0  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 32]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 35]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 35]
.   .   Sibling: 6  For [mem: None loc: 0 size: -152] [line: 38]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -149 size: 1] [line: 38]
.   .   .   Child: 1  Range [line: 38]
.   .   .   .   Child: 0  Const 0 of type int [line: 38]
.   .   .   .   Child: 1  Id: sloc of type int [mem: Local loc: -148 size: 1] [line: 38]
.   .   .   Child: 2  Call: outputc of type void [line: 38]
.   .   .   .   Child: 0  Op: [ of type char [line: 38]
.   .   .   .   .   Child: 0  Id: s of array of type char [mem: Local loc: -48 size: 101] [line: 38]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -149 size: 1] [line: 38]
Sibling: 8  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 41]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 41]
.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 42]
.   .   Child: 1  While [line: 43]
.   .   .   Child: 0  Const true of type bool [line: 43]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 43]
.   .   .   .   Child: 1  Assign: <- of type int [line: 44]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 44]
.   .   .   .   .   Child: 1  Call: input of type int [line: 44]
.   .   .   .   Sibling: 1  If [line: 45]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 45]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 45]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 45]
.   .   .   .   .   Child: 1  Break [line: 45]
.   .   .   .   Sibling: 2  Call: roman of type void [line: 46]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 46]
.   .   .   .   Sibling: 3  Call: outnl of type void [line: 47]
Offset for end of global space: -27
Number of warnings: 1
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: n of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 8  Func: put returns type void [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: p of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
.   .   Child: 0  Var: j of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 1  Var: sum of type int [mem: Local loc: -4 size: 1] [line: 6]
.   .   Child: 1  Assign: <- of type int [line: 8]
.   .   .   Child: 0  Id: sum of type int [mem: Local loc: -4 size: 1] [line: 8]
.   .   .   Child: 1  Op: [ of type int [line: 8]
.   .   .   .   Child: 0  Id: p of array of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   .   .   Child: 1  Const 1 of type int [line: 8]
.   .   Sibling: 1  Assign: <- of type int [line: 9]
.   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   Child: 1  Const 2 of type int [line: 9]
.   .   Sibling: 2  While [line: 10]
.   .   .   Child: 0  Op: <= of type bool [line: 10]
.   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 10]
.   .   .   .   Child: 1  Assign: <- of type int [line: 11]
.   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 11]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 12]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   .   Child: 1  Op: + of type int [line: 12]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 12]
.   .   Sibling: 3  Call: output of type void [line: 14]
.   .   .   Child: 0  Id: sum of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   Sibling: 4  Call: outnl of type void [line: 15]
Sibling: 9  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 19]
.   Child: 1  Compound [mem: None loc: 0 size: -25] [line: 20]
.   .   Child: 0  Var: p of array of type int [mem: Local loc: -3 size: 21] [line: 21]
.   .   Sibling: 1  Var: i of type int [mem: Local loc: -23 size: 1] [line: 22]
.   .   Sibling: 2  Var: j of type int [mem: Local loc: -24 size: 1] [line: 23]
.   .   Child: 1  Assign: <- of type int [line: 25]
.   .   .   Child: 0  Id: n of type int [mem: Global loc: 0 size: 1] [line: 25]
.   .   .   Child: 1  Call: input of type int [line: 25]
.   .   Sibling: 1  Assign: <- of type int [line: 27]
.   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 27]
.   .   .   Child: 1  Const 0 of type int [line: 27]
.   .   Sibling: 2  While [line: 28]
.   .   .   Child: 0  Op: <= of type bool [line: 28]
.   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 28]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: 0 size: 1] [line: 28]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -25] [line: 28]
.   .   .   .   Child: 1  Assign: <- of type int [line: 29]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 29]
.   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 29]
.   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -24 size: 1] [line: 29]
.   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -24 size: 1] [line: 29]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 30]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 30]
.   .   .   .   .   Child: 1  Op: + of type int [line: 30]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 30]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 30]
.   .   Sibling: 3  Assign: <- of type int [line: 33]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 33]
.   .   .   Child: 1  Const 1 of type int [line: 33]
.   .   Sibling: 4  While [line: 34]
.   .   .   Child: 0  Op: > of type bool [line: 34]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 34]
.   .   .   .   Child: 1  Const 0 of type int [line: 34]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -28] [line: 34]
.   .   .   .   Child: 0  Var: r of type int [mem: Local loc: -25 size: 1] [line: 35]
.   .   .   .   Sibling: 1  Var: s of type int [mem: Local loc: -26 size: 1] [line: 36]
.   .   .   .   Sibling: 2  Var: tmp of type int [mem: Local loc: -27 size: 1] [line: 37]
.   .   .   .   Child: 1  Call: put of type void [line: 39]
.   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 39]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 42]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 42]
.   .   .   .   .   Child: 1  Op: - of type int [line: 42]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: 0 size: 1] [line: 42]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 42]
.   .   .   .   Sibling: 2  While [line: 43]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 43]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 43]
.   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 43]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 43]
.   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 43]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 43]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 43]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]
.   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 43]
.   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 45]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 45]
.   .   .   .   .   Child: 1  Id: n of type int [mem: Global loc: 0 size: 1] [line: 45]
.   .   .   .   Sibling: 4  While [line: 46]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 46]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 46]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -23 size: 1] [line: 46]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 46]
.   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 46]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]
.   .   .   .   .   .   Child: 1  Op: - of type int [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -24 size: 1] [line: 46]
.   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 46]
.   .   .   .   Sibling: 5  Assign: <- of type int [line: 48]
.   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 48]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 48]
.   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 48]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -23 size: 1] [line: 48]
.   .   .   .   Sibling: 6  Assign: <- of type int [line: 48]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 48]
.   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 48]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -23 size: 1] [line: 48]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 48]
.   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 48]
.   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -24 size: 1] [line: 48]
.   .   .   .   Sibling: 7  Assign: <- of type int [line: 48]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 48]
.   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 48]
.   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -24 size: 1] [line: 48]
.   .   .   .   .   Child: 1  Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 48]
.   .   .   .   Sibling: 8  Assign: <- of type int [line: 50]
.   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -25 size: 1] [line: 50]
.   .   .   .   .   Child: 1  Id: n of type int [mem: Global loc: 0 size: 1] [line: 50]
.   .   .   .   Sibling: 9  Assign: <- of type int [line: 51]
.   .   .   .   .   Child: 0  Id: s of type int [mem: Local loc: -26 size: 1] [line: 51]
.   .   .   .   .   Child: 1  Op: + of type int [line: 51]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -23 size: 1] [line: 51]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 51]
.   .   .   .   Sibling: 10  While [line: 52]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 52]
.   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -25 size: 1] [line: 52]
.   .   .   .   .   .   Child: 1  Id: s of type int [mem: Local loc: -26 size: 1] [line: 52]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -28] [line: 52]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 53]
.   .   .   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 53]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 53]
.   .   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 53]
.   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -25 size: 1] [line: 53]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 53]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 53]
.   .   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 53]
.   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -25 size: 1] [line: 53]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 53]
.   .   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 53]
.   .   .   .   .   .   .   .   Child: 1  Id: s of type int [mem: Local loc: -26 size: 1] [line: 53]
.   .   .   .   .   .   Sibling: 2  Assign: <- of type int [line: 53]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 53]
.   .   .   .   .   .   .   .   Child: 0  Id: p of array of type int [mem: Local loc: -3 size: 21] [line: 53]
.   .   .   .   .   .   .   .   Child: 1  Id: s of type int [mem: Local loc: -26 size: 1] [line: 53]
.   .   .   .   .   .   .   Child: 1  Id: tmp of type int [mem: Local loc: -27 size: 1] [line: 53]
.   .   .   .   .   .   Sibling: 3  Assign: <- of type int [line: 54]
.   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -25 size: 1] [line: 54]
.   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 54]
.   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -25 size: 1] [line: 54]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 54]
.   .   .   .   .   .   Sibling: 4  Assign: <- of type int [line: 55]
.   .   .   .   .   .   .   Child: 0  Id: s of type int [mem: Local loc: -26 size: 1] [line: 55]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 55]
.   .   .   .   .   .   .   .   Child: 0  Id: s of type int [mem: Local loc: -26 size: 1] [line: 55]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 55]
Offset for end of global space: -1
Number of warnings: 0
Number of errors: 0

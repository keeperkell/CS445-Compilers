Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: x of array of type int [mem: Global loc: -1 size: 11] [line: 3]
Sibling: 8  Func: minloc returns type int [mem: Global loc: 0 size: -5] [line: 5]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 5]
.   Sibling: 1  Parm: low of type int [mem: Parameter loc: -3 size: 1] [line: 5]
.   Sibling: 2  Parm: high of type int [mem: Parameter loc: -4 size: 1] [line: 5]
.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 6]
.   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 7]
.   .   Sibling: 1  Var: x of type int [mem: Local loc: -6 size: 1] [line: 7]
.   .   Sibling: 2  Var: k of type int [mem: Local loc: -7 size: 1] [line: 7]
.   .   Child: 1  Assign: <- of type int [line: 9]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -7 size: 1] [line: 9]
.   .   .   Child: 1  Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   .   Sibling: 1  Assign: <- of type int [line: 10]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -6 size: 1] [line: 10]
.   .   .   Child: 1  Op: [ of type int [line: 10]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 1  Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 10]
.   .   Sibling: 2  Assign: <- of type int [line: 11]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   Child: 0  Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   .   Child: 1  Const 1 of type int [line: 11]
.   .   Sibling: 3  While [line: 13]
.   .   .   Child: 0  Op: < of type bool [line: 13]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 13]
.   .   .   .   Child: 1  Id: high of type int [mem: Parameter loc: -4 size: 1] [line: 13]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 13]
.   .   .   .   Child: 1  If [line: 14]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 14]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 14]
.   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 14]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 14]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -6 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 14]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 15]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -6 size: 1] [line: 15]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 15]
.   .   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 15]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 15]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 16]
.   .   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -7 size: 1] [line: 16]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 16]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 18]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 18]
.   .   Sibling: 4  Return [line: 21]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -7 size: 1] [line: 21]
Sibling: 9  Func: sort returns type void [mem: Global loc: 0 size: -5] [line: 24]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   Sibling: 1  Parm: low of type int [mem: Parameter loc: -3 size: 1] [line: 24]
.   Sibling: 2  Parm: high of type int [mem: Parameter loc: -4 size: 1] [line: 24]
.   Child: 1  Compound [mem: None loc: 0 size: -7] [line: 25]
.   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 26]
.   .   Sibling: 1  Var: k of type int [mem: Local loc: -6 size: 1] [line: 26]
.   .   Child: 1  Assign: <- of type int [line: 28]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 28]
.   .   .   Child: 1  Id: low of type int [mem: Parameter loc: -3 size: 1] [line: 28]
.   .   Sibling: 1  While [line: 29]
.   .   .   Child: 0  Op: < of type bool [line: 29]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 29]
.   .   .   .   Child: 1  Op: - of type int [line: 29]
.   .   .   .   .   Child: 0  Id: high of type int [mem: Parameter loc: -4 size: 1] [line: 29]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 29]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 29]
.   .   .   .   Child: 0  Var: t of type int [mem: Local loc: -7 size: 1] [line: 30]
.   .   .   .   Child: 1  Assign: <- of type int [line: 32]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -6 size: 1] [line: 32]
.   .   .   .   .   Child: 1  Call: minloc of type int [line: 32]
.   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 32]
.   .   .   .   .   .   Sibling: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 32]
.   .   .   .   .   .   Sibling: 2  Id: high of type int [mem: Parameter loc: -4 size: 1] [line: 32]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 33]
.   .   .   .   .   Child: 0  Id: t of type int [mem: Local loc: -7 size: 1] [line: 33]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 33]
.   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 33]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -6 size: 1] [line: 33]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 34]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 34]
.   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 34]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -6 size: 1] [line: 34]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 34]
.   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 34]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 34]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 35]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 35]
.   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 35]
.   .   .   .   .   Child: 1  Id: t of type int [mem: Local loc: -7 size: 1] [line: 35]
.   .   .   .   Sibling: 4  Assign: ++ of type int [line: 36]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 36]
Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 40]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 41]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 42]
.   .   Child: 1  Assign: <- of type int [line: 44]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 44]
.   .   .   Child: 1  Const 0 of type int [line: 44]
.   .   Sibling: 1  While [line: 45]
.   .   .   Child: 0  Op: < of type bool [line: 45]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 45]
.   .   .   .   Child: 1  Const 10 of type int [line: 45]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 45]
.   .   .   .   Child: 1  Assign: <- of type int [line: 46]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 46]
.   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Global loc: -1 size: 11] [line: 46]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 46]
.   .   .   .   .   Child: 1  Call: input of type int [line: 46]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 47]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 47]
.   .   Sibling: 2  Call: sort of type void [line: 50]
.   .   .   Child: 0  Id: x of array of type int [mem: Global loc: -1 size: 11] [line: 50]
.   .   .   Sibling: 1  Const 0 of type int [line: 50]
.   .   .   Sibling: 2  Const 10 of type int [line: 50]
.   .   Sibling: 3  Assign: <- of type int [line: 51]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 51]
.   .   .   Child: 1  Const 0 of type int [line: 51]
.   .   Sibling: 4  While [line: 52]
.   .   .   Child: 0  Op: < of type bool [line: 52]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 52]
.   .   .   .   Child: 1  Const 10 of type int [line: 52]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 52]
.   .   .   .   Child: 1  Call: output of type void [line: 53]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 53]
.   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Global loc: -1 size: 11] [line: 53]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 53]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 54]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 54]
Offset for end of global space: -11
Number of warnings: 0
Number of errors: 0

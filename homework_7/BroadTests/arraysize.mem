WARNING(12): The variable 'i' seems not to be used.
WARNING(25): The variable 'h' seems not to be used.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: g of array of type int [mem: Global loc: -1 size: 13] [line: 1]
Sibling: 8  Func: ford returns type void [mem: Global loc: 0 size: -3] [line: 10]
.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   Child: 1  Compound [mem: None loc: 0 size: -18] [line: 11]
.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   Sibling: 1  Var: y of array of type int [mem: Local loc: -5 size: 14] [line: 12]
.   .   Child: 1  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 13]
.   .   .   .   Child: 1  Const 0 of type int [line: 13]
.   .   .   Child: 1  Const 666 of type int [line: 13]
.   .   Sibling: 1  Assign: <- of type int [line: 14]
.   .   .   Child: 0  Op: [ of type int [line: 14]
.   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 14]
.   .   .   .   Child: 1  Const 0 of type int [line: 14]
.   .   .   Child: 1  Const 888 of type int [line: 14]
.   .   Sibling: 2  Call: output of type void [line: 15]
.   .   .   Child: 0  Op: [ of type int [line: 15]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 0 of type int [line: 15]
.   .   Sibling: 3  Call: output of type void [line: 16]
.   .   .   Child: 0  Op: sizeof of type int [line: 16]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 16]
.   .   Sibling: 4  Call: output of type void [line: 17]
.   .   .   Child: 0  Op: [ of type int [line: 17]
.   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 17]
.   .   .   .   Child: 1  Const 0 of type int [line: 17]
.   .   Sibling: 5  Call: output of type void [line: 18]
.   .   .   Child: 0  Op: [ of type int [line: 18]
.   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 18]
.   .   .   .   Child: 1  Op: chsign of type int [line: 18]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 18]
.   .   Sibling: 6  Call: outnl of type void [line: 19]
.   .   Sibling: 7  Call: output of type void [line: 20]
.   .   .   Child: 0  Op: [ of type int [line: 20]
.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 20]
.   .   .   .   Child: 1  Const 0 of type int [line: 20]
.   .   Sibling: 8  Call: output of type void [line: 21]
.   .   .   Child: 0  Op: sizeof of type int [line: 21]
.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -5 size: 14] [line: 21]
.   .   Sibling: 9  Call: outnl of type void [line: 22]
Sibling: 9  Var: h of array of type bool [mem: Global loc: -14 size: 24] [line: 25]
Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 27]
.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 28]
.   .   Child: 0  Var: m of array of type int [mem: Local loc: -3 size: 12] [line: 29]
.   .   Child: 1  Assign: <- of type int [line: 31]
.   .   .   Child: 0  Op: [ of type int [line: 31]
.   .   .   .   Child: 0  Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 31]
.   .   .   .   Child: 1  Const 0 of type int [line: 31]
.   .   .   Child: 1  Const 777 of type int [line: 31]
.   .   Sibling: 1  Call: output of type void [line: 32]
.   .   .   Child: 0  Op: [ of type int [line: 32]
.   .   .   .   Child: 0  Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 32]
.   .   .   .   Child: 1  Const 0 of type int [line: 32]
.   .   Sibling: 2  Call: output of type void [line: 33]
.   .   .   Child: 0  Op: sizeof of type int [line: 33]
.   .   .   .   Child: 0  Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 33]
.   .   Sibling: 3  Call: output of type void [line: 34]
.   .   .   Child: 0  Op: [ of type int [line: 34]
.   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 34]
.   .   .   .   Child: 1  Const 0 of type int [line: 34]
.   .   Sibling: 4  Call: output of type void [line: 35]
.   .   .   Child: 0  Op: sizeof of type int [line: 35]
.   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 35]
.   .   Sibling: 5  Call: outnl of type void [line: 36]
.   .   Sibling: 6  Call: ford of type void [line: 38]
.   .   .   Child: 0  Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 38]
.   .   Sibling: 7  Call: ford of type void [line: 39]
.   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 39]
.   .   Sibling: 8  Call: output of type void [line: 41]
.   .   .   Child: 0  Op: * of type int [line: 41]
.   .   .   .   Child: 0  Op: sizeof of type int [line: 41]
.   .   .   .   .   Child: 0  Id: m of array of type int [mem: Local loc: -3 size: 12] [line: 41]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 41]
.   .   .   .   .   Child: 0  Id: g of array of type int [mem: Global loc: -1 size: 13] [line: 41]
.   .   Sibling: 9  Call: outnl of type void [line: 42]
Offset for end of global space: -37
Number of warnings: 2
Number of errors: 0

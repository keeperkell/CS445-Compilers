Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 3]
.   Child: 1  Compound [mem: None loc: 0 size: -206] [line: 4]
.   .   Child: 0  Var: max of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Sibling: 1  Var: k of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 2  Var: n of array of type bool [mem: Local loc: -5 size: 202] [line: 6]
.   .   Child: 1  Assign: <- of type int [line: 8]
.   .   .   Child: 0  Id: max of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   Child: 1  Const 200 of type int [line: 8]
.   .   Sibling: 1  Assign: <- of type int [line: 10]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 1  Const 2 of type int [line: 10]
.   .   Sibling: 2  While [line: 11]
.   .   .   Child: 0  Op: <= of type bool [line: 11]
.   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -206] [line: 11]
.   .   .   .   Child: 1  Assign: <- of type bool [line: 11]
.   .   .   .   .   Child: 0  Op: [ of type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id: n of array of type bool [mem: Local loc: -5 size: 202] [line: 11]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Const true of type bool [line: 11]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 11]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 11]
.   .   Sibling: 3  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Const 2 of type int [line: 13]
.   .   Sibling: 4  While [line: 14]
.   .   .   Child: 0  Op: <= of type bool [line: 14]
.   .   .   .   Child: 0  Op: * of type int [line: 14]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -207] [line: 14]
.   .   .   .   Child: 0  Var: j of type int [mem: Local loc: -206 size: 1] [line: 15]
.   .   .   .   Child: 1  Assign: <- of type int [line: 17]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -206 size: 1] [line: 17]
.   .   .   .   .   Child: 1  Op: * of type int [line: 17]
.   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   Sibling: 1  While [line: 18]
.   .   .   .   .   Child: 0  Op: <= of type bool [line: 18]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -206 size: 1] [line: 18]
.   .   .   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -207] [line: 18]
.   .   .   .   .   .   Child: 1  Assign: <- of type bool [line: 19]
.   .   .   .   .   .   .   Child: 0  Op: [ of type bool [line: 19]
.   .   .   .   .   .   .   .   Child: 0  Id: n of array of type bool [mem: Local loc: -5 size: 202] [line: 19]
.   .   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -206 size: 1] [line: 19]
.   .   .   .   .   .   .   Child: 1  Const false of type bool [line: 19]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 20]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -206 size: 1] [line: 20]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 20]
.   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -206 size: 1] [line: 20]
.   .   .   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 22]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 22]
.   .   .   .   .   Child: 1  Op: + of type int [line: 22]
.   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 22]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 22]
.   .   .   .   Sibling: 3  While [line: 23]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 23]
.   .   .   .   .   .   Child: 0  Op: <= of type bool [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Op: not of type bool [line: 23]
.   .   .   .   .   .   .   Child: 0  Op: [ of type bool [line: 23]
.   .   .   .   .   .   .   .   Child: 0  Id: n of array of type bool [mem: Local loc: -5 size: 202] [line: 23]
.   .   .   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 23]
.   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Op: + of type int [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 23]
.   .   Sibling: 5  Assign: <- of type int [line: 26]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   Sibling: 6  While [line: 27]
.   .   .   Child: 0  Op: <= of type bool [line: 27]
.   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -206] [line: 27]
.   .   .   .   Child: 1  If [line: 27]
.   .   .   .   .   Child: 0  Op: [ of type bool [line: 27]
.   .   .   .   .   .   Child: 0  Id: n of array of type bool [mem: Local loc: -5 size: 202] [line: 27]
.   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -206] [line: 27]
.   .   .   .   .   .   Child: 1  Call: output of type void [line: 27]
.   .   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   .   Sibling: 1  Call: outnl of type void [line: 27]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 27]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   Child: 1  Op: + of type int [line: 27]
.   .   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 27]
.   .   Sibling: 7  Return [line: 29]
.   .   .   Child: 0  Const 0 of type int [line: 29]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0

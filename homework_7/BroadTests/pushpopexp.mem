WARNING(30): The variable 'h' seems not to be used.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 8  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 3]
.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: c of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   Sibling: 3  Var: d of type int [mem: Local loc: -5 size: 1] [line: 4]
.   .   Child: 1  Assign: <- of type int [line: 6]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 6]
.   .   .   Child: 1  Const 331 of type int [line: 6]
.   .   Sibling: 1  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 1  Const 2 of type int [line: 7]
.   .   Sibling: 2  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   Child: 1  Const 3 of type int [line: 7]
.   .   Sibling: 3  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 7]
.   .   .   Child: 1  Const 5 of type int [line: 7]
.   .   Sibling: 4  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Id: d of type int [mem: Local loc: -5 size: 1] [line: 7]
.   .   .   Child: 1  Const 7 of type int [line: 7]
.   .   Sibling: 5  Call: output of type void [line: 8]
.   .   .   Child: 0  Id: d of type int [mem: Local loc: -5 size: 1] [line: 8]
.   .   Sibling: 6  Call: output of type void [line: 9]
.   .   .   Child: 0  Op: + of type int [line: 9]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   Child: 1  Op: * of type int [line: 9]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   Sibling: 7  Call: outputb of type void [line: 10]
.   .   .   Child: 0  Op: > of type bool [line: 10]
.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -5 size: 1] [line: 10]
.   .   .   .   Child: 1  Op: + of type int [line: 10]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   .   Child: 1  Op: * of type int [line: 10]
.   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   Sibling: 8  Call: outputb of type void [line: 11]
.   .   .   Child: 0  Op: or of type bool [line: 11]
.   .   .   .   Child: 0  Op: > of type bool [line: 11]
.   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Op: + of type int [line: 11]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 1  Op: < of type bool [line: 11]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   Sibling: 9  Call: outnl of type void [line: 12]
.   .   Sibling: 10  Compound [mem: None loc: 0 size: -9] [line: 13]
.   .   .   Child: 0  Var: a of type int [mem: Local loc: -6 size: 1] [line: 14]
.   .   .   Sibling: 1  Var: b of type int [mem: Local loc: -7 size: 1] [line: 14]
.   .   .   Sibling: 2  Var: c of type int [mem: Local loc: -8 size: 1] [line: 14]
.   .   .   Child: 1  Assign: <- of type int [line: 15]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -6 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 101 of type int [line: 15]
.   .   .   Sibling: 1  Assign: <- of type int [line: 15]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -7 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 103 of type int [line: 15]
.   .   .   Sibling: 2  Assign: <- of type int [line: 15]
.   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -8 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 107 of type int [line: 15]
.   .   .   Sibling: 3  Call: outputb of type void [line: 17]
.   .   .   .   Child: 0  Op: < of type bool [line: 17]
.   .   .   .   .   Child: 0  Op: * of type int [line: 17]
.   .   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -5 size: 1] [line: 17]
.   .   .   .   .   .   Child: 1  Const 20 of type int [line: 17]
.   .   .   .   .   Child: 1  Op: - of type int [line: 17]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -6 size: 1] [line: 17]
.   .   .   .   .   .   Child: 1  Op: / of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -8 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -7 size: 1] [line: 17]
.   .   Sibling: 11  Compound [mem: None loc: 0 size: -10] [line: 19]
.   .   .   Child: 0  Var: w of type int [mem: Local loc: -6 size: 1] [line: 20]
.   .   .   Sibling: 1  Var: x of type int [mem: Local loc: -7 size: 1] [line: 20]
.   .   .   Sibling: 2  Var: y of type int [mem: Local loc: -8 size: 1] [line: 20]
.   .   .   Sibling: 3  Var: z of type int [mem: Local loc: -9 size: 1] [line: 20]
.   .   .   Child: 1  Assign: <- of type int [line: 22]
.   .   .   .   Child: 0  Id: w of type int [mem: Local loc: -6 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 101 of type int [line: 22]
.   .   .   Sibling: 1  Assign: <- of type int [line: 22]
.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -7 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 103 of type int [line: 22]
.   .   .   Sibling: 2  Assign: <- of type int [line: 22]
.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -8 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 107 of type int [line: 22]
.   .   .   Sibling: 3  Assign: <- of type int [line: 22]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -9 size: 1] [line: 22]
.   .   .   .   Child: 1  Const 109 of type int [line: 22]
.   .   .   Sibling: 4  Call: output of type void [line: 23]
.   .   .   .   Child: 0  Op: + of type int [line: 23]
.   .   .   .   .   Child: 0  Op: * of type int [line: 23]
.   .   .   .   .   .   Child: 0  Id: w of type int [mem: Local loc: -6 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -7 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Op: * of type int [line: 23]
.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -8 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -9 size: 1] [line: 23]
.   .   .   Sibling: 5  Call: outnl of type void [line: 24]
.   .   Sibling: 12  Call: output of type void [line: 26]
.   .   .   Child: 0  Op: + of type int [line: 26]
.   .   .   .   Child: 0  Op: * of type int [line: 26]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 26]
.   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   Child: 1  Op: * of type int [line: 26]
.   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 26]
.   .   .   .   .   Child: 1  Id: d of type int [mem: Local loc: -5 size: 1] [line: 26]
.   .   Sibling: 13  Call: output of type void [line: 27]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 27]
.   .   Sibling: 14  Call: outnl of type void [line: 28]
Sibling: 9  Var: h of type int [mem: Global loc: -1 size: 1] [line: 30]
Offset for end of global space: -2
Number of warnings: 1
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Child: 1  While [line: 5]
.   .   .   Child: 0  Const true of type bool [line: 5]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   .   .   Child: 1  Assign: <- of type int [line: 6]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   .   Child: 1  Call: input of type int [line: 6]
.   .   .   .   Sibling: 1  If [line: 7]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 7]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 7]
.   .   .   .   .   Child: 1  Break [line: 7]
.   .   .   .   Sibling: 2  While [line: 9]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 9]
.   .   .   .   .   .   Child: 0  Op: % of type int [line: 9]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 9]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 9]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 9]
.   .   .   .   .   .   Child: 1  Call: output of type void [line: 10]
.   .   .   .   .   .   .   Child: 0  Const 2 of type int [line: 10]
.   .   .   .   .   .   Sibling: 1  Assign: /= of type int [line: 11]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 11]
.   .   .   .   Sibling: 3  For [mem: None loc: 0 size: -6] [line: 14]
.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Range [line: 14]
.   .   .   .   .   .   Child: 0  Const 3 of type int [line: 14]
.   .   .   .   .   .   Child: 1  Id: n of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   .   .   .   .   Child: 2  Const 2 of type int [line: 14]
.   .   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -6] [line: 14]
.   .   .   .   .   .   Child: 1  If [line: 15]
.   .   .   .   .   .   .   Child: 0  Op: > of type bool [line: 15]
.   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 15]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   .   .   .   .   .   .   Child: 1  Id: n of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   .   .   .   .   Child: 1  Break [line: 15]
.   .   .   .   .   .   Sibling: 1  While [line: 16]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 16]
.   .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 16]
.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 16]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 16]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 16]
.   .   .   .   .   .   .   .   Child: 1  Call: output of type void [line: 17]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: /= of type int [line: 18]
.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   Sibling: 4  If [line: 21]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 21]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 21]
.   .   .   .   .   Child: 1  Call: output of type void [line: 21]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   Sibling: 5  Call: outnl of type void [line: 22]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0

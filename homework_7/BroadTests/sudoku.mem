Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: board of array of type int [mem: Global loc: -1 size: 82] [line: 20]
Sibling: 8  Var: locked of array of type bool [mem: Global loc: -83 size: 82] [line: 21]
Sibling: 9  Func: initBoard returns type void [mem: Global loc: 0 size: -2] [line: 24]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 25]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 26]
.   .   Child: 1  Assign: <- of type int [line: 27]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   .   Child: 1  Const 0 of type int [line: 27]
.   .   Sibling: 1  While [line: 28]
.   .   .   Child: 0  Op: < of type bool [line: 28]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 28]
.   .   .   .   Child: 1  Const 81 of type int [line: 28]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 28]
.   .   .   .   Child: 1  Assign: <- of type int [line: 29]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 29]
.   .   .   .   .   .   Child: 0  Id: board of array of type int [mem: Global loc: -1 size: 82] [line: 29]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 29]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 29]
.   .   .   .   Sibling: 1  Assign: <- of type bool [line: 30]
.   .   .   .   .   Child: 0  Op: [ of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Id: locked of array of type bool [mem: Global loc: -83 size: 82] [line: 30]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 30]
.   .   .   .   .   Child: 1  Const false of type bool [line: 30]
.   .   .   .   Sibling: 2  Assign: ++ of type int [line: 31]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 31]
Sibling: 10  Func: setValue returns type void [mem: Global loc: 0 size: -5] [line: 36]
.   Child: 0  Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 36]
.   Sibling: 1  Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 36]
.   Sibling: 2  Parm: value of type int [mem: Parameter loc: -4 size: 1] [line: 36]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 37]
.   .   Child: 1  Assign: <- of type int [line: 38]
.   .   .   Child: 0  Op: [ of type int [line: 38]
.   .   .   .   Child: 0  Id: board of array of type int [mem: Global loc: -1 size: 82] [line: 38]
.   .   .   .   Child: 1  Op: + of type int [line: 38]
.   .   .   .   .   Child: 0  Op: * of type int [line: 38]
.   .   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 38]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 38]
.   .   .   .   .   Child: 1  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 38]
.   .   .   Child: 1  Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 38]
Sibling: 11  Func: getValue returns type int [mem: Global loc: 0 size: -4] [line: 42]
.   Child: 0  Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 42]
.   Sibling: 1  Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 42]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 43]
.   .   Child: 1  Return [line: 44]
.   .   .   Child: 0  Op: [ of type int [line: 44]
.   .   .   .   Child: 0  Id: board of array of type int [mem: Global loc: -1 size: 82] [line: 44]
.   .   .   .   Child: 1  Op: + of type int [line: 44]
.   .   .   .   .   Child: 0  Op: * of type int [line: 44]
.   .   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 44]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 44]
.   .   .   .   .   Child: 1  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 44]
Sibling: 12  Func: setLocked returns type void [mem: Global loc: 0 size: -5] [line: 48]
.   Child: 0  Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 48]
.   Sibling: 1  Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 48]
.   Sibling: 2  Parm: value of type bool [mem: Parameter loc: -4 size: 1] [line: 48]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 49]
.   .   Child: 1  Assign: <- of type bool [line: 50]
.   .   .   Child: 0  Op: [ of type bool [line: 50]
.   .   .   .   Child: 0  Id: locked of array of type bool [mem: Global loc: -83 size: 82] [line: 50]
.   .   .   .   Child: 1  Op: + of type int [line: 50]
.   .   .   .   .   Child: 0  Op: * of type int [line: 50]
.   .   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 50]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 50]
.   .   .   .   .   Child: 1  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 50]
.   .   .   Child: 1  Id: value of type bool [mem: Parameter loc: -4 size: 1] [line: 50]
Sibling: 13  Func: getLocked returns type bool [mem: Global loc: 0 size: -4] [line: 54]
.   Child: 0  Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 54]
.   Sibling: 1  Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 54]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 55]
.   .   Child: 1  Return [line: 56]
.   .   .   Child: 0  Op: [ of type bool [line: 56]
.   .   .   .   Child: 0  Id: locked of array of type bool [mem: Global loc: -83 size: 82] [line: 56]
.   .   .   .   Child: 1  Op: + of type int [line: 56]
.   .   .   .   .   Child: 0  Op: * of type int [line: 56]
.   .   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 56]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 56]
.   .   .   .   .   Child: 1  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 56]
Sibling: 14  Func: isOkAt returns type bool [mem: Global loc: 0 size: -5] [line: 60]
.   Child: 0  Parm: row of type int [mem: Parameter loc: -2 size: 1] [line: 60]
.   Sibling: 1  Parm: col of type int [mem: Parameter loc: -3 size: 1] [line: 60]
.   Sibling: 2  Parm: value of type int [mem: Parameter loc: -4 size: 1] [line: 60]
.   Child: 1  Compound [mem: None loc: 0 size: -9] [line: 61]
.   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 62]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -6 size: 1] [line: 62]
.   .   Sibling: 2  Var: boxRowStart of type int [mem: Local loc: -7 size: 1] [line: 62]
.   .   Sibling: 3  Var: boxColStart of type int [mem: Local loc: -8 size: 1] [line: 62]
.   .   Child: 1  Assign: <- of type int [line: 65]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 65]
.   .   .   Child: 1  Const 0 of type int [line: 65]
.   .   Sibling: 1  While [line: 66]
.   .   .   Child: 0  Op: < of type bool [line: 66]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 66]
.   .   .   .   Child: 1  Const 9 of type int [line: 66]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -9] [line: 66]
.   .   .   .   Child: 1  If [line: 67]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 67]
.   .   .   .   .   .   Child: 0  Call: getValue of type int [line: 67]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 67]
.   .   .   .   .   .   .   Sibling: 1  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 67]
.   .   .   .   .   .   Child: 1  Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 67]
.   .   .   .   .   Child: 1  Return [line: 67]
.   .   .   .   .   .   Child: 0  Const false of type bool [line: 67]
.   .   .   .   Sibling: 1  If [line: 68]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 68]
.   .   .   .   .   .   Child: 0  Call: getValue of type int [line: 68]
.   .   .   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 68]
.   .   .   .   .   .   .   Sibling: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 68]
.   .   .   .   .   .   Child: 1  Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 68]
.   .   .   .   .   Child: 1  Return [line: 68]
.   .   .   .   .   .   Child: 0  Const false of type bool [line: 68]
.   .   .   .   Sibling: 2  Assign: ++ of type int [line: 69]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 69]
.   .   Sibling: 2  Assign: <- of type int [line: 73]
.   .   .   Child: 0  Id: boxRowStart of type int [mem: Local loc: -7 size: 1] [line: 73]
.   .   .   Child: 1  Op: * of type int [line: 73]
.   .   .   .   Child: 0  Op: / of type int [line: 73]
.   .   .   .   .   Child: 0  Id: row of type int [mem: Parameter loc: -2 size: 1] [line: 73]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 73]
.   .   .   .   Child: 1  Const 3 of type int [line: 73]
.   .   Sibling: 3  Assign: <- of type int [line: 74]
.   .   .   Child: 0  Id: boxColStart of type int [mem: Local loc: -8 size: 1] [line: 74]
.   .   .   Child: 1  Op: * of type int [line: 74]
.   .   .   .   Child: 0  Op: / of type int [line: 74]
.   .   .   .   .   Child: 0  Id: col of type int [mem: Parameter loc: -3 size: 1] [line: 74]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 74]
.   .   .   .   Child: 1  Const 3 of type int [line: 74]
.   .   Sibling: 4  Assign: <- of type int [line: 75]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 75]
.   .   .   Child: 1  Const 0 of type int [line: 75]
.   .   Sibling: 5  While [line: 76]
.   .   .   Child: 0  Op: < of type bool [line: 76]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 76]
.   .   .   .   Child: 1  Const 3 of type int [line: 76]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -9] [line: 76]
.   .   .   .   Child: 1  Assign: <- of type int [line: 77]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -6 size: 1] [line: 77]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 77]
.   .   .   .   Sibling: 1  While [line: 78]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 78]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -6 size: 1] [line: 78]
.   .   .   .   .   .   Child: 1  Const 3 of type int [line: 78]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -9] [line: 78]
.   .   .   .   .   .   Child: 1  If [line: 79]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 79]
.   .   .   .   .   .   .   .   Child: 0  Call: getValue of type int [line: 79]
.   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 79]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: boxRowStart of type int [mem: Local loc: -7 size: 1] [line: 79]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -5 size: 1] [line: 79]
.   .   .   .   .   .   .   .   .   Sibling: 1  Op: + of type int [line: 79]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: boxColStart of type int [mem: Local loc: -8 size: 1] [line: 79]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -6 size: 1] [line: 79]
.   .   .   .   .   .   .   .   Child: 1  Id: value of type int [mem: Parameter loc: -4 size: 1] [line: 79]
.   .   .   .   .   .   .   Child: 1  Return [line: 79]
.   .   .   .   .   .   .   .   Child: 0  Const false of type bool [line: 79]
.   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 80]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -6 size: 1] [line: 80]
.   .   .   .   Sibling: 2  Assign: ++ of type int [line: 82]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 82]
.   .   Sibling: 6  Return [line: 85]
.   .   .   Child: 0  Const true of type bool [line: 85]
Sibling: 15  Func: search returns type bool [mem: Global loc: 0 size: -4] [line: 89]
.   Child: 0  Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 89]
.   Sibling: 1  Parm: j of type int [mem: Parameter loc: -3 size: 1] [line: 89]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 90]
.   .   Child: 1  If [line: 91]
.   .   .   Child: 0  Call: getLocked of type bool [line: 91]
.   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 91]
.   .   .   .   Sibling: 1  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 91]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 92]
.   .   .   .   Child: 1  If [line: 93]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 93]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 93]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 93]
.   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 93]
.   .   .   .   .   .   Child: 1  Op: = of type bool [line: 93]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 93]
.   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 93]
.   .   .   .   .   Child: 1  Return [line: 93]
.   .   .   .   .   .   Child: 0  Const true of type bool [line: 93]
.   .   .   .   .   Child: 2  If [line: 94]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 94]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 94]
.   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 94]
.   .   .   .   .   .   Child: 1  Return [line: 94]
.   .   .   .   .   .   .   Child: 0  Call: search of type bool [line: 94]
.   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 94]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 94]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 94]
.   .   .   .   .   .   .   .   Sibling: 1  Const 0 of type int [line: 94]
.   .   .   .   .   .   Child: 2  Return [line: 95]
.   .   .   .   .   .   .   Child: 0  Call: search of type bool [line: 95]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 95]
.   .   .   .   .   .   .   .   Sibling: 1  Op: + of type int [line: 95]
.   .   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 95]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 95]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -6] [line: 98]
.   .   .   .   Child: 0  Var: n of type int [mem: Local loc: -4 size: 1] [line: 99]
.   .   .   .   Sibling: 1  Var: foundOne of type bool [mem: Local loc: -5 size: 1] [line: 100]
.   .   .   .   Child: 1  Assign: <- of type int [line: 101]
.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -4 size: 1] [line: 101]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 101]
.   .   .   .   Sibling: 1  While [line: 102]
.   .   .   .   .   Child: 0  Op: <= of type bool [line: 102]
.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -4 size: 1] [line: 102]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 102]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 102]
.   .   .   .   .   .   Child: 1  If [line: 103]
.   .   .   .   .   .   .   Child: 0  Call: isOkAt of type bool [line: 103]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 103]
.   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 103]
.   .   .   .   .   .   .   .   Sibling: 2  Id: n of type int [mem: Local loc: -4 size: 1] [line: 103]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 103]
.   .   .   .   .   .   .   .   Child: 1  Call: setValue of type void [line: 104]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 104]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 104]
.   .   .   .   .   .   .   .   .   Sibling: 2  Id: n of type int [mem: Local loc: -4 size: 1] [line: 104]
.   .   .   .   .   .   .   .   Sibling: 1  If [line: 105]
.   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 105]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 105]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 105]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 105]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 105]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 105]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 105]
.   .   .   .   .   .   .   .   .   Child: 1  Return [line: 105]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const true of type bool [line: 105]
.   .   .   .   .   .   .   .   .   Child: 2  If [line: 106]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 106]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 106]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 8 of type int [line: 106]
.   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type bool [line: 106]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -5 size: 1] [line: 106]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: search of type bool [line: 106]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 106]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 106]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 106]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Const 0 of type int [line: 106]
.   .   .   .   .   .   .   .   .   .   Child: 2  Assign: <- of type bool [line: 107]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -5 size: 1] [line: 107]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: search of type bool [line: 107]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 107]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Op: + of type int [line: 107]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 107]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 107]
.   .   .   .   .   .   .   .   Sibling: 2  If [line: 108]
.   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -5 size: 1] [line: 108]
.   .   .   .   .   .   .   .   .   Child: 1  Return [line: 108]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const true of type bool [line: 108]
.   .   .   .   .   .   .   .   .   Child: 2  Call: setValue of type void [line: 109]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 109]
.   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Parameter loc: -3 size: 1] [line: 109]
.   .   .   .   .   .   .   .   .   .   Sibling: 2  Const 0 of type int [line: 109]
.   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 111]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -4 size: 1] [line: 111]
.   .   Sibling: 1  Return [line: 114]
.   .   .   Child: 0  Const false of type bool [line: 114]
Sibling: 16  Func: searchTrivial returns type void [mem: Global loc: 0 size: -2] [line: 118]
.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 119]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 120]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -3 size: 1] [line: 120]
.   .   Sibling: 2  Var: test of type int [mem: Local loc: -4 size: 1] [line: 120]
.   .   Sibling: 3  Var: value of type int [mem: Local loc: -5 size: 1] [line: 120]
.   .   Sibling: 4  Var: changed of type bool [mem: Local loc: -6 size: 1] [line: 121]
.   .   Sibling: 5  Var: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 121]
.   .   Child: 1  Assign: <- of type bool [line: 123]
.   .   .   Child: 0  Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 123]
.   .   .   Child: 1  Const true of type bool [line: 123]
.   .   Sibling: 1  While [line: 124]
.   .   .   Child: 0  Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 124]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 124]
.   .   .   .   Child: 1  Assign: <- of type bool [line: 125]
.   .   .   .   .   Child: 0  Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 125]
.   .   .   .   .   Child: 1  Const false of type bool [line: 125]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 126]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 126]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 126]
.   .   .   .   Sibling: 2  While [line: 127]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 127]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 127]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 127]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 127]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 128]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 128]
.   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 128]
.   .   .   .   .   .   Sibling: 1  While [line: 129]
.   .   .   .   .   .   .   Child: 0  Op: < of type bool [line: 129]
.   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 129]
.   .   .   .   .   .   .   .   Child: 1  Const 9 of type int [line: 129]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 129]
.   .   .   .   .   .   .   .   Child: 1  If [line: 130]
.   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 130]
.   .   .   .   .   .   .   .   .   .   Child: 0  Call: getLocked of type bool [line: 130]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 130]
.   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 130]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const false of type bool [line: 130]
.   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 130]
.   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 131]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: test of type int [mem: Local loc: -4 size: 1] [line: 131]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 131]
.   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: <- of type bool [line: 132]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 132]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Const false of type bool [line: 132]
.   .   .   .   .   .   .   .   .   .   Sibling: 2  While [line: 133]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: <= of type bool [line: 133]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: test of type int [mem: Local loc: -4 size: 1] [line: 133]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 9 of type int [line: 133]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 133]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  If [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: isOkAt of type bool [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: test of type int [mem: Local loc: -4 size: 1] [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 134]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  If [line: 135]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 135]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 135]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type bool [line: 136]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 136]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const false of type bool [line: 136]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Break [line: 137]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -8] [line: 139]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type bool [line: 140]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 140]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const true of type bool [line: 140]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 141]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: value of type int [mem: Local loc: -5 size: 1] [line: 141]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: test of type int [mem: Local loc: -4 size: 1] [line: 141]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 144]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: test of type int [mem: Local loc: -4 size: 1] [line: 144]
.   .   .   .   .   .   .   .   .   .   Sibling: 3  If [line: 146]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: foundOne of type bool [mem: Local loc: -7 size: 1] [line: 146]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 146]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: setValue of type void [line: 147]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 147]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 147]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: value of type int [mem: Local loc: -5 size: 1] [line: 147]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Call: setLocked of type void [line: 148]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 148]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 148]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Const true of type bool [line: 148]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Assign: <- of type bool [line: 149]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: changed of type bool [mem: Local loc: -6 size: 1] [line: 149]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const true of type bool [line: 149]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 152]
.   .   .   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 152]
.   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 154]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 154]
Sibling: 17  Func: solve returns type bool [mem: Global loc: 0 size: -2] [line: 160]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 161]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 162]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -3 size: 1] [line: 162]
.   .   Sibling: 2  Var: n of type int [mem: Local loc: -4 size: 1] [line: 162]
.   .   Child: 1  Assign: <- of type int [line: 163]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 163]
.   .   .   Child: 1  Const 0 of type int [line: 163]
.   .   Sibling: 1  While [line: 166]
.   .   .   Child: 0  Op: < of type bool [line: 166]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 166]
.   .   .   .   Child: 1  Const 9 of type int [line: 166]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 166]
.   .   .   .   Child: 1  Assign: <- of type int [line: 167]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 167]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 167]
.   .   .   .   Sibling: 1  While [line: 168]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 168]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 168]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 168]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 168]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 169]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -4 size: 1] [line: 169]
.   .   .   .   .   .   .   Child: 1  Call: getValue of type int [line: 169]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 169]
.   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 169]
.   .   .   .   .   .   Sibling: 1  Call: setValue of type void [line: 170]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 170]
.   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 170]
.   .   .   .   .   .   .   Sibling: 2  Const 0 of type int [line: 170]
.   .   .   .   .   .   Sibling: 2  If [line: 171]
.   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 171]
.   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 171]
.   .   .   .   .   .   .   .   .   Child: 0  Call: getLocked of type bool [line: 171]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 171]
.   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 171]
.   .   .   .   .   .   .   .   .   Child: 1  Const true of type bool [line: 171]
.   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 171]
.   .   .   .   .   .   .   .   .   Child: 0  Call: isOkAt of type bool [line: 171]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 171]
.   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 171]
.   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: n of type int [mem: Local loc: -4 size: 1] [line: 171]
.   .   .   .   .   .   .   .   .   Child: 1  Const false of type bool [line: 171]
.   .   .   .   .   .   .   Child: 1  Return [line: 172]
.   .   .   .   .   .   .   .   Child: 0  Const false of type bool [line: 172]
.   .   .   .   .   .   Sibling: 3  Call: setValue of type void [line: 173]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 173]
.   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 173]
.   .   .   .   .   .   .   Sibling: 2  Id: n of type int [mem: Local loc: -4 size: 1] [line: 173]
.   .   .   .   .   .   Sibling: 4  Assign: ++ of type int [line: 174]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 174]
.   .   .   .   Sibling: 2  Assign: ++ of type int [line: 176]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 176]
.   .   Sibling: 2  Call: searchTrivial of type void [line: 179]
.   .   Sibling: 3  Return [line: 180]
.   .   .   Child: 0  Call: search of type bool [line: 180]
.   .   .   .   Child: 0  Const 0 of type int [line: 180]
.   .   .   .   Sibling: 1  Const 0 of type int [line: 180]
Sibling: 18  Func: showBoard returns type void [mem: Global loc: 0 size: -2] [line: 184]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 185]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 186]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -3 size: 1] [line: 186]
.   .   Child: 1  Call: outnl of type void [line: 187]
.   .   Sibling: 1  Assign: <- of type int [line: 188]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 188]
.   .   .   Child: 1  Const 0 of type int [line: 188]
.   .   Sibling: 2  While [line: 189]
.   .   .   Child: 0  Op: < of type bool [line: 189]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 189]
.   .   .   .   Child: 1  Const 9 of type int [line: 189]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 189]
.   .   .   .   Child: 1  Assign: <- of type int [line: 190]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 190]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 190]
.   .   .   .   Sibling: 1  While [line: 191]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 191]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 191]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 191]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 191]
.   .   .   .   .   .   Child: 1  Call: output of type void [line: 192]
.   .   .   .   .   .   .   Child: 0  Call: getValue of type int [line: 192]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 192]
.   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 192]
.   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 193]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 193]
.   .   .   .   Sibling: 2  Call: outnl of type void [line: 195]
.   .   .   .   Sibling: 3  Assign: ++ of type int [line: 196]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 196]
.   .   Sibling: 3  Call: outnl of type void [line: 198]
Sibling: 19  Func: getInput returns type void [mem: Global loc: 0 size: -2] [line: 202]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 203]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 204]
.   .   Sibling: 1  Var: j of type int [mem: Local loc: -3 size: 1] [line: 204]
.   .   Sibling: 2  Var: inputVal of type int [mem: Local loc: -4 size: 1] [line: 204]
.   .   Child: 1  Assign: <- of type int [line: 205]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 205]
.   .   .   Child: 1  Const 0 of type int [line: 205]
.   .   Sibling: 1  While [line: 206]
.   .   .   Child: 0  Op: < of type bool [line: 206]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 206]
.   .   .   .   Child: 1  Const 9 of type int [line: 206]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 206]
.   .   .   .   Child: 1  Assign: <- of type int [line: 207]
.   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 207]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 207]
.   .   .   .   Sibling: 1  While [line: 208]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 208]
.   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 208]
.   .   .   .   .   .   Child: 1  Const 9 of type int [line: 208]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 208]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 209]
.   .   .   .   .   .   .   Child: 0  Id: inputVal of type int [mem: Local loc: -4 size: 1] [line: 209]
.   .   .   .   .   .   .   Child: 1  Call: input of type int [line: 209]
.   .   .   .   .   .   Sibling: 1  If [line: 210]
.   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 210]
.   .   .   .   .   .   .   .   Child: 0  Op: > of type bool [line: 210]
.   .   .   .   .   .   .   .   .   Child: 0  Id: inputVal of type int [mem: Local loc: -4 size: 1] [line: 210]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 210]
.   .   .   .   .   .   .   .   Child: 1  Op: < of type bool [line: 210]
.   .   .   .   .   .   .   .   .   Child: 0  Id: inputVal of type int [mem: Local loc: -4 size: 1] [line: 210]
.   .   .   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 210]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 211]
.   .   .   .   .   .   .   .   Child: 1  Call: setValue of type void [line: 212]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 212]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 212]
.   .   .   .   .   .   .   .   .   Sibling: 2  Id: inputVal of type int [mem: Local loc: -4 size: 1] [line: 212]
.   .   .   .   .   .   .   .   Sibling: 1  Call: setLocked of type void [line: 213]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 213]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: j of type int [mem: Local loc: -3 size: 1] [line: 213]
.   .   .   .   .   .   .   .   .   Sibling: 2  Const true of type bool [line: 213]
.   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 215]
.   .   .   .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -3 size: 1] [line: 215]
.   .   .   .   Sibling: 2  Call: outnl of type void [line: 217]
.   .   .   .   Sibling: 3  Assign: ++ of type int [line: 218]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 218]
Sibling: 20  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 222]
.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 223]
.   .   Child: 1  Call: initBoard of type void [line: 224]
.   .   Sibling: 1  Call: getInput of type void [line: 225]
.   .   Sibling: 2  If [line: 226]
.   .   .   Child: 0  Call: solve of type bool [line: 226]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 226]
.   .   .   .   Child: 1  Call: showBoard of type void [line: 227]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -2] [line: 229]
.   .   .   .   Child: 1  Call: outputb of type void [line: 230]
.   .   .   .   .   Child: 0  Const false of type bool [line: 230]
.   .   .   .   Sibling: 1  Call: outnl of type void [line: 231]
.   .   Sibling: 3  Return [line: 233]
.   .   .   Child: 0  Const 0 of type int [line: 233]
Offset for end of global space: -164
Number of warnings: 0
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: showInt returns type void [mem: Global loc: 0 size: -3] [line: 1]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   Child: 1  Call: output of type void [line: 3]
.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Call: outnl of type void [line: 4]
Sibling: 8  Func: showIntArray returns type void [mem: Global loc: 0 size: -4] [line: 7]
.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 7]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   Child: 1  Assign: <- of type int [line: 10]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 1  Const 0 of type int [line: 10]
.   .   Sibling: 1  While [line: 11]
.   .   .   Child: 0  Op: < of type bool [line: 11]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 11]
.   .   .   .   Child: 1  Call: output of type void [line: 12]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 12]
.   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 12]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 13]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   Child: 1  Op: + of type int [line: 13]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 13]
.   .   Sibling: 2  Call: outnl of type void [line: 15]
Sibling: 9  Func: showBool returns type void [mem: Global loc: 0 size: -3] [line: 18]
.   Child: 0  Parm: x of type bool [mem: Parameter loc: -2 size: 1] [line: 18]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 19]
.   .   Child: 1  Call: outputb of type void [line: 20]
.   .   .   Child: 0  Id: x of type bool [mem: Parameter loc: -2 size: 1] [line: 20]
.   .   Sibling: 1  Call: outnl of type void [line: 21]
Sibling: 10  Func: truth returns type bool [mem: Global loc: 0 size: -2] [line: 24]
.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 25]
.   .   Child: 1  Return [line: 26]
.   .   .   Child: 0  Const true of type bool [line: 26]
Sibling: 11  Func: magic returns type int [mem: Global loc: 0 size: -2] [line: 29]
.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 30]
.   .   Child: 1  Return [line: 31]
.   .   .   Child: 0  Const 666 of type int [line: 31]
Sibling: 12  Func: sqr returns type int [mem: Global loc: 0 size: -3] [line: 34]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 34]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 35]
.   .   Child: 1  Return [line: 36]
.   .   .   Child: 0  Op: * of type int [line: 36]
.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 36]
.   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 36]
Sibling: 13  Func: add returns type int [mem: Global loc: 0 size: -4] [line: 39]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 39]
.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 39]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 40]
.   .   Child: 1  Return [line: 41]
.   .   .   Child: 0  Op: + of type int [line: 41]
.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 41]
.   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 41]
Sibling: 14  Func: mul returns type int [mem: Global loc: 0 size: -4] [line: 44]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 44]
.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 44]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 45]
.   .   Child: 1  Return [line: 46]
.   .   .   Child: 0  Op: * of type int [line: 46]
.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 46]
.   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 46]
Sibling: 15  Var: g of type int [mem: Global loc: 0 size: 1] [line: 49]
Sibling: 16  Func: caller returns type void [mem: Global loc: 0 size: -4] [line: 51]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 51]
.   Sibling: 1  Parm: y of array of type int [mem: Parameter loc: -3 size: 1] [line: 51]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 52]
.   .   Child: 0  Var: z of type int [mem: Local loc: -4 size: 1] [line: 53]
.   .   Sibling: 1  Var: a of type int [mem: Local loc: -5 size: 1] [line: 54]
.   .   Child: 1  Assign: <- of type int [line: 56]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 56]
.   .   .   Child: 1  Const 666 of type int [line: 56]
.   .   Sibling: 1  Assign: <- of type int [line: 57]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 57]
.   .   .   Child: 1  Const 777 of type int [line: 57]
.   .   Sibling: 2  Assign: <- of type int [line: 59]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 59]
.   .   .   Child: 1  Call: sqr of type int [line: 59]
.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 59]
.   .   Sibling: 3  Call: output of type void [line: 60]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 60]
.   .   Sibling: 4  Call: outnl of type void [line: 61]
.   .   Sibling: 5  Assign: <- of type int [line: 63]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 63]
.   .   .   Child: 1  Call: sqr of type int [line: 63]
.   .   .   .   Child: 0  Op: [ of type int [line: 63]
.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -3 size: 1] [line: 63]
.   .   .   .   .   Child: 1  Const 7 of type int [line: 63]
.   .   Sibling: 6  Call: output of type void [line: 64]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 64]
.   .   Sibling: 7  Call: outnl of type void [line: 65]
.   .   Sibling: 8  Assign: <- of type int [line: 67]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 67]
.   .   .   Child: 1  Call: sqr of type int [line: 67]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 67]
.   .   Sibling: 9  Call: output of type void [line: 68]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 68]
.   .   Sibling: 10  Call: outnl of type void [line: 69]
.   .   Sibling: 11  Assign: <- of type int [line: 71]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 71]
.   .   .   Child: 1  Call: sqr of type int [line: 71]
.   .   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 71]
.   .   Sibling: 12  Call: output of type void [line: 72]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 72]
.   .   Sibling: 13  Call: outnl of type void [line: 73]
Sibling: 17  Func: swap returns type void [mem: Global loc: 0 size: -5] [line: 76]
.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 76]
.   Sibling: 1  Parm: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 76]
.   Sibling: 2  Parm: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 76]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 77]
.   .   Child: 0  Var: tmp of type int [mem: Local loc: -5 size: 1] [line: 78]
.   .   Child: 1  Assign: <- of type int [line: 79]
.   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 79]
.   .   .   Child: 1  Op: [ of type int [line: 79]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 79]
.   .   .   .   Child: 1  Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 79]
.   .   Sibling: 1  Assign: <- of type int [line: 80]
.   .   .   Child: 0  Op: [ of type int [line: 80]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 80]
.   .   .   .   Child: 1  Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 80]
.   .   .   Child: 1  Op: [ of type int [line: 80]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 80]
.   .   .   .   Child: 1  Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 80]
.   .   Sibling: 2  Assign: <- of type int [line: 81]
.   .   .   Child: 0  Op: [ of type int [line: 81]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 81]
.   .   .   .   Child: 1  Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 81]
.   .   .   Child: 1  Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 81]
Sibling: 18  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 84]
.   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 85]
.   .   Child: 0  Var: p of type int [mem: Local loc: -2 size: 1] [line: 86]
.   .   Sibling: 1  Var: q of type int [mem: Local loc: -3 size: 1] [line: 86]
.   .   Sibling: 2  Var: r of array of type int [mem: Local loc: -5 size: 11] [line: 86]
.   .   Sibling: 3  Var: s of array of type int [mem: Local loc: -16 size: 11] [line: 86]
.   .   Child: 1  Assign: <- of type int [line: 88]
.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 88]
.   .   .   Child: 1  Const 0 of type int [line: 88]
.   .   Sibling: 1  While [line: 89]
.   .   .   Child: 0  Op: < of type bool [line: 89]
.   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 89]
.   .   .   .   Child: 1  Const 10 of type int [line: 89]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 89]
.   .   .   .   Child: 1  Assign: <- of type int [line: 90]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 90]
.   .   .   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 90]
.   .   .   .   .   .   Child: 1  Id: p of type int [mem: Local loc: -2 size: 1] [line: 90]
.   .   .   .   .   Child: 1  Id: p of type int [mem: Local loc: -2 size: 1] [line: 90]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 91]
.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 91]
.   .   Sibling: 2  Assign: <- of type int [line: 94]
.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 94]
.   .   .   Child: 1  Const 111 of type int [line: 94]
.   .   Sibling: 3  Assign: <- of type int [line: 95]
.   .   .   Child: 0  Id: q of type int [mem: Local loc: -3 size: 1] [line: 95]
.   .   .   Child: 1  Const 222 of type int [line: 95]
.   .   Sibling: 4  Assign: <- of type int [line: 96]
.   .   .   Child: 0  Op: [ of type int [line: 96]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 96]
.   .   .   .   Child: 1  Const 7 of type int [line: 96]
.   .   .   Child: 1  Const 333 of type int [line: 96]
.   .   Sibling: 5  Assign: <- of type int [line: 97]
.   .   .   Child: 0  Op: [ of type int [line: 97]
.   .   .   .   Child: 0  Id: s of array of type int [mem: Local loc: -16 size: 11] [line: 97]
.   .   .   .   Child: 1  Const 7 of type int [line: 97]
.   .   .   Child: 1  Const 444 of type int [line: 97]
.   .   Sibling: 6  Call: showInt of type void [line: 99]
.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 99]
.   .   Sibling: 7  Call: showIntArray of type void [line: 101]
.   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 101]
.   .   .   Sibling: 1  Const 10 of type int [line: 101]
.   .   Sibling: 8  Call: showBool of type void [line: 103]
.   .   .   Child: 0  Call: truth of type bool [line: 103]
.   .   Sibling: 9  Call: caller of type void [line: 105]
.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 105]
.   .   .   Sibling: 1  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 105]
.   .   Sibling: 10  Call: output of type void [line: 107]
.   .   .   Child: 0  Call: add of type int [line: 107]
.   .   .   .   Child: 0  Call: add of type int [line: 107]
.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 107]
.   .   .   .   .   Sibling: 1  Id: q of type int [mem: Local loc: -3 size: 1] [line: 107]
.   .   .   .   Sibling: 1  Call: mul of type int [line: 107]
.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 107]
.   .   .   .   .   Sibling: 1  Id: q of type int [mem: Local loc: -3 size: 1] [line: 107]
.   .   Sibling: 11  Call: outnl of type void [line: 108]
.   .   Sibling: 12  Assign: <- of type int [line: 109]
.   .   .   Child: 0  Op: [ of type int [line: 109]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 109]
.   .   .   .   Child: 1  Const 9 of type int [line: 109]
.   .   .   Child: 1  Const 555 of type int [line: 109]
.   .   Sibling: 13  Call: swap of type void [line: 110]
.   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 110]
.   .   .   Sibling: 1  Const 7 of type int [line: 110]
.   .   .   Sibling: 2  Const 9 of type int [line: 110]
.   .   Sibling: 14  Call: output of type void [line: 111]
.   .   .   Child: 0  Op: [ of type int [line: 111]
.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 111]
.   .   .   .   Child: 1  Const 9 of type int [line: 111]
.   .   Sibling: 15  Call: outnl of type void [line: 112]
.   .   Sibling: 16  Call: output of type void [line: 113]
.   .   .   Child: 0  Op: * of type int [line: 113]
.   .   .   .   Child: 0  Const 2 of type int [line: 113]
.   .   .   .   Child: 1  Call: add of type int [line: 113]
.   .   .   .   .   Child: 0  Op: * of type int [line: 113]
.   .   .   .   .   .   Child: 0  Call: add of type int [line: 113]
.   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 113]
.   .   .   .   .   .   .   Sibling: 1  Op: * of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 0  Const 5 of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 1  Const 6 of type int [line: 113]
.   .   .   .   .   .   Child: 1  Const 7 of type int [line: 113]
.   .   .   .   .   Sibling: 1  Op: * of type int [line: 113]
.   .   .   .   .   .   Child: 0  Call: add of type int [line: 113]
.   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 0  Const 9 of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 1  Const 10 of type int [line: 113]
.   .   .   .   .   .   .   Sibling: 1  Op: * of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 0  Const 11 of type int [line: 113]
.   .   .   .   .   .   .   .   Child: 1  Const 12 of type int [line: 113]
.   .   .   .   .   .   Child: 1  Const 13 of type int [line: 113]
.   .   Sibling: 17  Call: outnl of type void [line: 114]
.   .   Sibling: 18  Call: output of type void [line: 115]
.   .   .   Child: 0  Op: * of type int [line: 115]
.   .   .   .   Child: 0  Call: magic of type int [line: 115]
.   .   .   .   Child: 1  Call: magic of type int [line: 115]
.   .   Sibling: 19  Call: outnl of type void [line: 116]
Offset for end of global space: -1
Number of warnings: 0
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: g of type bool [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 8  Var: h of array of type bool [mem: Global loc: -2 size: 11] [line: 1]
Sibling: 9  Func: dog returns type int [mem: Global loc: 0 size: -4] [line: 3]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 4]
.   .   Child: 1  Assign: <- of type int [line: 5]
.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 5]
.   .   .   Child: 1  Const 444 of type int [line: 5]
.   .   Sibling: 1  Assign: <- of type int [line: 6]
.   .   .   Child: 0  Op: [ of type int [line: 6]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 1  Const 9 of type int [line: 6]
.   .   .   Child: 1  Const 555 of type int [line: 6]
.   .   Sibling: 2  Return [line: 8]
.   .   .   Child: 0  Op: sizeof of type int [line: 8]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 8]
Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]
.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 12]
.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   Sibling: 1  Var: y of array of type int [mem: Local loc: -4 size: 11] [line: 13]
.   .   Child: 1  Assign: <- of type bool [line: 15]
.   .   .   Child: 0  Id: g of type bool [mem: Global loc: 0 size: 1] [line: 15]
.   .   .   Child: 1  Const true of type bool [line: 15]
.   .   Sibling: 1  Assign: <- of type bool [line: 16]
.   .   .   Child: 0  Op: [ of type bool [line: 16]
.   .   .   .   Child: 0  Id: h of array of type bool [mem: Global loc: -2 size: 11] [line: 16]
.   .   .   .   Child: 1  Const 9 of type int [line: 16]
.   .   .   Child: 1  Const false of type bool [line: 16]
.   .   Sibling: 2  Assign: <- of type int [line: 18]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 1  Const 111 of type int [line: 18]
.   .   Sibling: 3  Assign: <- of type int [line: 19]
.   .   .   Child: 0  Op: [ of type int [line: 19]
.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 11] [line: 19]
.   .   .   .   Child: 1  Const 9 of type int [line: 19]
.   .   .   Child: 1  Const 222 of type int [line: 19]
.   .   Sibling: 4  Call: output of type void [line: 21]
.   .   .   Child: 0  Op: + of type int [line: 21]
.   .   .   .   Child: 0  Const 333 of type int [line: 21]
.   .   .   .   Child: 1  Call: dog of type int [line: 21]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   .   Sibling: 1  Id: y of array of type int [mem: Local loc: -4 size: 11] [line: 21]
Offset for end of global space: -12
Number of warnings: 0
Number of errors: 0

WARNING(33): Variable 'x' may be uninitialized when used here.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: swap returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: i of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: j of type int [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 3]
.   .   Child: 0  Var: t of type int [mem: Local loc: -5 size: 1] [line: 4]
.   .   Child: 1  Assign: <- of type int [line: 6]
.   .   .   Child: 0  Id: t of type int [mem: Local loc: -5 size: 1] [line: 6]
.   .   .   Child: 1  Op: [ of type int [line: 6]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: i of type int [mem: Parameter loc: -3 size: 1] [line: 6]
.   .   Sibling: 1  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Op: [ of type int [line: 7]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: i of type int [mem: Parameter loc: -3 size: 1] [line: 7]
.   .   .   Child: 1  Op: [ of type int [line: 7]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: j of type int [mem: Parameter loc: -4 size: 1] [line: 7]
.   .   Sibling: 2  Assign: <- of type int [line: 8]
.   .   .   Child: 0  Op: [ of type int [line: 8]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   .   .   Child: 1  Id: j of type int [mem: Parameter loc: -4 size: 1] [line: 8]
.   .   .   Child: 1  Id: t of type int [mem: Local loc: -5 size: 1] [line: 8]
Sibling: 8  Func: sort returns type void [mem: Global loc: 0 size: -3] [line: 11]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 12]
.   .   Child: 1  For [mem: None loc: 0 size: -6] [line: 13]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Range [line: 13]
.   .   .   .   Child: 0  Const 0 of type int [line: 13]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 13]
.   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -7] [line: 13]
.   .   .   .   Child: 0  Var: minloc of type int [mem: Local loc: -6 size: 1] [line: 14]
.   .   .   .   Child: 1  Assign: <- of type int [line: 16]
.   .   .   .   .   Child: 0  Id: minloc of type int [mem: Local loc: -6 size: 1] [line: 16]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   Sibling: 1  For [mem: None loc: 0 size: -10] [line: 17]
.   .   .   .   .   Child: 0  Var: j of type int [mem: Local loc: -7 size: 1] [line: 17]
.   .   .   .   .   Child: 1  Range [line: 17]
.   .   .   .   .   .   Child: 0  Op: + of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 17]
.   .   .   .   .   .   Child: 1  Op: sizeof of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   .   .   .   .   Child: 2  If [line: 17]
.   .   .   .   .   .   Child: 0  Op: < of type bool [line: 17]
.   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   .   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -7 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Op: [ of type int [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   .   .   .   .   .   .   .   Child: 1  Id: minloc of type int [mem: Local loc: -6 size: 1] [line: 17]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: minloc of type int [mem: Local loc: -6 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Id: j of type int [mem: Local loc: -7 size: 1] [line: 17]
.   .   .   .   Sibling: 2  Call: swap of type void [line: 18]
.   .   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   .   .   Sibling: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   .   Sibling: 2  Id: minloc of type int [mem: Local loc: -6 size: 1] [line: 18]
Sibling: 9  Func: print returns type void [mem: Global loc: 0 size: -3] [line: 22]
.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 22]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 23]
.   .   Child: 1  For [mem: None loc: 0 size: -6] [line: 24]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   Child: 1  Range [line: 24]
.   .   .   .   Child: 0  Const 0 of type int [line: 24]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 24]
.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   .   .   Child: 2  Call: output of type void [line: 24]
.   .   .   .   Child: 0  Op: [ of type int [line: 24]
.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   Sibling: 1  Call: outnl of type void [line: 25]
Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 29]
.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 30]
.   .   Child: 0  Var: x of array of type int [mem: Local loc: -3 size: 21] [line: 30]
.   .   Child: 1  For [mem: None loc: 0 size: -26] [line: 33]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -23 size: 1] [line: 33]
.   .   .   Child: 1  Range [line: 33]
.   .   .   .   Child: 0  Const 0 of type int [line: 33]
.   .   .   .   Child: 1  Op: sizeof of type int [line: 33]
.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 33]
.   .   .   Child: 2  Assign: <- of type int [line: 33]
.   .   .   .   Child: 0  Op: [ of type int [line: 33]
.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 33]
.   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -23 size: 1] [line: 33]
.   .   .   .   Child: 1  Call: input of type int [line: 33]
.   .   Sibling: 1  Call: print of type void [line: 34]
.   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 34]
.   .   Sibling: 2  Call: sort of type void [line: 35]
.   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 35]
.   .   Sibling: 3  Call: print of type void [line: 36]
.   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -3 size: 21] [line: 36]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 0

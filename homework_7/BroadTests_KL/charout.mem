WARNING(2): The variable 'c' seems not to be used.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 1]
.   .   Child: 0  Var: c of type char [mem: Local loc: -2 size: 1] [line: 2]
.   .   Sibling: 1  Var: i of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Sibling: 2  Var: k of type int [mem: Local loc: -4 size: 1] [line: 3]
.   .   Sibling: 3  Var: max of type int [mem: Local loc: -5 size: 1] [line: 4]
.   .   .   Child: 0  Const 30 of type int [line: 4]
.   .   Child: 1  Assign: <- of type int [line: 6]
.   .   .   Child: 0  Id: k of type int [mem: Local loc: -4 size: 1] [line: 6]
.   .   .   Child: 1  Const 1 of type int [line: 6]
.   .   Sibling: 1  While [line: 7]
.   .   .   Child: 0  Op: < of type bool [line: 7]
.   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -4 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -5 size: 1] [line: 7]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 7]
.   .   .   .   Child: 1  Assign: <- of type int [line: 8]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 8]
.   .   .   .   Sibling: 1  While [line: 9]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 9]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   .   Child: 1  Id: max of type int [mem: Local loc: -5 size: 1] [line: 9]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 9]
.   .   .   .   .   .   Child: 1  If [line: 10]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 10]
.   .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 10]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   .   .   .   .   Child: 1  Id: k of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 10]
.   .   .   .   .   .   .   Child: 1  Call: outputc of type void [line: 10]
.   .   .   .   .   .   .   .   Child: 0  Const 'X' of type char [line: 10]
.   .   .   .   .   .   .   Child: 2  Call: outputc of type void [line: 11]
.   .   .   .   .   .   .   .   Child: 0  Const ' ' of type char [line: 11]
.   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 12]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   Sibling: 2  Call: outputc of type void [line: 14]
.   .   .   .   .   Child: 0  Const '
' of type char [line: 14]
.   .   .   .   Sibling: 3  Assign: ++ of type int [line: 15]
.   .   .   .   .   Child: 0  Id: k of type int [mem: Local loc: -4 size: 1] [line: 15]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 8  Var: h of array of type int [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 9  Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 3]
.   Child: 0  Parm: p of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Child: 1  Compound [mem: None loc: 0 size: -17] [line: 4]
.   .   Child: 0  Var: a of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   Sibling: 1  Var: b of array of type int [mem: Local loc: -6 size: 11] [line: 5]
.   .   Sibling: 2  Var: x of type int [mem: Local loc: -16 size: 1] [line: 6]
.   .   Child: 1  Assign: <- of type int [line: 8]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 8]
.   .   .   Child: 1  Const 777 of type int [line: 8]
.   .   Sibling: 1  Call: output of type void [line: 9]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   Sibling: 2  Assign: += of type int [line: 10]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 1  Const 666 of type int [line: 10]
.   .   Sibling: 3  Call: output of type void [line: 11]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   Sibling: 4  Assign: -= of type int [line: 12]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   Child: 1  Const 666 of type int [line: 12]
.   .   Sibling: 5  Call: output of type void [line: 13]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   Sibling: 6  Call: outnl of type void [line: 14]
.   .   Sibling: 7  Assign: <- of type int [line: 16]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 16]
.   .   .   Child: 1  Const 777 of type int [line: 16]
.   .   Sibling: 8  Call: output of type void [line: 17]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 17]
.   .   Sibling: 9  Assign: += of type int [line: 18]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 18]
.   .   .   Child: 1  Const 666 of type int [line: 18]
.   .   Sibling: 10  Call: output of type void [line: 19]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 19]
.   .   Sibling: 11  Assign: -= of type int [line: 20]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 20]
.   .   .   Child: 1  Const 666 of type int [line: 20]
.   .   Sibling: 12  Call: output of type void [line: 21]
.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 21]
.   .   Sibling: 13  Call: outnl of type void [line: 22]
.   .   Sibling: 14  Assign: <- of type int [line: 24]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   .   .   Child: 1  Const 777 of type int [line: 24]
.   .   Sibling: 15  Call: output of type void [line: 25]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 25]
.   .   Sibling: 16  Assign: += of type int [line: 26]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 26]
.   .   .   Child: 1  Const 666 of type int [line: 26]
.   .   Sibling: 17  Call: output of type void [line: 27]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   Sibling: 18  Assign: -= of type int [line: 28]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 28]
.   .   .   Child: 1  Const 666 of type int [line: 28]
.   .   Sibling: 19  Call: output of type void [line: 29]
.   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -2 size: 1] [line: 29]
.   .   Sibling: 20  Call: outnl of type void [line: 30]
.   .   Sibling: 21  Assign: <- of type int [line: 32]
.   .   .   Child: 0  Op: [ of type int [line: 32]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 32]
.   .   .   .   Child: 1  Const 1 of type int [line: 32]
.   .   .   Child: 1  Const 777 of type int [line: 32]
.   .   Sibling: 22  Call: output of type void [line: 33]
.   .   .   Child: 0  Op: [ of type int [line: 33]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 33]
.   .   .   .   Child: 1  Const 1 of type int [line: 33]
.   .   Sibling: 23  Assign: += of type int [line: 34]
.   .   .   Child: 0  Op: [ of type int [line: 34]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 34]
.   .   .   .   Child: 1  Const 1 of type int [line: 34]
.   .   .   Child: 1  Const 666 of type int [line: 34]
.   .   Sibling: 24  Call: output of type void [line: 35]
.   .   .   Child: 0  Op: [ of type int [line: 35]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 35]
.   .   .   .   Child: 1  Const 1 of type int [line: 35]
.   .   Sibling: 25  Assign: -= of type int [line: 36]
.   .   .   Child: 0  Op: [ of type int [line: 36]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 36]
.   .   .   .   Child: 1  Const 1 of type int [line: 36]
.   .   .   Child: 1  Const 666 of type int [line: 36]
.   .   Sibling: 26  Call: output of type void [line: 37]
.   .   .   Child: 0  Op: [ of type int [line: 37]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 37]
.   .   .   .   Child: 1  Const 1 of type int [line: 37]
.   .   Sibling: 27  Call: outnl of type void [line: 38]
.   .   Sibling: 28  Assign: <- of type int [line: 40]
.   .   .   Child: 0  Op: [ of type int [line: 40]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 40]
.   .   .   .   Child: 1  Const 1 of type int [line: 40]
.   .   .   Child: 1  Const 777 of type int [line: 40]
.   .   Sibling: 29  Call: output of type void [line: 41]
.   .   .   Child: 0  Op: [ of type int [line: 41]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 41]
.   .   .   .   Child: 1  Const 1 of type int [line: 41]
.   .   Sibling: 30  Assign: += of type int [line: 42]
.   .   .   Child: 0  Op: [ of type int [line: 42]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 42]
.   .   .   .   Child: 1  Const 1 of type int [line: 42]
.   .   .   Child: 1  Const 666 of type int [line: 42]
.   .   Sibling: 31  Call: output of type void [line: 43]
.   .   .   Child: 0  Op: [ of type int [line: 43]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 43]
.   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   Sibling: 32  Assign: -= of type int [line: 44]
.   .   .   Child: 0  Op: [ of type int [line: 44]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 44]
.   .   .   .   Child: 1  Const 1 of type int [line: 44]
.   .   .   Child: 1  Const 666 of type int [line: 44]
.   .   Sibling: 33  Call: output of type void [line: 45]
.   .   .   Child: 0  Op: [ of type int [line: 45]
.   .   .   .   Child: 0  Id: h of array of type int [mem: Global loc: -2 size: 11] [line: 45]
.   .   .   .   Child: 1  Const 1 of type int [line: 45]
.   .   Sibling: 34  Call: outnl of type void [line: 46]
.   .   Sibling: 35  Assign: <- of type int [line: 48]
.   .   .   Child: 0  Op: [ of type int [line: 48]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 48]
.   .   .   .   Child: 1  Const 1 of type int [line: 48]
.   .   .   Child: 1  Const 777 of type int [line: 48]
.   .   Sibling: 36  Call: output of type void [line: 49]
.   .   .   Child: 0  Op: [ of type int [line: 49]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 49]
.   .   .   .   Child: 1  Const 1 of type int [line: 49]
.   .   Sibling: 37  Assign: += of type int [line: 50]
.   .   .   Child: 0  Op: [ of type int [line: 50]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 50]
.   .   .   .   Child: 1  Const 1 of type int [line: 50]
.   .   .   Child: 1  Const 666 of type int [line: 50]
.   .   Sibling: 38  Call: output of type void [line: 51]
.   .   .   Child: 0  Op: [ of type int [line: 51]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 51]
.   .   .   .   Child: 1  Const 1 of type int [line: 51]
.   .   Sibling: 39  Assign: -= of type int [line: 52]
.   .   .   Child: 0  Op: [ of type int [line: 52]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 52]
.   .   .   .   Child: 1  Const 1 of type int [line: 52]
.   .   .   Child: 1  Const 666 of type int [line: 52]
.   .   Sibling: 40  Call: output of type void [line: 53]
.   .   .   Child: 0  Op: [ of type int [line: 53]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 53]
.   .   .   .   Child: 1  Const 1 of type int [line: 53]
.   .   Sibling: 41  Call: outnl of type void [line: 54]
.   .   Sibling: 42  Assign: <- of type int [line: 56]
.   .   .   Child: 0  Op: [ of type int [line: 56]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 56]
.   .   .   .   Child: 1  Const 1 of type int [line: 56]
.   .   .   Child: 1  Const 3 of type int [line: 56]
.   .   Sibling: 43  Assign: <- of type int [line: 57]
.   .   .   Child: 0  Op: [ of type int [line: 57]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 57]
.   .   .   .   Child: 1  Op: + of type int [line: 57]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 57]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 57]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 57]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 57]
.   .   .   Child: 1  Const 777 of type int [line: 57]
.   .   Sibling: 44  Call: output of type void [line: 58]
.   .   .   Child: 0  Op: [ of type int [line: 58]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 58]
.   .   .   .   Child: 1  Op: + of type int [line: 58]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 58]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 58]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 58]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 58]
.   .   Sibling: 45  Assign: += of type int [line: 59]
.   .   .   Child: 0  Op: [ of type int [line: 59]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 59]
.   .   .   .   Child: 1  Op: + of type int [line: 59]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 59]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 59]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 59]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 59]
.   .   .   Child: 1  Const 666 of type int [line: 59]
.   .   Sibling: 46  Call: output of type void [line: 60]
.   .   .   Child: 0  Op: [ of type int [line: 60]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 60]
.   .   .   .   Child: 1  Op: + of type int [line: 60]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 60]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 60]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 60]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 60]
.   .   Sibling: 47  Assign: -= of type int [line: 61]
.   .   .   Child: 0  Op: [ of type int [line: 61]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 61]
.   .   .   .   Child: 1  Op: + of type int [line: 61]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 61]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 61]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 61]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 61]
.   .   .   Child: 1  Const 666 of type int [line: 61]
.   .   Sibling: 48  Call: output of type void [line: 62]
.   .   .   Child: 0  Op: [ of type int [line: 62]
.   .   .   .   Child: 0  Id: q of array of type int [mem: Parameter loc: -3 size: 1] [line: 62]
.   .   .   .   Child: 1  Op: + of type int [line: 62]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 62]
.   .   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 62]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 62]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 62]
.   .   Sibling: 49  Call: outnl of type void [line: 63]
.   .   Sibling: 50  Assign: <- of type int [line: 65]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 65]
.   .   .   Child: 1  Assign: <- of type int [line: 65]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 65]
.   .   .   .   Child: 1  Const 777 of type int [line: 65]
.   .   Sibling: 51  Call: output of type void [line: 66]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 66]
.   .   Sibling: 52  Assign: <- of type int [line: 67]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 67]
.   .   .   Child: 1  Assign: += of type int [line: 67]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 67]
.   .   .   .   Child: 1  Const 666 of type int [line: 67]
.   .   Sibling: 53  Call: output of type void [line: 68]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 68]
.   .   Sibling: 54  Assign: <- of type int [line: 69]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 69]
.   .   .   Child: 1  Assign: -= of type int [line: 69]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 69]
.   .   .   .   Child: 1  Const 666 of type int [line: 69]
.   .   Sibling: 55  Call: output of type void [line: 70]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -16 size: 1] [line: 70]
.   .   Sibling: 56  Call: outnl of type void [line: 71]
.   .   Sibling: 57  Assign: <- of type int [line: 73]
.   .   .   Child: 0  Op: [ of type int [line: 73]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 73]
.   .   .   .   Child: 1  Const 1 of type int [line: 73]
.   .   .   Child: 1  Assign: <- of type int [line: 73]
.   .   .   .   Child: 0  Op: [ of type int [line: 73]
.   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 73]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 73]
.   .   .   .   Child: 1  Const 777 of type int [line: 73]
.   .   Sibling: 58  Call: output of type void [line: 74]
.   .   .   Child: 0  Op: [ of type int [line: 74]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 74]
.   .   .   .   Child: 1  Const 1 of type int [line: 74]
.   .   Sibling: 59  Assign: <- of type int [line: 75]
.   .   .   Child: 0  Op: [ of type int [line: 75]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 75]
.   .   .   .   Child: 1  Const 1 of type int [line: 75]
.   .   .   Child: 1  Assign: += of type int [line: 75]
.   .   .   .   Child: 0  Op: [ of type int [line: 75]
.   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 75]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 75]
.   .   .   .   Child: 1  Const 666 of type int [line: 75]
.   .   Sibling: 60  Call: output of type void [line: 76]
.   .   .   Child: 0  Op: [ of type int [line: 76]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 76]
.   .   .   .   Child: 1  Const 1 of type int [line: 76]
.   .   Sibling: 61  Assign: <- of type int [line: 77]
.   .   .   Child: 0  Op: [ of type int [line: 77]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 77]
.   .   .   .   Child: 1  Const 1 of type int [line: 77]
.   .   .   Child: 1  Assign: -= of type int [line: 77]
.   .   .   .   Child: 0  Op: [ of type int [line: 77]
.   .   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 77]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 77]
.   .   .   .   Child: 1  Const 666 of type int [line: 77]
.   .   Sibling: 62  Call: output of type void [line: 78]
.   .   .   Child: 0  Op: [ of type int [line: 78]
.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -6 size: 11] [line: 78]
.   .   .   .   Child: 1  Const 1 of type int [line: 78]
.   .   Sibling: 63  Call: outnl of type void [line: 79]
.   .   Sibling: 64  Assign: += of type int [line: 81]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 81]
.   .   .   Child: 1  Op: * of type int [line: 81]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 81]
.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -16 size: 1] [line: 81]
.   .   Sibling: 65  Call: output of type void [line: 82]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -4 size: 1] [line: 82]
.   .   Sibling: 66  Call: outnl of type void [line: 83]
Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 86]
.   Child: 1  Compound [mem: None loc: 0 size: -24] [line: 87]
.   .   Child: 0  Var: pp of type int [mem: Local loc: -2 size: 1] [line: 88]
.   .   Sibling: 1  Var: qq of array of type int [mem: Local loc: -4 size: 21] [line: 88]
.   .   Child: 1  Assign: <- of type int [line: 89]
.   .   .   Child: 0  Id: pp of type int [mem: Local loc: -2 size: 1] [line: 89]
.   .   .   Child: 1  Const 888 of type int [line: 89]
.   .   Sibling: 1  Assign: <- of type int [line: 90]
.   .   .   Child: 0  Op: [ of type int [line: 90]
.   .   .   .   Child: 0  Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 90]
.   .   .   .   Child: 1  Const 1 of type int [line: 90]
.   .   .   Child: 1  Const 999 of type int [line: 90]
.   .   Sibling: 2  Call: dog of type void [line: 91]
.   .   .   Child: 0  Id: pp of type int [mem: Local loc: -2 size: 1] [line: 91]
.   .   .   Sibling: 1  Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 91]
.   .   Sibling: 3  Call: output of type void [line: 92]
.   .   .   Child: 0  Id: pp of type int [mem: Local loc: -2 size: 1] [line: 92]
.   .   Sibling: 4  Call: output of type void [line: 93]
.   .   .   Child: 0  Op: [ of type int [line: 93]
.   .   .   .   Child: 0  Id: qq of array of type int [mem: Local loc: -4 size: 21] [line: 93]
.   .   .   .   Child: 1  Const 1 of type int [line: 93]
.   .   Sibling: 5  Call: outnl of type void [line: 94]
Offset for end of global space: -12
Number of warnings: 0
Number of errors: 0

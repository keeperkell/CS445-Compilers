Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [mem: None loc: 0 size: -11] [line: 2]
.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: m of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: t of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   Sibling: 3  Var: x of type int [mem: Local loc: -5 size: 1] [line: 6]
.   .   Sibling: 4  Var: tm of type int [mem: Local loc: -6 size: 1] [line: 7]
.   .   Sibling: 5  Var: num of type int [mem: Local loc: -7 size: 1] [line: 8]
.   .   Sibling: 6  Var: min of type int [mem: Local loc: -8 size: 1] [line: 9]
.   .   Sibling: 7  Var: a of type int [mem: Local loc: -9 size: 1] [line: 10]
.   .   Sibling: 8  Var: b of type int [mem: Local loc: -10 size: 1] [line: 11]
.   .   Child: 1  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 1  Const 1 of type int [line: 13]
.   .   Sibling: 1  Assign: <- of type int [line: 14]
.   .   .   Child: 0  Id: min of type int [mem: Local loc: -8 size: 1] [line: 14]
.   .   .   Child: 1  Const 1 of type int [line: 14]
.   .   Sibling: 2  While [line: 15]
.   .   .   Child: 0  Op: < of type bool [line: 15]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 2000 of type int [line: 15]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -11] [line: 15]
.   .   .   .   Child: 1  Assign: <- of type int [line: 16]
.   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 16]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 17]
.   .   .   .   .   Child: 0  Id: tm of type int [mem: Local loc: -6 size: 1] [line: 17]
.   .   .   .   .   Child: 1  Op: / of type int [line: 17]
.   .   .   .   .   .   Child: 0  Op: * of type int [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 17]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 17]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 18]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -5 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Op: - of type int [line: 18]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   .   .   Child: 1  Op: + of type int [line: 18]
.   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 18]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 19]
.   .   .   .   .   Child: 0  Id: t of type int [mem: Local loc: -4 size: 1] [line: 19]
.   .   .   .   .   Child: 1  Op: / of type int [line: 19]
.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -5 size: 1] [line: 19]
.   .   .   .   .   .   Child: 1  Id: tm of type int [mem: Local loc: -6 size: 1] [line: 19]
.   .   .   .   Sibling: 4  Assign: <- of type int [line: 20]
.   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 20]
.   .   .   .   Sibling: 5  While [line: 21]
.   .   .   .   .   Child: 0  Op: > of type bool [line: 21]
.   .   .   .   .   .   Child: 0  Id: t of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 21]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -11] [line: 21]
.   .   .   .   .   .   Child: 1  If [line: 22]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 22]
.   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 22]
.   .   .   .   .   .   .   .   .   Child: 0  Id: t of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   .   .   .   .   .   Child: 1  Id: tm of type int [mem: Local loc: -6 size: 1] [line: 22]
.   .   .   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -5 size: 1] [line: 22]
.   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 22]
.   .   .   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 22]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 22]
.   .   .   .   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 22]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 22]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 23]
.   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 23]
.   .   .   .   .   .   Sibling: 2  Assign: <- of type int [line: 24]
.   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -9 size: 1] [line: 24]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 24]
.   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 24]
.   .   .   .   .   .   Sibling: 3  Assign: <- of type int [line: 25]
.   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -10 size: 1] [line: 25]
.   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 25]
.   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 25]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 25]
.   .   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 25]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 25]
.   .   .   .   .   .   Sibling: 4  Assign: <- of type int [line: 26]
.   .   .   .   .   .   .   Child: 0  Id: tm of type int [mem: Local loc: -6 size: 1] [line: 26]
.   .   .   .   .   .   .   Child: 1  Op: / of type int [line: 26]
.   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 26]
.   .   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 26]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 26]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 26]
.   .   .   .   .   .   .   .   .   Child: 0  Const 1 of type int [line: 26]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 26]
.   .   .   .   .   .   Sibling: 5  Assign: <- of type int [line: 27]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -5 size: 1] [line: 27]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 27]
.   .   .   .   .   .   .   .   Child: 0  Op: - of type int [line: 27]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 27]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: m of type int [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 27]
.   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 27]
.   .   .   .   .   .   Sibling: 6  Assign: <- of type int [line: 28]
.   .   .   .   .   .   .   Child: 0  Id: t of type int [mem: Local loc: -4 size: 1] [line: 28]
.   .   .   .   .   .   .   Child: 1  Op: * of type int [line: 28]
.   .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 28]
.   .   .   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -5 size: 1] [line: 28]
.   .   .   .   .   .   .   .   .   Child: 1  Id: tm of type int [mem: Local loc: -6 size: 1] [line: 28]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 28]
.   .   .   .   Sibling: 6  If [line: 30]
.   .   .   .   .   Child: 0  Op: >= of type bool [line: 30]
.   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 30]
.   .   .   .   .   .   Child: 1  Id: min of type int [mem: Local loc: -8 size: 1] [line: 30]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -11] [line: 30]
.   .   .   .   .   .   Child: 1  Call: output of type void [line: 31]
.   .   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 31]
.   .   .   .   .   .   Sibling: 1  Call: output of type void [line: 32]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   .   .   .   .   Sibling: 2  Call: output of type void [line: 33]
.   .   .   .   .   .   .   Child: 0  Const 11111111 of type int [line: 33]
.   .   .   .   .   .   Sibling: 3  Assign: <- of type int [line: 34]
.   .   .   .   .   .   .   Child: 0  Id: min of type int [mem: Local loc: -8 size: 1] [line: 34]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 34]
.   .   .   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -7 size: 1] [line: 34]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 34]
.   .   .   .   Sibling: 7  Assign: <- of type int [line: 36]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 36]
.   .   .   .   .   Child: 1  Op: + of type int [line: 36]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 36]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 36]
.   .   Sibling: 3  Return [line: 38]
.   .   .   Child: 0  Const 0 of type int [line: 38]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0

Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: row of array of type int [mem: Global loc: -1 size: 13] [line: 6]
Sibling: 8  Var: col of array of type int [mem: Global loc: -14 size: 13] [line: 7]
Sibling: 9  Var: diagone of array of type int [mem: Global loc: -27 size: 26] [line: 8]
Sibling: 10  Var: diagtwo of array of type int [mem: Global loc: -53 size: 26] [line: 9]
Sibling: 11  Var: n of type int [mem: Global loc: -78 size: 1] [line: 10]
Sibling: 12  Var: count of type int [mem: Global loc: -79 size: 1] [line: 11]
Sibling: 13  Func: printboard returns type void [mem: Global loc: 0 size: -3] [line: 13]
.   Child: 0  Parm: col of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 14]
.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   Child: 1  Assign: <- of type int [line: 17]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   Child: 1  Const 0 of type int [line: 17]
.   .   Sibling: 1  While [line: 18]
.   .   .   Child: 0  Op: < of type bool [line: 18]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: -78 size: 1] [line: 18]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 18]
.   .   .   .   Child: 1  Call: output of type void [line: 19]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 19]
.   .   .   .   .   .   Child: 0  Id: col of array of type int [mem: Parameter loc: -2 size: 1] [line: 19]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 20]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   Sibling: 2  Call: outnl of type void [line: 22]
.   .   Sibling: 3  Assign: ++ of type int [line: 23]
.   .   .   Child: 0  Id: count of type int [mem: Global loc: -79 size: 1] [line: 23]
Sibling: 14  Func: try returns type void [mem: Global loc: 0 size: -3] [line: 26]
.   Child: 0  Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 26]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 27]
.   .   Child: 0  Var: r of type int [mem: Local loc: -3 size: 1] [line: 28]
.   .   Child: 1  If [line: 30]
.   .   .   Child: 0  Op: = of type bool [line: 30]
.   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 30]
.   .   .   .   Child: 1  Id: n of type int [mem: Global loc: -78 size: 1] [line: 30]
.   .   .   Child: 1  Call: printboard of type void [line: 31]
.   .   .   .   Child: 0  Id: col of array of type int [mem: Global loc: -14 size: 13] [line: 31]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -4] [line: 32]
.   .   .   .   Child: 1  Assign: <- of type int [line: 33]
.   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 33]
.   .   .   .   Sibling: 1  While [line: 34]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 34]
.   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 34]
.   .   .   .   .   .   Child: 1  Id: n of type int [mem: Global loc: -78 size: 1] [line: 34]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 34]
.   .   .   .   .   .   Child: 1  If [line: 35]
.   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 35]
.   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: row of array of type int [mem: Global loc: -1 size: 13] [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -3 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 35]
.   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagone of array of type int [mem: Global loc: -27 size: 26] [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 35]
.   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagtwo of array of type int [mem: Global loc: -53 size: 26] [line: 35]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -78 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 35]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 35]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 35]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 36]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 36]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: row of array of type int [mem: Global loc: -1 size: 13] [line: 36]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -3 size: 1] [line: 36]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 36]
.   .   .   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 37]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 37]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: col of array of type int [mem: Global loc: -14 size: 13] [line: 37]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 37]
.   .   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -3 size: 1] [line: 37]
.   .   .   .   .   .   .   .   Sibling: 2  Assign: <- of type int [line: 38]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 38]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagone of array of type int [mem: Global loc: -27 size: 26] [line: 38]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 38]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 38]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 38]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 38]
.   .   .   .   .   .   .   .   Sibling: 3  Assign: <- of type int [line: 39]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 39]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagtwo of array of type int [mem: Global loc: -53 size: 26] [line: 39]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 39]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 39]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 39]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 39]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -78 size: 1] [line: 39]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 39]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 39]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 39]
.   .   .   .   .   .   .   .   Sibling: 4  Call: try of type void [line: 40]
.   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 40]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 40]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 40]
.   .   .   .   .   .   .   .   Sibling: 5  Assign: <- of type int [line: 41]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 41]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: row of array of type int [mem: Global loc: -1 size: 13] [line: 41]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: r of type int [mem: Local loc: -3 size: 1] [line: 41]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 41]
.   .   .   .   .   .   .   .   Sibling: 6  Assign: <- of type int [line: 42]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 42]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagone of array of type int [mem: Global loc: -27 size: 26] [line: 42]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 42]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 42]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 42]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 42]
.   .   .   .   .   .   .   .   Sibling: 7  Assign: <- of type int [line: 43]
.   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: diagtwo of array of type int [mem: Global loc: -53 size: 26] [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Global loc: -78 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 43]
.   .   .   .   .   .   Sibling: 1  Assign: ++ of type int [line: 45]
.   .   .   .   .   .   .   Child: 0  Id: r of type int [mem: Local loc: -3 size: 1] [line: 45]
Sibling: 15  Func: solve returns type int [mem: Global loc: 0 size: -3] [line: 50]
.   Child: 0  Parm: num of type int [mem: Parameter loc: -2 size: 1] [line: 50]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 51]
.   .   Child: 1  Assign: <- of type int [line: 52]
.   .   .   Child: 0  Id: n of type int [mem: Global loc: -78 size: 1] [line: 52]
.   .   .   Child: 1  Id: num of type int [mem: Parameter loc: -2 size: 1] [line: 52]
.   .   Sibling: 1  Assign: <- of type int [line: 53]
.   .   .   Child: 0  Id: count of type int [mem: Global loc: -79 size: 1] [line: 53]
.   .   .   Child: 1  Const 0 of type int [line: 53]
.   .   Sibling: 2  Call: try of type void [line: 54]
.   .   .   Child: 0  Const 0 of type int [line: 54]
.   .   Sibling: 3  Return [line: 56]
.   .   .   Child: 0  Id: count of type int [mem: Global loc: -79 size: 1] [line: 56]
Sibling: 16  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 59]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 60]
.   .   Child: 0  Var: num of type int [mem: Local loc: -2 size: 1] [line: 61]
.   .   Child: 1  While [line: 63]
.   .   .   Child: 0  Op: > of type bool [line: 63]
.   .   .   .   Child: 0  Assign: <- of type int [line: 63]
.   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -2 size: 1] [line: 63]
.   .   .   .   .   Child: 1  Call: input of type int [line: 63]
.   .   .   .   Child: 1  Const 0 of type int [line: 63]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 63]
.   .   .   .   Child: 1  Call: output of type void [line: 64]
.   .   .   .   .   Child: 0  Call: solve of type int [line: 64]
.   .   .   .   .   .   Child: 0  Id: num of type int [mem: Local loc: -2 size: 1] [line: 64]
.   .   .   .   Sibling: 1  Call: outnl of type void [line: 65]
Offset for end of global space: -80
Number of warnings: 0
Number of errors: 0

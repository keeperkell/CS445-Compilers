WARNING(88): Variable 'f' may be uninitialized when used here.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: pow returns type int [mem: Global loc: 0 size: -4] [line: 2]
.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: p of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 3]
.   .   Child: 0  Var: sqr of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   Sibling: 1  Var: ans of type int [mem: Local loc: -5 size: 1] [line: 5]
.   .   Child: 1  Assign: <- of type int [line: 7]
.   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 7]
.   .   .   Child: 1  Const 1 of type int [line: 7]
.   .   Sibling: 1  Assign: <- of type int [line: 8]
.   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 8]
.   .   .   Child: 1  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   Sibling: 2  While [line: 9]
.   .   .   Child: 0  Const true of type bool [line: 9]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 9]
.   .   .   .   Child: 1  If [line: 10]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 10]
.   .   .   .   .   .   Child: 0  Op: % of type int [line: 10]
.   .   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 10]
.   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 10]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 10]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 10]
.   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 10]
.   .   .   .   .   .   Child: 1  Op: * of type int [line: 10]
.   .   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 10]
.   .   .   .   .   .   .   Child: 1  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 11]
.   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Op: / of type int [line: 11]
.   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 11]
.   .   .   .   Sibling: 2  If [line: 12]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 12]
.   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 12]
.   .   .   .   .   Child: 1  Return [line: 12]
.   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 12]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 13]
.   .   .   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   Child: 1  Op: * of type int [line: 13]
.   .   .   .   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   .   Child: 1  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 13]
Sibling: 8  Func: getFunc returns type int [mem: Global loc: 0 size: -3] [line: 17]
.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 18]
.   .   Child: 0  Var: numbits of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   Sibling: 1  Var: i of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   Sibling: 2  Var: size of type int [mem: Local loc: -5 size: 1] [line: 21]
.   .   Child: 1  If [line: 23]
.   .   .   Child: 0  Op: = of type bool [line: 23]
.   .   .   .   Child: 0  Assign: <- of type int [line: 23]
.   .   .   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Call: input of type int [line: 23]
.   .   .   .   Child: 1  Const 0 of type int [line: 23]
.   .   .   Child: 1  Return [line: 23]
.   .   .   .   Child: 0  Const 0 of type int [line: 23]
.   .   Sibling: 1  Assign: <- of type int [line: 24]
.   .   .   Child: 0  Id: size of type int [mem: Local loc: -5 size: 1] [line: 24]
.   .   .   Child: 1  Call: pow of type int [line: 24]
.   .   .   .   Child: 0  Const 2 of type int [line: 24]
.   .   .   .   Sibling: 1  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   Sibling: 2  Assign: <- of type int [line: 25]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 25]
.   .   .   Child: 1  Const 0 of type int [line: 25]
.   .   Sibling: 3  While [line: 26]
.   .   .   Child: 0  Op: < of type bool [line: 26]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 26]
.   .   .   .   Child: 1  Id: size of type int [mem: Local loc: -5 size: 1] [line: 26]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 26]
.   .   .   .   Child: 1  Assign: <- of type int [line: 27]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 27]
.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 27]
.   .   .   .   .   Child: 1  Call: input of type int [line: 27]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 28]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]
.   .   .   .   .   Child: 1  Op: + of type int [line: 28]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 28]
.   .   Sibling: 4  Return [line: 31]
.   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 31]
Sibling: 9  Func: printFunc returns type void [mem: Global loc: 0 size: -4] [line: 34]
.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 34]
.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 34]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 35]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 36]
.   .   Child: 1  Assign: <- of type int [line: 38]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 38]
.   .   .   Child: 1  Const 0 of type int [line: 38]
.   .   Sibling: 1  While [line: 39]
.   .   .   Child: 0  Op: < of type bool [line: 39]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 39]
.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 39]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 39]
.   .   .   .   Child: 1  Call: output of type void [line: 40]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 40]
.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 40]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 40]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 41]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 41]
.   .   .   .   .   Child: 1  Op: + of type int [line: 41]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 41]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 41]
.   .   Sibling: 2  Call: outnl of type void [line: 43]
Sibling: 10  Func: fwt returns type void [mem: Global loc: 0 size: -5] [line: 47]
.   Child: 0  Parm: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 47]
.   Sibling: 1  Parm: start of type int [mem: Parameter loc: -3 size: 1] [line: 47]
.   Sibling: 2  Parm: size of type int [mem: Parameter loc: -4 size: 1] [line: 47]
.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 48]
.   .   Child: 0  Var: a of type int [mem: Local loc: -5 size: 1] [line: 49]
.   .   Sibling: 1  Var: b of type int [mem: Local loc: -6 size: 1] [line: 49]
.   .   Sibling: 2  Var: tmp of type int [mem: Local loc: -7 size: 1] [line: 49]
.   .   Child: 1  Assign: <- of type int [line: 51]
.   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 51]
.   .   .   Child: 1  Op: / of type int [line: 51]
.   .   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 51]
.   .   .   .   Child: 1  Const 2 of type int [line: 51]
.   .   Sibling: 1  If [line: 52]
.   .   .   Child: 0  Op: > of type bool [line: 52]
.   .   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 52]
.   .   .   .   Child: 1  Const 1 of type int [line: 52]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 52]
.   .   .   .   Child: 1  Call: fwt of type void [line: 53]
.   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 53]
.   .   .   .   .   Sibling: 1  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 53]
.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 53]
.   .   .   .   Sibling: 1  Call: fwt of type void [line: 54]
.   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 54]
.   .   .   .   .   Sibling: 1  Op: + of type int [line: 54]
.   .   .   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 54]
.   .   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 54]
.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 54]
.   .   Sibling: 2  Assign: <- of type int [line: 57]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 57]
.   .   .   Child: 1  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 57]
.   .   Sibling: 3  Assign: <- of type int [line: 58]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 58]
.   .   .   Child: 1  Op: + of type int [line: 58]
.   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 58]
.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 58]
.   .   Sibling: 4  While [line: 59]
.   .   .   Child: 0  Op: < of type bool [line: 59]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 59]
.   .   .   .   Child: 1  Op: + of type int [line: 59]
.   .   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 59]
.   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 59]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 59]
.   .   .   .   Child: 1  Assign: <- of type int [line: 60]
.   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 60]
.   .   .   .   .   Child: 1  Op: [ of type int [line: 60]
.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 60]
.   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 60]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 61]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 61]
.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 61]
.   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 61]
.   .   .   .   .   Child: 1  Op: + of type int [line: 61]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 61]
.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 61]
.   .   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 61]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 61]
.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 61]
.   .   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 61]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 62]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 62]
.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 62]
.   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 62]
.   .   .   .   .   Child: 1  Op: - of type int [line: 62]
.   .   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 62]
.   .   .   .   .   .   Child: 1  Op: [ of type int [line: 62]
.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 62]
.   .   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 62]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 63]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]
.   .   .   .   .   Child: 1  Op: + of type int [line: 63]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 63]
.   .   .   .   Sibling: 4  Assign: <- of type int [line: 64]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]
.   .   .   .   .   Child: 1  Op: + of type int [line: 64]
.   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 64]
Sibling: 11  Func: div returns type void [mem: Global loc: 0 size: -4] [line: 68]
.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 68]
.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 68]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 69]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 70]
.   .   Child: 1  Assign: <- of type int [line: 72]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 72]
.   .   .   Child: 1  Const 0 of type int [line: 72]
.   .   Sibling: 1  While [line: 73]
.   .   .   Child: 0  Op: < of type bool [line: 73]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 73]
.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 73]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 73]
.   .   .   .   Child: 1  Assign: <- of type int [line: 74]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 74]
.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 74]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 74]
.   .   .   .   .   Child: 1  Op: / of type int [line: 74]
.   .   .   .   .   .   Child: 0  Op: [ of type int [line: 74]
.   .   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 74]
.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 74]
.   .   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 74]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 75]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 75]
Sibling: 12  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 79]
.   Child: 1  Compound [mem: None loc: 0 size: -262] [line: 80]
.   .   Child: 0  Var: f of array of type int [mem: Local loc: -3 size: 257] [line: 81]
.   .   Sibling: 1  Var: size of type int [mem: Local loc: -259 size: 1] [line: 83]
.   .   Sibling: 2  Var: numbits of type int [mem: Local loc: -260 size: 1] [line: 84]
.   .   Sibling: 3  Var: half of type int [mem: Local loc: -261 size: 1] [line: 85]
.   .   Child: 1  While [line: 87]
.   .   .   Child: 0  Const true of type bool [line: 87]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -262] [line: 87]
.   .   .   .   Child: 1  If [line: 88]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 88]
.   .   .   .   .   .   Child: 0  Assign: <- of type int [line: 88]
.   .   .   .   .   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -260 size: 1] [line: 88]
.   .   .   .   .   .   .   Child: 1  Call: getFunc of type int [line: 88]
.   .   .   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 88]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 88]
.   .   .   .   .   Child: 1  Return [line: 88]
.   .   .   .   .   .   Child: 0  Const 0 of type int [line: 88]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 89]
.   .   .   .   .   Child: 0  Id: size of type int [mem: Local loc: -259 size: 1] [line: 89]
.   .   .   .   .   Child: 1  Call: pow of type int [line: 89]
.   .   .   .   .   .   Child: 0  Const 2 of type int [line: 89]
.   .   .   .   .   .   Sibling: 1  Id: numbits of type int [mem: Local loc: -260 size: 1] [line: 89]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 90]
.   .   .   .   .   Child: 0  Id: half of type int [mem: Local loc: -261 size: 1] [line: 90]
.   .   .   .   .   Child: 1  Op: / of type int [line: 90]
.   .   .   .   .   .   Child: 0  Id: size of type int [mem: Local loc: -259 size: 1] [line: 90]
.   .   .   .   .   .   Child: 1  Const 2 of type int [line: 90]
.   .   .   .   Sibling: 3  Call: fwt of type void [line: 92]
.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 92]
.   .   .   .   .   Sibling: 1  Const 0 of type int [line: 92]
.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Local loc: -259 size: 1] [line: 92]
.   .   .   .   Sibling: 4  Call: printFunc of type void [line: 93]
.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 93]
.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 93]
.   .   .   .   Sibling: 5  Call: fwt of type void [line: 95]
.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 95]
.   .   .   .   .   Sibling: 1  Const 0 of type int [line: 95]
.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Local loc: -259 size: 1] [line: 95]
.   .   .   .   Sibling: 6  Call: div of type void [line: 96]
.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 96]
.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 96]
.   .   .   .   Sibling: 7  Call: printFunc of type void [line: 97]
.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 97]
.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 97]
.   .   Sibling: 1  Return [line: 99]
.   .   .   Child: 0  Const 0 of type int [line: 99]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 0

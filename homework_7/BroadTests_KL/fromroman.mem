WARNING(70): Variable 's' may be uninitialized when used here.
Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Func: getstring returns type int [mem: Global loc: 0 size: -3] [line: 5]
.   Child: 0  Parm: s of array of type char [mem: Parameter loc: -2 size: 1] [line: 5]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   Child: 1  Assign: <- of type int [line: 9]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   Child: 1  Op: chsign of type int [line: 9]
.   .   .   .   Child: 0  Const 1 of type int [line: 9]
.   .   Sibling: 1  While [line: 10]
.   .   .   Child: 0  Const true of type bool [line: 10]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 10]
.   .   .   .   Child: 0  Var: c of type char [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 1  Assign: <- of type char [line: 13]
.   .   .   .   .   Child: 0  Id: c of type char [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   Child: 1  Call: inputc of type char [line: 13]
.   .   .   .   Sibling: 1  If [line: 14]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 14]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   .   .   .   Child: 1  Op: sizeof of type int [line: 14]
.   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -2 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 14]
.   .   .   .   .   .   Child: 1  Assign: ++ of type int [line: 15]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   .   .   .   .   Sibling: 1  Assign: <- of type char [line: 16]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 16]
.   .   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -2 size: 1] [line: 16]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   .   .   .   Child: 1  Id: c of type char [mem: Local loc: -4 size: 1] [line: 16]
.   .   .   .   Sibling: 2  If [line: 18]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 18]
.   .   .   .   .   .   Child: 0  Id: c of type char [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   .   .   Child: 1  Const '
' of type char [line: 18]
.   .   .   .   .   Child: 1  Break [line: 18]
.   .   Sibling: 2  Return [line: 21]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 21]
Sibling: 8  Func: putstring returns type void [mem: Global loc: 0 size: -4] [line: 24]
.   Child: 0  Parm: len of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   Sibling: 1  Parm: s of array of type char [mem: Parameter loc: -3 size: 1] [line: 24]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 25]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 26]
.   .   Child: 1  Assign: <- of type int [line: 28]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]
.   .   .   Child: 1  Const 0 of type int [line: 28]
.   .   Sibling: 1  While [line: 29]
.   .   .   Child: 0  Op: < of type bool [line: 29]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 29]
.   .   .   .   Child: 1  Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 29]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 29]
.   .   .   .   Child: 1  Call: outputc of type void [line: 30]
.   .   .   .   .   Child: 0  Op: [ of type char [line: 30]
.   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 1] [line: 30]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 30]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 31]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 31]
Sibling: 9  Func: charvalue returns type int [mem: Global loc: 0 size: -3] [line: 35]
.   Child: 0  Parm: c of type char [mem: Parameter loc: -2 size: 1] [line: 35]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 36]
.   .   Child: 1  If [line: 37]
.   .   .   Child: 0  Op: = of type bool [line: 37]
.   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 37]
.   .   .   .   Child: 1  Const 'I' of type char [line: 37]
.   .   .   Child: 1  Return [line: 37]
.   .   .   .   Child: 0  Const 1 of type int [line: 37]
.   .   .   Child: 2  If [line: 38]
.   .   .   .   Child: 0  Op: = of type bool [line: 38]
.   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 38]
.   .   .   .   .   Child: 1  Const 'V' of type char [line: 38]
.   .   .   .   Child: 1  Return [line: 38]
.   .   .   .   .   Child: 0  Const 5 of type int [line: 38]
.   .   .   .   Child: 2  If [line: 39]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 39]
.   .   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 39]
.   .   .   .   .   .   Child: 1  Const 'X' of type char [line: 39]
.   .   .   .   .   Child: 1  Return [line: 39]
.   .   .   .   .   .   Child: 0  Const 10 of type int [line: 39]
.   .   .   .   .   Child: 2  If [line: 40]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 40]
.   .   .   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 40]
.   .   .   .   .   .   .   Child: 1  Const 'L' of type char [line: 40]
.   .   .   .   .   .   Child: 1  Return [line: 40]
.   .   .   .   .   .   .   Child: 0  Const 50 of type int [line: 40]
.   .   .   .   .   .   Child: 2  If [line: 41]
.   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 41]
.   .   .   .   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 41]
.   .   .   .   .   .   .   .   Child: 1  Const 'C' of type char [line: 41]
.   .   .   .   .   .   .   Child: 1  Return [line: 41]
.   .   .   .   .   .   .   .   Child: 0  Const 100 of type int [line: 41]
.   .   .   .   .   .   .   Child: 2  If [line: 42]
.   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 42]
.   .   .   .   .   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 42]
.   .   .   .   .   .   .   .   .   Child: 1  Const 'D' of type char [line: 42]
.   .   .   .   .   .   .   .   Child: 1  Return [line: 42]
.   .   .   .   .   .   .   .   .   Child: 0  Const 500 of type int [line: 42]
.   .   .   .   .   .   .   .   Child: 2  If [line: 43]
.   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 'M' of type char [line: 43]
.   .   .   .   .   .   .   .   .   Child: 1  Return [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const 1000 of type int [line: 43]
.   .   .   .   .   .   .   .   .   Child: 2  Return [line: 44]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const 0 of type int [line: 44]
Sibling: 10  Func: roman2arabic returns type int [mem: Global loc: 0 size: -4] [line: 47]
.   Child: 0  Parm: len of type int [mem: Parameter loc: -2 size: 1] [line: 47]
.   Sibling: 1  Parm: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 47]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 48]
.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 49]
.   .   Sibling: 1  Var: sum of type int [mem: Local loc: -5 size: 1] [line: 49]
.   .   Child: 1  Assign: <- of type int [line: 51]
.   .   .   Child: 0  Id: sum of type int [mem: Local loc: -5 size: 1] [line: 51]
.   .   .   Child: 1  Const 0 of type int [line: 51]
.   .   Sibling: 1  Assign: <- of type int [line: 52]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 52]
.   .   .   Child: 1  Const 0 of type int [line: 52]
.   .   Sibling: 2  While [line: 53]
.   .   .   Child: 0  Op: < of type bool [line: 53]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 53]
.   .   .   .   Child: 1  Op: - of type int [line: 53]
.   .   .   .   .   Child: 0  Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 53]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 53]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 53]
.   .   .   .   Child: 1  If [line: 54]
.   .   .   .   .   Child: 0  Op: < of type bool [line: 54]
.   .   .   .   .   .   Child: 0  Call: charvalue of type int [line: 54]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 54]
.   .   .   .   .   .   .   .   Child: 0  Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 54]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 54]
.   .   .   .   .   .   Child: 1  Call: charvalue of type int [line: 54]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 54]
.   .   .   .   .   .   .   .   Child: 0  Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 54]
.   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 54]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 54]
.   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 54]
.   .   .   .   .   Child: 1  Assign: -= of type int [line: 54]
.   .   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -5 size: 1] [line: 54]
.   .   .   .   .   .   Child: 1  Call: charvalue of type int [line: 54]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 54]
.   .   .   .   .   .   .   .   Child: 0  Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 54]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 54]
.   .   .   .   .   Child: 2  Assign: += of type int [line: 55]
.   .   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -5 size: 1] [line: 55]
.   .   .   .   .   .   Child: 1  Call: charvalue of type int [line: 55]
.   .   .   .   .   .   .   Child: 0  Op: [ of type char [line: 55]
.   .   .   .   .   .   .   .   Child: 0  Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 55]
.   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 55]
.   .   .   .   Sibling: 1  Assign: ++ of type int [line: 56]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 56]
.   .   Sibling: 3  Assign: += of type int [line: 58]
.   .   .   Child: 0  Id: sum of type int [mem: Local loc: -5 size: 1] [line: 58]
.   .   .   Child: 1  Call: charvalue of type int [line: 58]
.   .   .   .   Child: 0  Op: [ of type char [line: 58]
.   .   .   .   .   Child: 0  Id: roman of array of type char [mem: Parameter loc: -3 size: 1] [line: 58]
.   .   .   .   .   Child: 1  Op: - of type int [line: 58]
.   .   .   .   .   .   Child: 0  Id: len of type int [mem: Parameter loc: -2 size: 1] [line: 58]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 58]
.   .   Sibling: 4  Return [line: 60]
.   .   .   Child: 0  Id: sum of type int [mem: Local loc: -5 size: 1] [line: 60]
Sibling: 11  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 64]
.   Child: 1  Compound [mem: None loc: 0 size: -54] [line: 65]
.   .   Child: 0  Var: s of array of type char [mem: Local loc: -3 size: 51] [line: 66]
.   .   Sibling: 1  Var: len of type int [mem: Local loc: -53 size: 1] [line: 67]
.   .   Child: 1  While [line: 69]
.   .   .   Child: 0  Const true of type bool [line: 69]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -54] [line: 69]
.   .   .   .   Child: 1  Assign: <- of type int [line: 70]
.   .   .   .   .   Child: 0  Id: len of type int [mem: Local loc: -53 size: 1] [line: 70]
.   .   .   .   .   Child: 1  Call: getstring of type int [line: 70]
.   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Local loc: -3 size: 51] [line: 70]
.   .   .   .   Sibling: 1  If [line: 71]
.   .   .   .   .   Child: 0  Op: = of type bool [line: 71]
.   .   .   .   .   .   Child: 0  Op: [ of type char [line: 71]
.   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Local loc: -3 size: 51] [line: 71]
.   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 71]
.   .   .   .   .   .   Child: 1  Const 'q' of type char [line: 71]
.   .   .   .   .   Child: 1  Break [line: 71]
.   .   .   .   Sibling: 2  Call: putstring of type void [line: 72]
.   .   .   .   .   Child: 0  Id: len of type int [mem: Local loc: -53 size: 1] [line: 72]
.   .   .   .   .   Sibling: 1  Id: s of array of type char [mem: Local loc: -3 size: 51] [line: 72]
.   .   .   .   Sibling: 3  Call: outnl of type void [line: 73]
.   .   .   .   Sibling: 4  Call: output of type void [line: 74]
.   .   .   .   .   Child: 0  Call: roman2arabic of type int [line: 74]
.   .   .   .   .   .   Child: 0  Id: len of type int [mem: Local loc: -53 size: 1] [line: 74]
.   .   .   .   .   .   Sibling: 1  Id: s of array of type char [mem: Local loc: -3 size: 51] [line: 74]
.   .   .   .   Sibling: 5  Call: outnl of type void [line: 75]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 0

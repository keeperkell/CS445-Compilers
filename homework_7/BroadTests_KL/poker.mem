Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: numSuits of type int [mem: Global loc: 0 size: 1] [line: 4]
Sibling: 8  Var: numPips of type int [mem: Global loc: -1 size: 1] [line: 4]
Sibling: 9  Var: numCards of type int [mem: Global loc: -2 size: 1] [line: 4]
Sibling: 10  Func: suit returns type int [mem: Global loc: 0 size: -3] [line: 6]
.   Child: 0  Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 6]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 6]
.   .   Child: 1  Return [line: 6]
.   .   .   Child: 0  Op: % of type int [line: 6]
.   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 6]
Sibling: 11  Func: pips returns type int [mem: Global loc: 0 size: -3] [line: 7]
.   Child: 0  Parm: c of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 7]
.   .   Child: 1  Return [line: 7]
.   .   .   Child: 0  Op: / of type int [line: 7]
.   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 7]
Sibling: 12  Func: p returns type bool [mem: Global loc: 0 size: -4] [line: 9]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   Sibling: 1  Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 9]
.   .   Child: 1  Return [line: 9]
.   .   .   Child: 0  Op: = of type bool [line: 9]
.   .   .   .   Child: 0  Call: pips of type int [line: 9]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   .   Child: 1  Call: pips of type int [line: 9]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 9]
Sibling: 13  Func: ppp returns type bool [mem: Global loc: 0 size: -5] [line: 10]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   Sibling: 1  Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]
.   Sibling: 2  Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 10]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 10]
.   .   Child: 1  Return [line: 10]
.   .   .   Child: 0  Op: and of type bool [line: 10]
.   .   .   .   Child: 0  Call: p of type bool [line: 10]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]
.   .   .   .   Child: 1  Call: p of type bool [line: 10]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 10]
.   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 10]
Sibling: 14  Func: pppp returns type bool [mem: Global loc: 0 size: -6] [line: 11]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]
.   Sibling: 3  Parm: d of type int [mem: Parameter loc: -5 size: 1] [line: 11]
.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 11]
.   .   Child: 1  Return [line: 11]
.   .   .   Child: 0  Op: and of type bool [line: 11]
.   .   .   .   Child: 0  Op: and of type bool [line: 11]
.   .   .   .   .   Child: 0  Call: p of type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Call: p of type bool [line: 11]
.   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 11]
.   .   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 1  Call: p of type bool [line: 11]
.   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 11]
.   .   .   .   .   Sibling: 1  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 11]
Sibling: 15  Func: handtype returns type int [mem: Global loc: 0 size: -7] [line: 13]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   Sibling: 1  Parm: b of type int [mem: Parameter loc: -3 size: 1] [line: 13]
.   Sibling: 2  Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 13]
.   Sibling: 3  Parm: d of type int [mem: Parameter loc: -5 size: 1] [line: 13]
.   Sibling: 4  Parm: e of type int [mem: Parameter loc: -6 size: 1] [line: 13]
.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 14]
.   .   Child: 0  Var: isflush of type bool [mem: Local loc: -7 size: 1] [line: 15]
.   .   Child: 1  Assign: <- of type bool [line: 17]
.   .   .   Child: 0  Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 17]
.   .   .   Child: 1  Op: and of type bool [line: 19]
.   .   .   .   Child: 0  Op: and of type bool [line: 18]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 17]
.   .   .   .   .   .   Child: 0  Op: = of type bool [line: 17]
.   .   .   .   .   .   .   Child: 0  Call: suit of type int [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   .   .   .   .   .   .   Child: 1  Call: suit of type int [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 17]
.   .   .   .   .   .   Child: 1  Op: = of type bool [line: 18]
.   .   .   .   .   .   .   Child: 0  Call: suit of type int [line: 18]
.   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   .   .   .   .   Child: 1  Call: suit of type int [line: 18]
.   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Op: = of type bool [line: 19]
.   .   .   .   .   .   Child: 0  Call: suit of type int [line: 19]
.   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 19]
.   .   .   .   .   .   Child: 1  Call: suit of type int [line: 19]
.   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 19]
.   .   .   .   Child: 1  Op: = of type bool [line: 20]
.   .   .   .   .   Child: 0  Call: suit of type int [line: 20]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Call: suit of type int [line: 20]
.   .   .   .   .   .   Child: 0  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 20]
.   .   Sibling: 1  If [line: 23]
.   .   .   Child: 0  Op: and of type bool [line: 23]
.   .   .   .   Child: 0  Op: and of type bool [line: 23]
.   .   .   .   .   Child: 0  Op: and of type bool [line: 23]
.   .   .   .   .   .   Child: 0  Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Op: = of type bool [line: 23]
.   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 23]
.   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 23]
.   .   .   .   .   Child: 1  Op: = of type bool [line: 23]
.   .   .   .   .   .   Child: 0  Call: pips of type int [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Op: - of type int [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 23]
.   .   .   .   Child: 1  Op: = of type bool [line: 23]
.   .   .   .   .   Child: 0  Call: pips of type int [line: 23]
.   .   .   .   .   .   Child: 0  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Op: - of type int [line: 23]
.   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 23]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 23]
.   .   .   Child: 1  Return [line: 24]
.   .   .   .   Child: 0  Const 0 of type int [line: 24]
.   .   .   Child: 2  If [line: 27]
.   .   .   .   Child: 0  Op: and of type bool [line: 27]
.   .   .   .   .   Child: 0  Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 27]
.   .   .   .   .   Child: 1  Op: = of type bool [line: 27]
.   .   .   .   .   .   Child: 0  Call: pips of type int [line: 27]
.   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   .   .   .   .   Child: 1  Op: - of type int [line: 27]
.   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 27]
.   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 27]
.   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 27]
.   .   .   .   Child: 1  Return [line: 28]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 28]
.   .   .   .   Child: 2  If [line: 31]
.   .   .   .   .   Child: 0  Op: or of type bool [line: 31]
.   .   .   .   .   .   Child: 0  Call: pppp of type bool [line: 31]
.   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 2  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 3  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 31]
.   .   .   .   .   .   Child: 1  Call: pppp of type bool [line: 31]
.   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 2  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 31]
.   .   .   .   .   .   .   Sibling: 3  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 31]
.   .   .   .   .   Child: 1  Return [line: 32]
.   .   .   .   .   .   Child: 0  Const 2 of type int [line: 32]
.   .   .   .   .   Child: 2  If [line: 35]
.   .   .   .   .   .   Child: 0  Op: or of type bool [line: 35]
.   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 35]
.   .   .   .   .   .   .   .   Child: 0  Call: ppp of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 2  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 35]
.   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 35]
.   .   .   .   .   .   .   Child: 1  Op: and of type bool [line: 35]
.   .   .   .   .   .   .   .   Child: 0  Call: p of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 35]
.   .   .   .   .   .   .   .   Child: 1  Call: ppp of type bool [line: 35]
.   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 1  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 35]
.   .   .   .   .   .   .   .   .   Sibling: 2  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 35]
.   .   .   .   .   .   Child: 1  Return [line: 36]
.   .   .   .   .   .   .   Child: 0  Const 3 of type int [line: 36]
.   .   .   .   .   .   Child: 2  If [line: 39]
.   .   .   .   .   .   .   Child: 0  Id: isflush of type bool [mem: Local loc: -7 size: 1] [line: 39]
.   .   .   .   .   .   .   Child: 1  Return [line: 40]
.   .   .   .   .   .   .   .   Child: 0  Const 4 of type int [line: 40]
.   .   .   .   .   .   .   Child: 2  If [line: 43]
.   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 43]
.   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 43]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 43]
.   .   .   .   .   .   .   .   .   Child: 1  Op: and of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: = of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 0 of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 4 of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 3 of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 2 of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   Child: 1  Op: = of type bool [line: 44]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: pips of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: - of type int [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 44]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 44]
.   .   .   .   .   .   .   .   Child: 1  Return [line: 46]
.   .   .   .   .   .   .   .   .   Child: 0  Const 5 of type int [line: 46]
.   .   .   .   .   .   .   .   Child: 2  If [line: 49]
.   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 49]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 49]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ppp of type bool [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: ppp of type bool [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   Child: 1  Call: ppp of type bool [line: 49]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 49]
.   .   .   .   .   .   .   .   .   Child: 1  Return [line: 50]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const 6 of type int [line: 50]
.   .   .   .   .   .   .   .   .   Child: 2  If [line: 53]
.   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: and of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: and of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: and of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 53]
.   .   .   .   .   .   .   .   .   .   Child: 1  Return [line: 54]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 7 of type int [line: 54]
.   .   .   .   .   .   .   .   .   .   Child: 2  If [line: 57]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: or of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: p of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Parameter loc: -3 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Parameter loc: -4 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: p of type bool [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Parameter loc: -5 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: e of type int [mem: Parameter loc: -6 size: 1] [line: 57]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Return [line: 58]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 8 of type int [line: 58]
.   .   .   .   .   .   .   .   .   .   .   Child: 2  Return [line: 60]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 9 of type int [line: 60]
Sibling: 16  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 63]
.   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 64]
.   .   Child: 0  Var: hands of array of type int [mem: Local loc: -3 size: 11] [line: 65]
.   .   Sibling: 1  Var: a of type int [mem: Local loc: -13 size: 1] [line: 66]
.   .   Sibling: 2  Var: b of type int [mem: Local loc: -14 size: 1] [line: 66]
.   .   Sibling: 3  Var: c of type int [mem: Local loc: -15 size: 1] [line: 66]
.   .   Sibling: 4  Var: d of type int [mem: Local loc: -16 size: 1] [line: 66]
.   .   Sibling: 5  Var: e of type int [mem: Local loc: -17 size: 1] [line: 66]
.   .   Sibling: 6  Var: h of type int [mem: Local loc: -18 size: 1] [line: 66]
.   .   Sibling: 7  Var: possible of type int [mem: Local loc: -19 size: 1] [line: 66]
.   .   Sibling: 8  Var: i of type int [mem: Local loc: -20 size: 1] [line: 66]
.   .   Child: 1  Assign: <- of type int [line: 68]
.   .   .   Child: 0  Id: i of type int [mem: Local loc: -20 size: 1] [line: 68]
.   .   .   Child: 1  Const 0 of type int [line: 68]
.   .   Sibling: 1  While [line: 69]
.   .   .   Child: 0  Op: < of type bool [line: 69]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -20 size: 1] [line: 69]
.   .   .   .   Child: 1  Const 10 of type int [line: 69]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 69]
.   .   .   .   Child: 1  Assign: <- of type int [line: 70]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 70]
.   .   .   .   .   .   Child: 0  Id: hands of array of type int [mem: Local loc: -3 size: 11] [line: 70]
.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -20 size: 1] [line: 70]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 70]
.   .   .   .   Sibling: 1  Assign: <- of type int [line: 71]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -20 size: 1] [line: 71]
.   .   .   .   .   Child: 1  Op: + of type int [line: 71]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -20 size: 1] [line: 71]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 71]
.   .   Sibling: 2  Assign: <- of type int [line: 74]
.   .   .   Child: 0  Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 74]
.   .   .   Child: 1  Const 4 of type int [line: 74]
.   .   Sibling: 3  Assign: <- of type int [line: 75]
.   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 75]
.   .   .   Child: 1  Const 6 of type int [line: 75]
.   .   Sibling: 4  Assign: <- of type int [line: 76]
.   .   .   Child: 0  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 76]
.   .   .   Child: 1  Op: - of type int [line: 76]
.   .   .   .   Child: 0  Op: * of type int [line: 76]
.   .   .   .   .   Child: 0  Id: numPips of type int [mem: Global loc: -1 size: 1] [line: 76]
.   .   .   .   .   Child: 1  Id: numSuits of type int [mem: Global loc: 0 size: 1] [line: 76]
.   .   .   .   Child: 1  Const 1 of type int [line: 76]
.   .   Sibling: 5  Assign: <- of type int [line: 78]
.   .   .   Child: 0  Id: possible of type int [mem: Local loc: -19 size: 1] [line: 78]
.   .   .   Child: 1  Const 0 of type int [line: 78]
.   .   Sibling: 6  Assign: <- of type int [line: 79]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 79]
.   .   .   Child: 1  Const 0 of type int [line: 79]
.   .   Sibling: 7  While [line: 80]
.   .   .   Child: 0  Op: <= of type bool [line: 80]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 80]
.   .   .   .   Child: 1  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 80]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 80]
.   .   .   .   Child: 1  Call: output of type void [line: 81]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 81]
.   .   .   .   Sibling: 1  Call: outnl of type void [line: 81]
.   .   .   .   Sibling: 2  Assign: <- of type int [line: 82]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -14 size: 1] [line: 82]
.   .   .   .   .   Child: 1  Op: + of type int [line: 82]
.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 82]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 82]
.   .   .   .   Sibling: 3  While [line: 83]
.   .   .   .   .   Child: 0  Op: <= of type bool [line: 83]
.   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -14 size: 1] [line: 83]
.   .   .   .   .   .   Child: 1  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 83]
.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 83]
.   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 84]
.   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 84]
.   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 84]
.   .   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -14 size: 1] [line: 84]
.   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 84]
.   .   .   .   .   .   Sibling: 1  While [line: 85]
.   .   .   .   .   .   .   Child: 0  Op: <= of type bool [line: 85]
.   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 85]
.   .   .   .   .   .   .   .   Child: 1  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 85]
.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 85]
.   .   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 86]
.   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -16 size: 1] [line: 86]
.   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 86]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 86]
.   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 86]
.   .   .   .   .   .   .   .   Sibling: 1  While [line: 87]
.   .   .   .   .   .   .   .   .   Child: 0  Op: <= of type bool [line: 87]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -16 size: 1] [line: 87]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 87]
.   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 87]
.   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 88]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Local loc: -17 size: 1] [line: 88]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 88]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -16 size: 1] [line: 88]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 88]
.   .   .   .   .   .   .   .   .   .   Sibling: 1  While [line: 89]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: <= of type bool [line: 89]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Local loc: -17 size: 1] [line: 89]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: numCards of type int [mem: Global loc: -2 size: 1] [line: 89]
.   .   .   .   .   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 89]
.   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Assign: <- of type int [line: 90]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: possible of type int [mem: Local loc: -19 size: 1] [line: 90]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 90]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: possible of type int [mem: Local loc: -19 size: 1] [line: 90]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 90]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Assign: <- of type int [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Call: handtype of type int [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 1  Id: b of type int [mem: Local loc: -14 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Id: c of type int [mem: Local loc: -15 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 3  Id: d of type int [mem: Local loc: -16 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Sibling: 4  Id: e of type int [mem: Local loc: -17 size: 1] [line: 91]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 2  Assign: <- of type int [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: hands of array of type int [mem: Local loc: -3 size: 11] [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: h of type int [mem: Local loc: -18 size: 1] [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Op: + of type int [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: [ of type int [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: hands of array of type int [mem: Local loc: -3 size: 11] [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Id: h of type int [mem: Local loc: -18 size: 1] [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 1 of type int [line: 92]
.   .   .   .   .   .   .   .   .   .   .   .   Sibling: 3  Assign: ++ of type int [line: 93]
.   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: e of type int [mem: Local loc: -17 size: 1] [line: 93]
.   .   .   .   .   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 95]
.   .   .   .   .   .   .   .   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -16 size: 1] [line: 95]
.   .   .   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 97]
.   .   .   .   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 97]
.   .   .   .   .   .   Sibling: 2  Assign: ++ of type int [line: 99]
.   .   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -14 size: 1] [line: 99]
.   .   .   .   Sibling: 4  Assign: ++ of type int [line: 101]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -13 size: 1] [line: 101]
.   .   Sibling: 8  Assign: <- of type int [line: 103]
.   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 103]
.   .   .   Child: 1  Const 0 of type int [line: 103]
.   .   Sibling: 9  While [line: 104]
.   .   .   Child: 0  Op: < of type bool [line: 104]
.   .   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 104]
.   .   .   .   Child: 1  Const 10 of type int [line: 104]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -21] [line: 104]
.   .   .   .   Child: 1  Call: output of type void [line: 106]
.   .   .   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 106]
.   .   .   .   Sibling: 1  Call: output of type void [line: 107]
.   .   .   .   .   Child: 0  Op: [ of type int [line: 107]
.   .   .   .   .   .   Child: 0  Id: hands of array of type int [mem: Local loc: -3 size: 11] [line: 107]
.   .   .   .   .   .   Child: 1  Id: h of type int [mem: Local loc: -18 size: 1] [line: 107]
.   .   .   .   Sibling: 2  Call: outnl of type void [line: 108]
.   .   .   .   Sibling: 3  Assign: <- of type int [line: 109]
.   .   .   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 109]
.   .   .   .   .   Child: 1  Op: + of type int [line: 109]
.   .   .   .   .   .   Child: 0  Id: h of type int [mem: Local loc: -18 size: 1] [line: 109]
.   .   .   .   .   .   Child: 1  Const 1 of type int [line: 109]
.   .   Sibling: 10  Return [line: 112]
.   .   .   Child: 0  Const 0 of type int [line: 112]
Offset for end of global space: -3
Number of warnings: 0
Number of errors: 0

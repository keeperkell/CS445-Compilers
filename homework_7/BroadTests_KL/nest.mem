Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: x of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 8  Var: y of type int [mem: Global loc: -1 size: 1] [line: 2]
Sibling: 9  Var: z of type int [mem: Global loc: -2 size: 1] [line: 3]
Sibling: 10  Func: agamemnon returns type void [mem: Global loc: 0 size: -2] [line: 5]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 6]
.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   Sibling: 2  Var: x of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   Child: 1  Assign: <- of type int [line: 11]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 1  Const 666 of type int [line: 11]
.   .   Sibling: 1  Assign: <- of type int [line: 12]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   Child: 1  Const 666 of type int [line: 12]
.   .   Sibling: 2  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   Child: 1  Const 666 of type int [line: 13]
.   .   Sibling: 3  Assign: <- of type int [line: 14]
.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 14]
.   .   .   Child: 1  Const 666 of type int [line: 14]
.   .   Sibling: 4  Call: output of type void [line: 16]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 16]
.   .   Sibling: 5  Call: output of type void [line: 17]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   Sibling: 6  Call: output of type void [line: 18]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   Sibling: 7  Call: output of type void [line: 19]
.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 19]
.   .   Sibling: 8  Call: output of type void [line: 20]
.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 20]
.   .   Sibling: 9  Assign: <- of type int [line: 21]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   Child: 1  Const 1 of type int [line: 21]
.   .   Sibling: 10  Assign: <- of type int [line: 22]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 22]
.   .   .   Child: 1  Const 2 of type int [line: 22]
.   .   Sibling: 11  Assign: <- of type int [line: 23]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 23]
.   .   .   Child: 1  Const 3 of type int [line: 23]
.   .   Sibling: 12  Assign: <- of type int [line: 24]
.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 24]
.   .   .   Child: 1  Const 4 of type int [line: 24]
.   .   Sibling: 13  Assign: <- of type int [line: 25]
.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 25]
.   .   .   Child: 1  Const 5 of type int [line: 25]
Sibling: 11  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 28]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 29]
.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 30]
.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 32]
.   .   Child: 1  Assign: <- of type int [line: 34]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 34]
.   .   .   Child: 1  Const 6 of type int [line: 34]
.   .   Sibling: 1  Assign: <- of type int [line: 35]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 35]
.   .   .   Child: 1  Const 7 of type int [line: 35]
.   .   Sibling: 2  Assign: <- of type int [line: 36]
.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 36]
.   .   .   Child: 1  Const 8 of type int [line: 36]
.   .   Sibling: 3  Assign: <- of type int [line: 37]
.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 37]
.   .   .   Child: 1  Const 9 of type int [line: 37]
.   .   Sibling: 4  Assign: <- of type int [line: 38]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 38]
.   .   .   Child: 1  Const 10 of type int [line: 38]
.   .   Sibling: 5  Call: output of type void [line: 40]
.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 40]
.   .   Sibling: 6  Call: output of type void [line: 41]
.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 41]
.   .   Sibling: 7  Call: output of type void [line: 42]
.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 42]
.   .   Sibling: 8  Call: output of type void [line: 43]
.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 43]
.   .   Sibling: 9  Call: output of type void [line: 44]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 44]
.   .   Sibling: 10  Compound [mem: None loc: 0 size: -8] [line: 45]
.   .   .   Child: 0  Var: a of type int [mem: Local loc: -5 size: 1] [line: 46]
.   .   .   Sibling: 1  Var: b of type int [mem: Local loc: -6 size: 1] [line: 47]
.   .   .   Sibling: 2  Var: z of type int [mem: Local loc: -7 size: 1] [line: 48]
.   .   .   Child: 1  Assign: <- of type int [line: 50]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 50]
.   .   .   .   Child: 1  Const 666 of type int [line: 50]
.   .   .   Sibling: 1  Assign: <- of type int [line: 51]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 51]
.   .   .   .   Child: 1  Const 666 of type int [line: 51]
.   .   .   Sibling: 2  Assign: <- of type int [line: 52]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 52]
.   .   .   .   Child: 1  Const 666 of type int [line: 52]
.   .   .   Sibling: 3  Call: output of type void [line: 54]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 54]
.   .   .   Sibling: 4  Call: output of type void [line: 55]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 55]
.   .   .   Sibling: 5  Call: output of type void [line: 56]
.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 56]
.   .   .   Sibling: 6  Call: output of type void [line: 57]
.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 57]
.   .   .   Sibling: 7  Call: output of type void [line: 58]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 58]
.   .   .   Sibling: 8  Assign: <- of type int [line: 60]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 60]
.   .   .   .   Child: 1  Const 11 of type int [line: 60]
.   .   .   Sibling: 9  Assign: <- of type int [line: 61]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 61]
.   .   .   .   Child: 1  Const 12 of type int [line: 61]
.   .   .   Sibling: 10  Assign: <- of type int [line: 62]
.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 62]
.   .   .   .   Child: 1  Const 13 of type int [line: 62]
.   .   .   Sibling: 11  Assign: <- of type int [line: 63]
.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 63]
.   .   .   .   Child: 1  Const 14 of type int [line: 63]
.   .   .   Sibling: 12  Assign: <- of type int [line: 64]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 64]
.   .   .   .   Child: 1  Const 15 of type int [line: 64]
.   .   .   Sibling: 13  Call: output of type void [line: 65]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 65]
.   .   .   Sibling: 14  Call: output of type void [line: 66]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 66]
.   .   .   Sibling: 15  Call: output of type void [line: 67]
.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 67]
.   .   .   Sibling: 16  Call: output of type void [line: 68]
.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 68]
.   .   .   Sibling: 17  Call: output of type void [line: 69]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 69]
.   .   .   Sibling: 18  Compound [mem: None loc: 0 size: -8] [line: 70]
.   .   .   .   Child: 1  Call: output of type void [line: 71]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 71]
.   .   .   .   Sibling: 1  Call: output of type void [line: 72]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 72]
.   .   .   .   Sibling: 2  Call: output of type void [line: 73]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 73]
.   .   .   .   Sibling: 3  Call: output of type void [line: 74]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 74]
.   .   .   .   Sibling: 4  Call: output of type void [line: 75]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 75]
.   .   .   .   Sibling: 5  Assign: <- of type int [line: 77]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 77]
.   .   .   .   .   Child: 1  Const 16 of type int [line: 77]
.   .   .   .   Sibling: 6  Assign: <- of type int [line: 78]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 78]
.   .   .   .   .   Child: 1  Const 17 of type int [line: 78]
.   .   .   .   Sibling: 7  Assign: <- of type int [line: 79]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 79]
.   .   .   .   .   Child: 1  Const 18 of type int [line: 79]
.   .   .   .   Sibling: 8  Assign: <- of type int [line: 80]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 80]
.   .   .   .   .   Child: 1  Const 19 of type int [line: 80]
.   .   .   .   Sibling: 9  Assign: <- of type int [line: 81]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 81]
.   .   .   .   .   Child: 1  Const 20 of type int [line: 81]
.   .   .   .   Sibling: 10  Call: output of type void [line: 82]
.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 82]
.   .   .   .   Sibling: 11  Call: output of type void [line: 83]
.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 83]
.   .   .   .   Sibling: 12  Call: output of type void [line: 84]
.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 84]
.   .   .   .   Sibling: 13  Call: output of type void [line: 85]
.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 85]
.   .   .   .   Sibling: 14  Call: output of type void [line: 86]
.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 86]
.   .   .   Sibling: 19  Call: output of type void [line: 88]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 88]
.   .   .   Sibling: 20  Call: output of type void [line: 89]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 89]
.   .   .   Sibling: 21  Call: output of type void [line: 90]
.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 90]
.   .   .   Sibling: 22  Call: output of type void [line: 91]
.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 91]
.   .   .   Sibling: 23  Call: output of type void [line: 92]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 92]
.   .   .   Sibling: 24  Call: agamemnon of type void [line: 94]
.   .   .   Sibling: 25  Call: output of type void [line: 96]
.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 96]
.   .   .   Sibling: 26  Call: output of type void [line: 97]
.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 97]
.   .   .   Sibling: 27  Call: output of type void [line: 98]
.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 98]
.   .   .   Sibling: 28  Call: output of type void [line: 99]
.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 99]
.   .   .   Sibling: 29  Call: output of type void [line: 100]
.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 100]
Offset for end of global space: -3
Number of warnings: 0
Number of errors: 0

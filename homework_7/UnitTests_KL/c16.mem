Func: input returns type int [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 1  Func: output returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type int [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 2  Func: inputb returns type bool [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 3  Func: outputb returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type bool [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 4  Func: inputc returns type char [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 5  Func: outputc returns type void [mem: Global loc: 0 size: -3] [line: -1]
.   Child: 0  Parm: *dummy* of type char [mem: Parameter loc: -2 size: 1] [line: -1]
Sibling: 6  Func: outnl returns type void [mem: Global loc: 0 size: -2] [line: -1]
Sibling: 7  Var: x of array of type int [mem: Global loc: -1 size: 4] [line: 2]
Sibling: 8  Var: y of array of type int [mem: Global loc: -5 size: 5] [line: 3]
Sibling: 9  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 5]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   Sibling: 1  Var: zz of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   Child: 1  Assign: <- of type int [line: 9]
.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   Child: 1  Const 1 of type int [line: 9]
.   .   Sibling: 1  Assign: <- of type int [line: 10]
.   .   .   Child: 0  Id: zz of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 1  Const 2 of type int [line: 10]
.   .   Sibling: 2  Assign: <- of type int [line: 12]
.   .   .   Child: 0  Op: [ of type int [line: 12]
.   .   .   .   Child: 0  Id: x of array of type int [mem: Global loc: -1 size: 4] [line: 12]
.   .   .   .   Child: 1  Id: zz of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   Child: 1  Const 73 of type int [line: 12]
.   .   Sibling: 3  Assign: <- of type int [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -5 size: 5] [line: 13]
.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 1  Const 211 of type int [line: 13]
.   .   Sibling: 4  Call: output of type void [line: 14]
.   .   .   Child: 0  Op: + of type int [line: 14]
.   .   .   .   Child: 0  Op: [ of type int [line: 14]
.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Global loc: -1 size: 4] [line: 14]
.   .   .   .   .   Child: 1  Op: - of type int [line: 14]
.   .   .   .   .   .   Child: 0  Const 33 of type int [line: 14]
.   .   .   .   .   .   Child: 1  Const 31 of type int [line: 14]
.   .   .   .   Child: 1  Op: [ of type int [line: 14]
.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -5 size: 5] [line: 14]
.   .   .   .   .   Child: 1  Op: / of type int [line: 14]
.   .   .   .   .   .   Child: 0  Const 9123 of type int [line: 14]
.   .   .   .   .   .   Child: 1  Op: + of type int [line: 14]
.   .   .   .   .   .   .   Child: 0  Const 9100 of type int [line: 14]
.   .   .   .   .   .   .   Child: 1  Const 23 of type int [line: 14]
.   .   Sibling: 5  Call: outnl of type void [line: 15]
Offset for end of global space: -9
Number of warnings: 0
Number of errors: 0

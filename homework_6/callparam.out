====================================
FILE: callparam.c-
WARNING(40): Variable 'x' may be uninitialized when used here.
WARNING(40): Variable 'y' may be uninitialized when used here.
WARNING(40): Variable 'z' may be uninitialized when used here.
WARNING(40): Variable 'XX' may be uninitialized when used here.
WARNING(40): Variable 'YY' may be uninitialized when used here.
WARNING(40): Variable 'ZZ' may be uninitialized when used here.
Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 1  Call: output of type void [line: 4]
.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Call: outputb of type void [line: 5]
.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   Sibling: 2  Call: outputc of type void [line: 6]
.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
.   .   Sibling: 3  Call: outnl of type void [line: 7]
Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   Child: 1  Call: output of type void [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 1  Const 1 of type int [line: 13]
.   .   Sibling: 1  Call: outputb of type void [line: 14]
.   .   .   Child: 0  Op: [ of type bool [line: 14]
.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14]
.   .   .   .   Child: 1  Const 2 of type int [line: 14]
.   .   Sibling: 2  Call: outputc of type void [line: 15]
.   .   .   Child: 0  Op: [ of type char [line: 15]
.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 3 of type int [line: 15]
.   .   Sibling: 3  Call: outnl of type void [line: 16]
Sibling: 2  Func: fred returns type void [mem: Global loc: 0 size: -8] [line: 20]
.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   Sibling: 1  Parm: y of type bool [mem: Parameter loc: -3 size: 1] [line: 20]
.   Sibling: 2  Parm: z of type char [mem: Parameter loc: -4 size: 1] [line: 20]
.   Sibling: 3  Parm: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 20]
.   Sibling: 4  Parm: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 20]
.   Sibling: 5  Parm: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 20]
.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 21]
.   .   Child: 1  Assign: <- of type int [line: 22]
.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 22]
.   .   .   Child: 1  Const 333 of type int [line: 22]
.   .   Sibling: 1  Assign: <- of type bool [line: 23]
.   .   .   Child: 0  Id: y of type bool [mem: Parameter loc: -3 size: 1] [line: 23]
.   .   .   Child: 1  Const true of type bool [line: 23]
.   .   Sibling: 2  Assign: <- of type char [line: 24]
.   .   .   Child: 0  Id: z of type char [mem: Parameter loc: -4 size: 1] [line: 24]
.   .   .   Child: 1  Const 'z' of type char [line: 24]
.   .   Sibling: 3  Assign: <- of type int [line: 26]
.   .   .   Child: 0  Op: [ of type int [line: 26]
.   .   .   .   Child: 0  Id: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 26]
.   .   .   .   Child: 1  Const 1 of type int [line: 26]
.   .   .   Child: 1  Const 444 of type int [line: 26]
.   .   Sibling: 4  Assign: <- of type bool [line: 27]
.   .   .   Child: 0  Op: [ of type bool [line: 27]
.   .   .   .   Child: 0  Id: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 27]
.   .   .   .   Child: 1  Const 2 of type int [line: 27]
.   .   .   Child: 1  Const false of type bool [line: 27]
.   .   Sibling: 5  Assign: <- of type char [line: 28]
.   .   .   Child: 0  Op: [ of type char [line: 28]
.   .   .   .   Child: 0  Id: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 28]
.   .   .   .   Child: 1  Const 3 of type int [line: 28]
.   .   .   Child: 1  Const 'a' of type char [line: 28]
.   .   Sibling: 6  Call: scalar of type void [line: 30]
.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 30]
.   .   .   Sibling: 1  Id: y of type bool [mem: Parameter loc: -3 size: 1] [line: 30]
.   .   .   Sibling: 2  Id: z of type char [mem: Parameter loc: -4 size: 1] [line: 30]
.   .   Sibling: 7  Call: array of type void [line: 31]
.   .   .   Child: 0  Id: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 31]
.   .   .   Sibling: 1  Id: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 31]
.   .   .   Sibling: 2  Id: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 31]
Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 35]
.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 36]
.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 37]
.   .   Sibling: 1  Var: y of type bool [mem: Local loc: -3 size: 1] [line: 37]
.   .   Sibling: 2  Var: z of type char [mem: Local loc: -4 size: 1] [line: 37]
.   .   Sibling: 3  Var: XX of array of type int [mem: Local loc: -6 size: 4] [line: 38]
.   .   Sibling: 4  Var: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 38]
.   .   Sibling: 5  Var: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 38]
.   .   Child: 1  Call: fred of type void [line: 40]
.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 40]
.   .   .   Sibling: 1  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 40]
.   .   .   Sibling: 2  Id: z of type char [mem: Local loc: -4 size: 1] [line: 40]
.   .   .   Sibling: 3  Id: XX of array of type int [mem: Local loc: -6 size: 4] [line: 40]
.   .   .   Sibling: 4  Id: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 40]
.   .   .   Sibling: 5  Id: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 40]
Offset for end of global space: 0
Number of warnings: 6
Number of errors: 0

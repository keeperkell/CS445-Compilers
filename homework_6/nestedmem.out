====================================
FILE: nestedmem.c-
WARNING(5): The variable 'i' seems not to be used.
WARNING(8): The variable 'i' seems not to be used.
WARNING(13): The variable 'i' seems not to be used.
WARNING(19): The variable 'z' seems not to be used.
WARNING(18): The variable 'i' seems not to be used.
WARNING(24): The variable 'z' seems not to be used.
WARNING(29): The parameter 'i' seems not to be used.
WARNING(48): The variable 'i' seems not to be used.
WARNING(37): The variable 'ii' seems not to be used.
Func: fred returns type void [mem: Global loc: 0 size: -2] [line: 3]
.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 4]
.   .   Child: 1  For [mem: None loc: 0 size: -3] [line: 5]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   Child: 1  Range [line: 5]
.   .   .   .   Child: 0  Const 1 of type int [line: 5]
.   .   .   .   Child: 1  Const 10 of type int [line: 5]
.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 6]
.   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 1  Range [line: 6]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 6]
.   .   .   .   .   Child: 1  Const 10 of type int [line: 6]
.   .   .   .   Child: 2  Assign: <- of type int [line: 7]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 7]
.   .   Sibling: 1  For [mem: None loc: 0 size: -3] [line: 8]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   Child: 1  Range [line: 8]
.   .   .   .   Child: 0  Const 1 of type int [line: 8]
.   .   .   .   Child: 1  Const 10 of type int [line: 8]
.   .   .   Child: 2  If [line: 9]
.   .   .   .   Child: 0  Const true of type bool [line: 9]
.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 9]
.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 11]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 11]
.   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 13]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 1  Range [line: 13]
.   .   .   .   Child: 0  Const 1 of type int [line: 13]
.   .   .   .   Child: 1  Const 10 of type int [line: 13]
.   .   .   Child: 2  While [line: 14]
.   .   .   .   Child: 0  Const false of type bool [line: 14]
.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 14]
.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 16]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 16]
.   .   Sibling: 3  For [mem: None loc: 0 size: -3] [line: 18]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 1  Range [line: 18]
.   .   .   .   Child: 0  Const 1 of type int [line: 18]
.   .   .   .   Child: 1  Const 10 of type int [line: 18]
.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 19]
.   .   .   .   Child: 0  Var: z of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 1  Range [line: 19]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 19]
.   .   .   .   .   Child: 1  Const 11 of type int [line: 19]
.   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -5] [line: 19]
.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 21]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 21]
.   .   Sibling: 4  For [mem: None loc: 0 size: -3] [line: 23]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   Child: 1  Range [line: 23]
.   .   .   .   Child: 0  Const 1 of type int [line: 23]
.   .   .   .   Child: 1  Const 10 of type int [line: 23]
.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 24]
.   .   .   .   Child: 0  Var: z of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   .   Child: 1  Range [line: 24]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 24]
.   .   .   .   .   Child: 1  Const 11 of type int [line: 24]
.   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -4] [line: 24]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 25]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 25]
Sibling: 1  Func: cat returns type void [mem: Global loc: 0 size: -3] [line: 29]
.   Child: 0  Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 29]
.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 29]
.   .   Child: 1  If [line: 30]
.   .   .   Child: 0  Const true of type bool [line: 30]
.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 30]
.   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   Child: 1  Assign: <- of type int [line: 32]
.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 32]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 32]
Sibling: 2  Func: errorZ returns type void [mem: Global loc: 0 size: -3] [line: 36]
.   Child: 0  Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 36]
.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 36]
.   .   Child: 0  Var: ii of type int [mem: Local loc: -3 size: 1] [line: 37]
.   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 38]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 39]
.   .   .   Child: 1  If [line: 41]
.   .   .   .   Child: 0  Const true of type bool [line: 41]
.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 41]
.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 42]
.   .   .   .   .   Child: 1  Assign: <- of type int [line: 43]
.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 43]
.   .   .   .   .   .   Child: 1  Const 0 of type int [line: 43]
.   .   .   Sibling: 1  Assign: <- of type int [line: 45]
.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 45]
.   .   .   .   Child: 1  Const 0 of type int [line: 45]
.   .   Sibling: 1  For [mem: None loc: 0 size: -5] [line: 48]
.   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 48]
.   .   .   Child: 1  Range [line: 48]
.   .   .   .   Child: 0  Const 1 of type int [line: 48]
.   .   .   .   Child: 1  Const 10 of type int [line: 48]
.   .   .   Child: 2  Compound [mem: None loc: 0 size: -6] [line: 49]
.   .   .   .   Child: 0  Var: ii of type int [mem: Local loc: -5 size: 1] [line: 50]
.   .   .   .   Child: 1  Assign: <- of type int [line: 51]
.   .   .   .   .   Child: 0  Id: ii of type int [mem: Local loc: -5 size: 1] [line: 51]
.   .   .   .   .   Child: 1  Const 0 of type int [line: 51]
.   .   .   .   Sibling: 1  Call: cat of type void [line: 52]
.   .   .   .   .   Child: 0  Id: ii of type int [mem: Local loc: -5 size: 1] [line: 52]
.   .   Sibling: 2  Call: errorZ of type void [line: 54]
.   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 54]
Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 57]
.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 57]
.   .   Child: 1  Call: fred of type void [line: 57]
Offset for end of global space: 0
Number of warnings: 9
Number of errors: 0

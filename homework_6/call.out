====================================
FILE: call.c-
Func: cheyenne returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 1  Call: output of type void [line: 4]
.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Call: outputb of type void [line: 5]
.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   Sibling: 2  Call: outputc of type void [line: 6]
.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
.   .   Sibling: 3  Call: outnl of type void [line: 7]
Sibling: 1  Func: sioux returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   Child: 1  Call: output of type void [line: 13]
.   .   .   Child: 0  Op: [ of type int [line: 13]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 1  Const 1 of type int [line: 13]
.   .   Sibling: 1  Call: outputb of type void [line: 14]
.   .   .   Child: 0  Op: [ of type bool [line: 14]
.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14]
.   .   .   .   Child: 1  Const 2 of type int [line: 14]
.   .   Sibling: 2  Call: outputc of type void [line: 15]
.   .   .   Child: 0  Op: [ of type char [line: 15]
.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15]
.   .   .   .   Child: 1  Const 3 of type int [line: 15]
.   .   Sibling: 3  Call: outnl of type void [line: 16]
Sibling: 2  Func: comanche returns type void [mem: Global loc: 0 size: -3] [line: 20]
.   Child: 0  Parm: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   Child: 1  Compound [mem: None loc: 0 size: -15] [line: 21]
.   .   Child: 0  Var: b of array of type bool [mem: Local loc: -4 size: 6] [line: 22]
.   .   Sibling: 1  Var: c of array of type char [mem: Local loc: -10 size: 6] [line: 23]
.   .   Child: 1  Assign: <- of type bool [line: 25]
.   .   .   Child: 0  Op: [ of type bool [line: 25]
.   .   .   .   Child: 0  Id: b of array of type bool [mem: Local loc: -4 size: 6] [line: 25]
.   .   .   .   Child: 1  Const 2 of type int [line: 25]
.   .   .   Child: 1  Const true of type bool [line: 25]
.   .   Sibling: 1  Assign: <- of type char [line: 26]
.   .   .   Child: 0  Op: [ of type char [line: 26]
.   .   .   .   Child: 0  Id: c of array of type char [mem: Local loc: -10 size: 6] [line: 26]
.   .   .   .   Child: 1  Const 3 of type int [line: 26]
.   .   .   Child: 1  Const 'z' of type char [line: 26]
.   .   Sibling: 2  Call: sioux of type void [line: 27]
.   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   .   Sibling: 1  Id: b of array of type bool [mem: Local loc: -4 size: 6] [line: 27]
.   .   .   Sibling: 2  Id: c of array of type char [mem: Local loc: -10 size: 6] [line: 27]
Sibling: 3  Var: ga of array of type int [mem: Global loc: -1 size: 6] [line: 32]
Sibling: 4  Var: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 33]
Sibling: 5  Var: gc of array of type char [mem: Global loc: -14 size: 8] [line: 34]
Sibling: 6  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 36]
.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 37]
.   .   Child: 0  Var: a of array of type int [mem: Local loc: -3 size: 6] [line: 38]
.   .   Sibling: 1  Var: b of array of type bool [mem: Local loc: -9 size: 7] [line: 39]
.   .   Sibling: 2  Var: c of array of type char [mem: Local loc: -16 size: 8] [line: 40]
.   .   Child: 1  Assign: <- of type int [line: 42]
.   .   .   Child: 0  Op: [ of type int [line: 42]
.   .   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 42]
.   .   .   .   Child: 1  Const 1 of type int [line: 42]
.   .   .   Child: 1  Const 555 of type int [line: 42]
.   .   Sibling: 1  Assign: <- of type bool [line: 43]
.   .   .   Child: 0  Op: [ of type bool [line: 43]
.   .   .   .   Child: 0  Id: b of array of type bool [mem: Local loc: -9 size: 7] [line: 43]
.   .   .   .   Child: 1  Const 2 of type int [line: 43]
.   .   .   Child: 1  Const true of type bool [line: 43]
.   .   Sibling: 2  Assign: <- of type char [line: 44]
.   .   .   Child: 0  Op: [ of type char [line: 44]
.   .   .   .   Child: 0  Id: c of array of type char [mem: Local loc: -16 size: 8] [line: 44]
.   .   .   .   Child: 1  Const 3 of type int [line: 44]
.   .   .   Child: 1  Const 'z' of type char [line: 44]
.   .   Sibling: 3  Call: cheyenne of type void [line: 45]
.   .   .   Child: 0  Const 666 of type int [line: 45]
.   .   .   Sibling: 1  Const true of type bool [line: 45]
.   .   .   Sibling: 2  Const 'c' of type char [line: 45]
.   .   Sibling: 4  Call: cheyenne of type void [line: 46]
.   .   .   Child: 0  Const 777 of type int [line: 46]
.   .   .   Sibling: 1  Const false of type bool [line: 46]
.   .   .   Sibling: 2  Const 'd' of type char [line: 46]
.   .   Sibling: 5  Call: sioux of type void [line: 47]
.   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 47]
.   .   .   Sibling: 1  Id: b of array of type bool [mem: Local loc: -9 size: 7] [line: 47]
.   .   .   Sibling: 2  Id: c of array of type char [mem: Local loc: -16 size: 8] [line: 47]
.   .   Sibling: 6  Call: comanche of type void [line: 48]
.   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 48]
.   .   Sibling: 7  Assign: <- of type int [line: 50]
.   .   .   Child: 0  Op: [ of type int [line: 50]
.   .   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 50]
.   .   .   .   Child: 1  Const 1 of type int [line: 50]
.   .   .   Child: 1  Const 888 of type int [line: 50]
.   .   Sibling: 8  Assign: <- of type bool [line: 51]
.   .   .   Child: 0  Op: [ of type bool [line: 51]
.   .   .   .   Child: 0  Id: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 51]
.   .   .   .   Child: 1  Const 2 of type int [line: 51]
.   .   .   Child: 1  Const false of type bool [line: 51]
.   .   Sibling: 9  Assign: <- of type char [line: 52]
.   .   .   Child: 0  Op: [ of type char [line: 52]
.   .   .   .   Child: 0  Id: gc of array of type char [mem: Global loc: -14 size: 8] [line: 52]
.   .   .   .   Child: 1  Const 3 of type int [line: 52]
.   .   .   Child: 1  Const 'g' of type char [line: 52]
.   .   Sibling: 10  Call: sioux of type void [line: 53]
.   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 53]
.   .   .   Sibling: 1  Id: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 53]
.   .   .   Sibling: 2  Id: gc of array of type char [mem: Global loc: -14 size: 8] [line: 53]
.   .   Sibling: 11  Call: comanche of type void [line: 54]
.   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 54]
.   .   Sibling: 12  Compound [mem: None loc: 0 size: -23] [line: 56]
.   .   .   Child: 0  Var: ga of static array of type int [mem: LocalStatic loc: -22 size: 6] [line: 57]
.   .   .   Sibling: 1  Var: gb of static array of type bool [mem: LocalStatic loc: -28 size: 7] [line: 58]
.   .   .   Sibling: 2  Var: gc of static array of type char [mem: LocalStatic loc: -35 size: 8] [line: 59]
.   .   .   Child: 1  Assign: <- of type int [line: 60]
.   .   .   .   Child: 0  Op: [ of type int [line: 60]
.   .   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size: 6] [line: 60]
.   .   .   .   .   Child: 1  Const 1 of type int [line: 60]
.   .   .   .   Child: 1  Const 999 of type int [line: 60]
.   .   .   Sibling: 1  Assign: <- of type bool [line: 61]
.   .   .   .   Child: 0  Op: [ of type bool [line: 61]
.   .   .   .   .   Child: 0  Id: gb of static array of type bool [mem: LocalStatic loc: -28 size: 7] [line: 61]
.   .   .   .   .   Child: 1  Const 2 of type int [line: 61]
.   .   .   .   Child: 1  Const true of type bool [line: 61]
.   .   .   Sibling: 2  Assign: <- of type char [line: 62]
.   .   .   .   Child: 0  Op: [ of type char [line: 62]
.   .   .   .   .   Child: 0  Id: gc of static array of type char [mem: LocalStatic loc: -35 size: 8] [line: 62]
.   .   .   .   .   Child: 1  Const 3 of type int [line: 62]
.   .   .   .   Child: 1  Const 's' of type char [line: 62]
.   .   .   Sibling: 3  Call: sioux of type void [line: 64]
.   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size: 6] [line: 64]
.   .   .   .   Sibling: 1  Id: gb of static array of type bool [mem: LocalStatic loc: -28 size: 7] [line: 64]
.   .   .   .   Sibling: 2  Id: gc of static array of type char [mem: LocalStatic loc: -35 size: 8] [line: 64]
.   .   .   Sibling: 4  Call: comanche of type void [line: 65]
.   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size: 6] [line: 65]
Offset for end of global space: -42
Number of warnings: 0
Number of errors: 0
